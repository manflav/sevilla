{"version":3,"sources":["node_modules/ol/events/Event.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Disposable.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/Observable.js","node_modules/ol/util.js","node_modules/ol/Object.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/asserts.js","node_modules/ol/Feature.js","node_modules/ol/transform.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/math.js","node_modules/ol/string.js","node_modules/ol/coordinate.js","node_modules/ol/sphere.js","node_modules/ol/console.js","node_modules/ol/proj.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/Geolocation.js","node_modules/ol/render/EventType.js","node_modules/ol/ImageState.js","node_modules/color-space/rgb.js","node_modules/color-space/xyz.js","node_modules/color-space/luv.js","node_modules/color-space/lchuv.js","node_modules/color-name/index.js","node_modules/color-parse/index.js","node_modules/color-space/hsl.js","node_modules/color-rgba/index.js","node_modules/ol/color.js","node_modules/ol/has.js","node_modules/ol/dom.js","node_modules/ol/Image.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/style/IconImage.js","node_modules/ol/style/Fill.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/flat/length.js","node_modules/ol/geom/LineString.js","node_modules/ol/style/Stroke.js","node_modules/ol/size.js","node_modules/ol/style/Image.js","node_modules/ol/colorlike.js","node_modules/ol/css.js","node_modules/ol/render/canvas.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Style.js","node_modules/ol/style/Text.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/tilegrid/common.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/easing.js","node_modules/ol/View.js","node_modules/ol/layer/Layer.js","node_modules/rbush/rbush.min.js","node_modules/ol/style/Icon.js","node_modules/ol/expr/expression.js","node_modules/ol/expr/cpu.js","node_modules/ol/render/canvas/style.js","node_modules/ol/layer/BaseVector.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Builder.js","node_modules/ol/render/canvas/ImageBuilder.js","node_modules/ol/render/canvas/LineStringBuilder.js","node_modules/ol/render/canvas/PolygonBuilder.js","node_modules/ol/geom/flat/linechunk.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/render/canvas/TextBuilder.js","node_modules/ol/render/canvas/BuilderGroup.js","node_modules/ol/renderer/Layer.js","node_modules/ol/render/Event.js","node_modules/ol/render/canvas/ZIndexContext.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/render/canvas/Executor.js","node_modules/ol/render/canvas/ExecutorGroup.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/style.js","node_modules/ol/render/canvas/hitdetect.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/layer/Vector.js","node_modules/ol/structs/RBush.js","node_modules/ol/geom/Circle.js","node_modules/ol/geom/GeometryCollection.js","node_modules/ol/geom/MultiLineString.js","node_modules/ol/geom/MultiPoint.js","node_modules/ol/geom/flat/center.js","node_modules/ol/geom/MultiPolygon.js","node_modules/ol/geom.js","node_modules/ol/render/Feature.js","node_modules/ol/source/Source.js","node_modules/ol/source/VectorEventType.js","node_modules/ol/loadingstrategy.js","node_modules/ol/featureloader.js","node_modules/ol/source/Vector.js","node_modules/ol/render.js","node_modules/ol/geom/flat/geodesic.js","node_modules/ol/layer/Graticule.js","node_modules/ol/ImageCanvas.js","node_modules/ol/TileState.js","node_modules/ol/Tile.js","node_modules/ol/ImageTile.js","node_modules/ol/Kinetic.js","node_modules/ol/renderer/Map.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileQueue.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/control/defaults.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/Key.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/interaction/defaults.js","node_modules/ol/Map.js","node_modules/ol/Overlay.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/TileRange.js","node_modules/ol/VectorRenderTile.js","node_modules/ol/VectorTile.js","node_modules/ol/index.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/BaseTile.js","node_modules/ol/reproj/common.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/reproj.js","node_modules/ol/reproj/Tile.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/layer/Tile.js","node_modules/ol/source/TileEventType.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid/WMTS.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/TileImage.js","node_modules/ol/source/XYZ.js","node_modules/ol/source/OSM.js","node_modules/ol/control/FullScreen.js","node_modules/ol/control/MousePosition.js","node_modules/ol/control/OverviewMap.js","node_modules/ol/control/ScaleLine.js","node_modules/ol/control/ZoomSlider.js","node_modules/ol/control/ZoomToExtent.js","node_modules/ol/control.js","js/mapa_openlayers.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["BaseEvent","type","_classCallCheck","propagationStopped","defaultPrevented","target","_createClass","key","value","preventDefault","stopPropagation","evt","_default","exports","default","PROPERTYCHANGE","Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","descending","linearFindNearest","arr","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","remove","obj","indexOf","splice","equals","arr1","arr2","len1","stableSort","compareFnc","index","sort","isSorted","func","strict","compare","every","currentVal","res","_array","require","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","promiseGetter","err","Promise","reject","resolve","clear","object","property","isEmpty","_Disposable2","_interopRequireDefault","_Event","_functions","_obj","__esModule","_typeof","o","Symbol","iterator","constructor","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","protoProps","staticProps","t","_toPrimitive","r","e","toPrimitive","String","Number","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","self","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","Target","_Disposable","_this","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","keys","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","_Target","_EventType","_events","Observable","_EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","changed","EventType","getRevision","len","ol_key","unByKey","EventTarget","abstract","Error","uidCounter_","getUid","ol_uid","VERSION","_Event2","_ObjectEventType","_Observable2","_util","ObjectEvent","oldValue","BaseObject","_Observable","values","_this2","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","concat","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","ADD","REMOVE","_Object","_CollectionEventType","Property","LENGTH","CollectionEvent","element","Collection","_BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","CollectionEventType","removeAt","prev","setAt","except","assert","assertion","errorMessage","_asserts","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","id","name","styles","getZIndex","tmp_","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","setFromArray","coordinate","x","y","rotate","angle","cos","Math","sin","scale","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","composeCssTransform","toString","invert","makeInverse","det","determinant","mat","matrixPrecision","transformString","map","round","join","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","_Relationship","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","from","test","l","u","next","done","return","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","minX","min","minY","maxX","max","maxY","createOrUpdate","buffer","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","approximatelyEquals","tolerance","abs","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getEnlargedArea","getForViewAndSize","center","resolution","rotation","size","_getRotatedViewport","getRotatedViewport","_getRotatedViewport2","x0","y0","x1","y1","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersectionArea","intersection","getIntersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","width","height","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","worldsAway","floor","wrapAndSliceX","isFinite","unitByCode","fromCode","code","METERS_PER_UNIT","PI","_Units","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","_Projection2","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","_Projection","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","destination","sourceCode","destinationCode","clamp","squaredSegmentDistance","squaredDistance","solveLinearSystem","maxRow","maxEl","absValue","j","coef","k","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","pow","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","parseInt","n2","_extent","_math","_string","delta","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","createStringXY","fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringHDMS","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getType","coords","jj","getCoordinates","geometries","getGeometries","getAreaInternal","bearing","lon1","dByR","lat","asin","lon","levels","info","warn","error","none","level","setLevel","_console","console","_console2","_console3","_epsg","_epsg2","_projections","_transforms","_coordinate","_sphere","showCoordinateWarning","disableCoordinateWarning","disable","hide","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","clearProj","clearTransformFuncs","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","toLonLat","lonLat","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransformFunc","getTransform","transformExtent","transformWithProjections","userProjection","setUserProjection","clearUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","fromUserResolution","destMetersPerUnit","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","_transform","_extent2","_proj","_transform2","tmpTransform","createTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","_Geometry2","SimpleGeometry","_Geometry","layout","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","simplifyLineString","highQuality","radialDistance","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","douglasPeuckerMultiArray","simplifiedEndss","snap","quantize","quantizeArray","quantizeMultiArray","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","_SimpleGeometry2","_closest","_deflate","_simplify","_inflate","_area","LinearRing","_SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","_contains","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","_segments","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","_reverse","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverse","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","startOrientation","orientation","_LinearRing","_Point","_interiorpoint","_intersectsextent","_orient","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","_Polygon","_get","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","POSITION","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","GeolocationErrorType","GeolocationError","_BaseEvent","message","Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","navigator","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","IDLE","LOADING","LOADED","EMPTY","channel","alias","_rgb","xyz","whitepoint","A","C","D50","D55","D65","D75","F2","F7","F11","E","rgb","_xyz","white","z","g","arg","_u","_v","v","xn","yn","zn","vn","luv","yr","_luv","lchuv","h","hr","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","_colorName","parse","baseHues","cstr","parts","alpha","space","toLowerCase","names","isShort","exec","dims","trim","shift","parseFloat","endsWith","match","hsl","s","t1","t2","t3","_colorParse","_hsl","rgba","color","raw","parsed","_lchuv","_colorRgba","_createForOfIteratorHelper","allowArrayLike","it","F","_e","normalCompletion","didErr","step","_e2","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","rgbaToLcha","lchaToRgba","fromString","parseRgba","_iterator","_step","normalize","asArray","isStringColor","_","ua","userAgent","FIREFOX","SAFARI","SAFARI_BUG_237906","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","IMAGE_DECODE","Image","decode","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","passive","window","_has","createCanvasContext2D","canvasPool","settings","canvas","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","outerWidth","offsetWidth","getComputedStyle","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","appendChild","insertBefore","_ImageState","ImageWrapper","pixelRatio","stateOrLoader","pixelRatio_","state","ImageState","image_","loader","getImage","getPixelRatio","getResolution","getState","load","requestResolution","then","image","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","catch","finally","setImage","setResolution","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","unlisten","handleLoad","handleError","decodeFallback","complete","_color","_dom","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","getCacheKey","getPattern","pattern","update","getImageState","ready","createPattern","setSize","maxCacheSize","colorString","shared","_Image","_IconImageCache","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","getHitDetectionImage","fillRect","getSrc","ctx","globalCompositeOperation","fillStyle","_this3","onChange","cacheKey","iconImageCache","_IconImage","Fill","patternImage_","setColor","getColor","patternImage","getIconImage","loading","interpolatePoint","fraction","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","lineStringLength","linearRingLength","perimeter","_interpolate","_length","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","getFlatMidpoint","_this$flatMidpoint_","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","num","hasArea","ratio","toSize","_size","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImageSize","getOrigin","setDisplacement","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","unlistenImageChange","asColorLike","asCanvasPattern","iconCache","canvasPattern","patternCanvasContext","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","_css","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","retries","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","display","left","body","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","rotateAtOffset","offsetX","offsetY","drawImageOrLabel","labelOrImage","originX","originY","w","save","globalAlpha","contextInstructions","executeLabelInstructions","restore","label","_colorlike","_canvas","RegularShape","_ImageStyle","canvases_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius2_","radius2","angle_","stroke_","stroke","renderOptions_","render","getFill","getPoints","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","strokeWidth","r1","r2","miterRatio","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","_this$stroke_$getColo","_this$stroke_$getWidt","_this$stroke_$getLine","_this$stroke_$getLine2","_this$stroke_$getLine3","_this$stroke_$getMite","maxRadius","createPath_","drawHitDetectionCanvas_","arc","angle0","radiusC","lineTo","closePath","_RegularShape2","CircleStyle","_RegularShape","setRadius","_Circle","_Fill","_Stroke","Style","geometry_","geometryFunction_","defaultGeometryFunction","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","zIndex","_geometry","_this$getRenderer","getRenderer","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","feature","setZIndex","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","DEFAULT_FILL_COLOR","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","_Property","BaseLayer","background_","background","LayerProperty","visible","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","layer","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setVisible","zindex","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","upAndDown","_ViewHint","_ViewProperty","_common","_centerconstraint","_resolutionconstraint","_rotationconstraint","_easing","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setCenterInternal","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getUpdatedOptions_","newOptions","getZoom","animate","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","animationCallback","Date","now","series","animation","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","setTimeout","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","coordinatesEqual","_Base","_EventType2","_View","Layer","_BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","isVisible","view","frameState","getMapInternal","getView","layerStatesArray","getLayerGroup","layerState","find","layerExtent","inView","getAttributions","attributions","layerRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","RenderEventType","renderEvent","some","arrayLayerState","createRenderer","hasRenderer","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","offset_","offsetOrigin_","offsetOrigin","_options$size","initialOptions_","onload","imageSize","setAnchor","iconImageSize","_parsers","_construct","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","iter","_defineProperty","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","namedType","includesType","broad","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","_len","_key","newParsingContext","variables","Set","featureId","geometryType","getTypeFromHint","typeHint","encoded","parseCallExpression","_iterator2","_step2","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","parsers","createParser","_ref","_ref2","withArgsCount","withGetArgs","_ref3","_ref4","firstArg","withVarArgs","withNoArgs","usesFeatureId","parseArgsOfType","usesGeometryType","narrowArgsType","parsedArgs","outputType","withEvenArgs","parseMatchArgs","parseInterpolateArgs","withOddArgs","parseCaseArgs","parseInArgs","parsePaletteArgs","varName","initialValue","operation","minArgs","maxArgs","argCount","plural","range","argType","expression","gotType","expectedType","sameType","JSON","stringify","argsCount","inputType","fallback","expectedInputType","interpolationType","interpolation","stop","condition","needleType","colors","parsedColors","returnType","_len2","argValidators","_key2","actualType","parser","computeGeometryType","substring","_expression","newEvaluationContext","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","compileInterpolateExpression","compileConvertExpression","nameExpression","op","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","input1","output1","input2","output2","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","_Icon","_Style","_Text","_cpu","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","patternEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","optionalDeclutterMode","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","optionalColorLike","optionalString","optionalNumberArray","optionalNumber","optionalSize","icon","pointsName","radiusName","requireNumber","shape","evaluateRadius","Circle","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","requireColorLike","requireNumberArray","requireSize","requireSizeLike","_Layer2","_rbush","_interopRequireWildcard","_style","_getRequireWildcardCache","WeakMap","has","RENDER_ORDER","BaseVectorLayer","_Layer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","toStyleLike","toStyleFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","_Instruction","_VectorContext2","CanvasBuilder","_VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","_Builder","CanvasImageBuilder","_CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","origin","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","_currentChunk$slice","_currentChunk$slice2","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","_linechunk","_straightchunk","TEXT_ALIGN","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","geometryWidths","getFlatMidpoints","getFlatInteriorPoints","beg","keep","saveTextStates_","p0","p1","p2","p3","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","_ImageBuilder","_LineStringBuilder","_PolygonBuilder","_TextBuilder","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","matches","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","RenderEvent","inversePixelTransform","ZIndexContext","instructions_","context_","Proxy","CanvasRenderingContext2D","pushMethodArgs_","draw","instructionsAtIndex","instructionAtIndex","_ZIndexContext","pixelContext","createPixelContext","CanvasLayerRenderer","_LayerRenderer","container","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","_textpath","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","textIsArray","_getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","imageDeclutter","renderImage","renderText","collides","insert","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","_Executor","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","getPixelIndexArray","imageData","idx","zs","executor","targetContext","builderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","CanvasImmediateRenderer","userTransform","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","setTransform","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","_Immediate","HIT_DETECT_RESOLUTION","createHitDetectionImageData","features","userExtent","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","circleReplay","textReplay","renderFeature","replayGroup","loadingPromises","all","renderFeatureInternal","renderGeometry","geometryRenderer","declutterBuilderGroup","lineStringReplay","polygonReplay","hasText","imageReplay","hasImage","_BuilderGroup","_ExecutorGroup","_hitdetect","_vector","CanvasVectorLayerRenderer","_CanvasLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","viewHints","getWrapX","endWorld","world","setDrawContext_","resetDrawContext_","layerIndex","transformToString","hasRenderListeners","clipped","getSquaredRenderTolerance","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","loadFeatures","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","_BaseVector","_VectorLayer","VectorLayer","_BaseVectorLayer","maxEntries","rbush_","RBush_","items_","extents","items","uid","bbox","getAll","getInExtent","search","forEach_","forEachInExtent","toJSON","rbush","setCenterAndRadius","getRadiusSquared_","circleExtent","GeometryCollection","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometries","setGeometriesArray","_LineString","MultiLineString","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","midpoints","midpoint","MultiPoint","appendPoint","multiPoint","getPoint","_MultiPoint","_center","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","_GeometryCollection","_MultiLineString","_MultiPolygon","_Feature","_geom","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","_this$ends_","enableSimplifyTransformed","toGeometry","toFeature","geometryName","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getAttributionsCollapsible","getInterpolate","refresh","setAttributions","setState","attributionLike","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","getZForResolution","getTileRangeForExtentAndZ","getTileCoordExtent","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","setWithCredentials","xhrWithCredentials","_Collection","_RBush","_Source2","_VectorEventType","_loadingstrategy","_featureloader","VectorSourceEvent","VectorSource","_Source","loader_","format_","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","collection","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","_this4","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","_this5","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","_this6","loadedExtentsRtree","extentsToLoad","_loop","extentToLoad","alreadyLoaded","removeLoadedExtent","removeFeatures","removedFeatures","removedFeature","featureChangeKeys","removed","setLoader","setUrl","toContext","scaleTransform","getVectorContext","canvasPixelRatio","multiplyTransform","getRenderPixel","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","geoM","fracA","fracB","fracM","greatCircleArc","lon2","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","frac","D","cosD","sinD","meridian","epsg4326Projection","parallel","_Vector","_Vector2","_render","_geodesic","DEFAULT_STROKE_STYLE","INTERVALS","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","realWorldExtent","renderExtent","updateProjectionInfo","equivalentProjection","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","minLat","maxLat","getMeridian_","geom","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","startWorld","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","getParallelPoint_","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","dist","bottom","top","clampedBottom","clampedTop","coordinate0","getMeridians","clampedLeft","clampedRight","getParallels","toLonLatTransform","lonLatCoordinates","worldExtentP","ImageCanvas","_ImageWrapper","error_","getError","handleLoad_","_TileState","Tile","interimTile","transition_","transition","transitionStarts_","release","TileState","getKey","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","_Tile2","ImageTile","_Tile","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","pixelToCoordinateTransform","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","order","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","expireIconCache","_Map","CompositeMapRenderer","_MapRenderer","fontChangeListenerKey_","redrawText","element_","getViewport","firstChild","children_","renderedVisible_","renderedLayerStates","previousElement","sourceState","GroupEvent","LAYERS","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","_MapEvent2","MapBrowserEvent","_MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_MapBrowserEvent","_MapBrowserEventType","_Target2","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","_PriorityQueue2","TileQueue","_PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","_MapEventType","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","_Control2","_regeneratorRuntime","asyncIterator","toStringTag","define","wrap","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","isGeneratorFunction","mark","awrap","async","rval","handle","_catch","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","Attribution","_Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","getAllLayers","flatMap","setCollapsible","_updateElement_","_callee","_callee$","_context","attribution","updateElement_","_x","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","contains","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","_Attribution","_Rotate","_Zoom","defaults","controls","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attributionOptions","ACTIVE","Interaction","setActive","getActive","InteractionProperty","mapBrowserEvent","active","pan","zoomByDelta","_Interaction2","DoubleClickZoom","_Interaction","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","touchOnly","pointerEvt","penOnly","primaryAction","isPrimary","_Pointer","_condition","DragPan","_PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","px","getOverlayContainer","setPixels","createOrUpdateGeometry","pixels","_Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","_DragBox2","DragZoom","_DragBox","out_","out","UP","DOWN","_Key","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","_DoubleClickZoom","_DragPan","_DragRotate","_DragZoom","_KeyboardPan","_KeyboardZoom","_Kinetic","_MouseWheelZoom","_PinchRotate","_PinchZoom","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","_Composite","_Group","_MapBrowserEventHandler","_MapProperty","_EventType3","_TileQueue","_defaults","_defaults2","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewport","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","cont","handlePostRender","tileQueue","lowOnFrameBudget","unobserve","ShadowRoot","host","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","moveStart","equalsExtent","idle","setLayerGroup","oldLayerGroup","computedStyle","getClientRects","oldSize","ELEMENT","OFFSET","POSITIONING","Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","expireCache","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","_this$entries_$key","getKeyZXY","getCacheKeyForTileKey","_tileKey$substring$sp","_tileKey$substring$sp2","fromKey","hash","withinExtentAndZ","getFullTileRange","_LRUCache2","_tilecoord","TileCache","_LRUCache","pruneExceptNewestZ","TileRange","containsTileRange","VectorRenderTile","urlTileCoord","getSourceTiles","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","wrappedTileCoord","hasContext","getReplayState","renderedRenderOrder","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","VectorTile","features_","onLoad","setFeatures","onError","_Geolocation","_Graticule","_ImageCanvas","_ImageTile","_Overlay","_TileCache","_TileRange","_VectorRenderTile","_VectorTile","PRELOAD","USE_INTERIM_TILES_ON_ERROR","_TileProperty","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","u2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","compensationFactor","calculateSourceExtentResolution","triangulation","sources","renderEdges","drawSingle","clipExtent","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","_Triangulation","_reproj","ReprojTile","sourceTileGrid","targetTileGrid","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpTileRange_","isDrawableTile","tileState","getTile","tileSource","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","tileCoordIntersectsViewport","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","toTransformString","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","_BaseTile","_TileLayer","TileLayer","_BaseTileLayer","TILELOADSTART","TILELOADEND","TILELOADERROR","tmpTileCoord","DECIMALS","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","opt_direction","fullTileRanges","_TileGrid2","WMTSTileGrid","_TileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","supportedCRSPropName","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","tileWidthPropName","tileHeightPropName","switchOriginXY","substr","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","_WMTS","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","_tilegrid","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileGrid","scaleSize","getTileCoordForTileUrlFunction","TileSourceEvent","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","charCodeAt","stopCharCode","charCode","_TileEventType","_tileurlfunction","UrlTile","_TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","_UrlTile2","TileImage","_UrlTile","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","_TileImage2","XYZ","_TileImage","_XYZ2","ATTRIBUTION","OSM","_XYZ","events","FullScreenEventType","ENTERFULLSCREEN","LEAVEFULLSCREEN","FullScreen","keys_","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","isFullScreenSupported","isFullScreen","exitFullScreen","requestFullScreenWithKeys","requestFullScreen","handleFullScreenChange_","wasInFullscreen","fullscreen","_element$classList","_element$classList2","_element$classList3","_element$classList4","oldMap","requestFullscreen","fullscreenEnabled","fullscreenElement","exitFullscreen","COORDINATE_FORMAT","MousePosition","coordinateFormat","setCoordinateFormat","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","MAX_RATIO","MIN_RATIO","OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","viewExtent_","ovmapDiv_","view_","ovmap","ovmap_","boxSizing","boxOverlay_","scope","overlayBox","computeDesiredMousePosition","mousePosition","move","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","ovmapSize","ovview","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","LN2","updateBox_","ovresolution","ovmapPostrenderKey_","getOverviewMap","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","dpi","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","createScaleBar","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","scaleBarText","isLast","lengthString","inchesPerMeter","Direction","VERTICAL","HORIZONTAL","ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","ZoomToExtent","handleZoomToExtent","_FullScreen","_MousePosition","_OverviewMap","_ScaleLine","_ZoomSlider","_ZoomToExtent","_ol2","_OSM","_control","overviewoptions","bundleURL","getBundleURLCached","getBundleURL","getBaseURL","bundle","updateLink","link","newLink","cloneNode","href","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module","OVERLAY_ID","OldModule","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","createErrorOverlay","stackTrace","innerText","getParents","modules","parents","dep","Function","deps","cached","cb"],"mappings":"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,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA,KAPrC;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9FA,IA+FMm/C,KAAK;EACT;AACF;AACA;EACE,SAAAA,MAAYl2C,OAAO,EAAE;IAAAzQ,eAAA,OAAA2mD,KAAA;IAC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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAMkoD,gBAAgB,GAAG,CAAC;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvEA,IAwEMC,IAAI,0BAAA/gD,WAAA;EACR;AACF;AACA;EACE,SAAA+gD,KAAY7gD,O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,EAAE,EACN,CAAC,GAAG,EAAE,EACN,CAAC,GAAG,EAAE,EACN,EAAE,GAAG,IAAI,EACT,EAAE,GAAG,IAAI,EACT,EAAE,GAAG,IAAI,EACT,CAAC,GAAG,IAAI,EACR,CAAC,GAAG,IAAI,EACR,CAAC,GAAG,IAAI,CACT;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IASMC,SAAS,0BAAAvP,YAAA;EACb;AACF;AACA;EACE,SAAAuP,UAAYz4F,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAAkpG,SAAA;IACnBz4F,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhC,IAAM2rD,WAAW,GAAGj1D,MAAM,CAAC6H,MAAM,CAC/B;MACEmjE,oBAAoB,EAAE,IAAI;MAC1BC,sBAAsB,EAAE,IAAI;MAC5BF,YAAY,EAAE;IAChB,CAAC,EACDzhE,OACF,CAAC;IAED,OAAO2rD,WAAW,CAAC+sC,QAAQ;IAC3B,OAAO/sC,WAAW,CAAC/W,WAAW;IAC9B,OAAO+W,WAAW,CAACgtC,UAAU;IAC7B,OAAOhtC,WAAW,CAACitC,UAAU;IAC7B,OAAOjtC,WAAW,CAACktC,iBAAiB;IACpC,OAAOltC,W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E,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KAR7E;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAM+G,QAAQ,GAAG;EACf6nH,OAAO,EAAE,SAAS;EAClB/rE,GAAG,EAAE,KAAK;EACVgsE,MAAM,EAAE,QAAQ;EAChB18F,QAAQ,EAAE,UAAU;EACpB28F,WAAW,EAAE;AACf,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA,IAqBMC,OAAO,0BAAA3nH,WAAA;EACX;AACF;AACA;EACE,SAAA2nH,QAAYznH,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAAk4H,OAAA;IACnB5uH,KAAA,GAAAvB,UAAA,OAAAmwH,OAAA;;IAEA;AACJ;AACA;IACI5uH,KAAA,CAAKuD,EAAE;;IAEP;AACJ;AACA;IACIvD,KAAA,CAAK6C,IAAI;;IAET;AACJ;AACA;IACI7C,KAAA,CAAK0D,EAAE;;IAEP;AACJ;AACA;AACA;IACI1D,KAAA,CAAKmH,OAAO,GAAGA,OAAO;;IAEtB;AACJ;AACA;AACA;IACInH,KAAA,CAAKkK,EAAE,GAAG/C,OAAO,CAAC+C,EAAE;;IAEpB;AACJ;AACA;AACA;IACIlK,KAAA,CAAK6uH,WAAW,GACd1nH,OAAO,CAAC0nH,WAAW,KAAKttH,SAAS,GAAG4F,OAAO,CAAC0nH,WAAW,GAAG,IAAI;;IAEhE;AACJ;AACA;AACA;IACI7uH,KAAA,CAAKm8G,SAAS,GAAGh1G,OAAO,CAACg1G,SAAS,KAAK56G,SAAS,GAAG4F,OAAO,CAACg1G,SAAS,GAAG,IAAI;;IAE3E;AACJ;AACA;AACA;IACIn8G,KAAA,CAAK+G,OAAO,GAAGy+B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC5CzlC,KAAA,CAAK+G,OAAO,CAACu8C,SAAS,GACpBn8C,OAAO,CAACm8C,SAAS,KAAK/hD,SAAS,GAC3B4F,OAAO,CAACm8C,SAAS,GACjB,uBAAuB,GAAG5P,qBAAgB;IAChD1zC,KAAA,CAAK+G,OAAO,CAAC2C,KAAK,CAACkqB,QAAQ,GAAG,UAAU;IACxC5zB,KAAA,CAAK+G,OAAO,CAAC2C,KAAK,CAAC2pG,aAAa,GAAG,MAAM;;IAEzC;AACJ;AACA;AACA;IACIrzG,KAAA,CAAK8uH,OAAO,GAAG3nH,OAAO,CAAC2nH,OAAO,KAAK,IAAI,GAAG,CAAC,CAAC,GAAG3nH,OAAO,CAAC2nH,OAAO,IAAIvtH,SAAS;;IAE3E;AACJ;AACA;AACA;AACA;IACIvB,KAAA,CAAKmzD,QAAQ,GAAG;MACdxgC,UAAU,EAAE,EAAE;MACdqwB,OAAO,EAAE;IACX,CAAC;;IAED;AACJ;AACA;AACA;IACIhjD,KAAA,CAAK+uH,wBAAwB,GAAG,IAAI;IAEpC/uH,KAAA,CAAKiG,iBAAiB,CAACW,QAAQ,CAAC6nH,OAAO,EAAEzuH,KAAA,CAAKgvH,oBAAoB,CAAC;IACnEhvH,KAAA,CAAKiG,iBAAiB,CAACW,QAAQ,CAAC87C,GAAG,EAAE1iD,KAAA,CAAKivH,gBAAgB,CAAC;IAC3DjvH,KAAA,CAAKiG,iBAAiB,CAACW,QAAQ,CAAC8nH,MAAM,EAAE1uH,KAAA,CAAKkvH,mBAAmB,CAAC;IACjElvH,KAAA,CAAKiG,iBAAiB,CAACW,QAAQ,CAACorB,QAAQ,EAAEhyB,KAAA,CAAKmvH,qBAAqB,CAAC;IACrEnvH,KAAA,CAAKiG,iBAAiB,CAACW,QAAQ,CAAC+nH,WAAW,EAAE3uH,KAAA,CAAKovH,wBAAwB,CAAC;IAE3E,IAAIjoH,OAAO,CAACJ,OAAO,KAAKxF,SAAS,EAAE;MACjCvB,KAAA,CAAKqvH,UAAU,CAACloH,OAAO,CAACJ,OAAO,CAAC;IAClC;IAEA/G,KAAA,CAAKsvH,SAAS,CAACnoH,OAAO,CAAC8J,MAAM,KAAK1P,SAAS,GAAG4F,OAAO,CAAC8J,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAEtEjR,KAAA,CAAKuvH,cAAc,CAACpoH,OAAO,CAACqoH,WAAW,IAAI,UAAU,CAAC;IAEtD,IAAIroH,OAAO,CAACysB,QAAQ,KAAKryB,SAAS,EAAE;MAClCvB,KAAA,CAAKyvH,WAAW,CAACtoH,OAAO,CAACysB,QAAQ,CAAC;IACpC;IAAC,OAAA5zB,KAAA;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EALER,SAAA,CAAAovH,OAAA,EAAA3nH,WAAA;EAAA,OAAAnQ,YAAA,CAAA83H,OAAA;IAAA73H,GAAA;IAAAC,KAAA,EAMA,SAAA04H,WAAA,EAAa;MACX,OAAO,oCAAsC,IAAI,CAACpqH,GAAG,CAACsB,QAAQ,CAAC6nH,OAAO,CAAC;IACzE;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA13H,GAAA;IAAAC,KAAA,EAKA,SAAA6S,MAAA,EAAQ;MACN,OAAO,IAAI,CAACK,EAAE;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAnT,GAAA;IAAAC,KAAA,EAOA,SAAAoyG,OAAA,EAAS;MACP,OAAO;QACL,IAAI,CAAC9jG,GAAG,CAACsB,QAAQ,CAAC87C,GAAG,CAAC,IAAI;MAAI;IAElC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3rD,GAAA;IAAAC,KAAA,EAMA,SAAA24H,UAAA,EAAY;MACV,OAAO,4BAA8B,IAAI,CAACrqH,GAAG,CAACsB,QAAQ,CAAC8nH,MAAM,CAAC;IAChE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA33H,GAAA;IAAAC,KAAA,EAOA,SAAA29B,YAAA,EAAc;MACZ,OAAO;QACL,IAAI,CAACrvB,GAAG,CAACsB,QAAQ,CAACorB,QAAQ;MAAC;IAE/B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAj7B,GAAA;IAAAC,KAAA,EAOA,SAAA44H,eAAA,EAAiB;MACf,OAAO,0BAA4B,IAAI,CAACtqH,GAAG,CAACsB,QAAQ,CAAC+nH,WAAW,CAAC;IACnE;;IAEA;AACF;AACA;EAFE;IAAA53H,GAAA;IAAAC,KAAA,EAGA,SAAAg4H,qBAAA,EAAuB;MACrB,IAAA9nF,mBAAc,EAAC,IAAI,CAACngC,OAAO,CAAC;MAC5B,IAAMA,OAAO,GAAG,IAAI,CAAC2oH,UAAU,CAAC,CAAC;MACjC,IAAI3oH,OAAO,EAAE;QACX,IAAI,CAACA,OAAO,CAAC2gC,WAAW,CAAC3gC,OAAO,CAAC;MACnC;IACF;;IAEA;AACF;AACA;EAFE;IAAAhQ,GAAA;IAAAC,KAAA,EAGA,SAAAi4H,iBAAA,EAAmB;MACjB,IAAI,IAAI,CAACF,wBAAwB,EAAE;QACjC,IAAAhoF,eAAU,EAAC,IAAI,CAAChgC,OAAO,CAAC;QACxB,IAAA9D,qBAAa,EAAC,IAAI,CAAC8rH,wBAAwB,CAAC;QAC5C,IAAI,CAACA,wBAAwB,GAAG,IAAI;MACtC;MACA,IAAMvhH,GAAG,GAAG,IAAI,CAAC47F,MAAM,CAAC,CAAC;MACzB,IAAI57F,GAAG,EAAE;QACP,IAAI,CAACuhH,wBAAwB,GAAG,IAAApsH,cAAM,EACpC6K,GAAG,EACHimG,qBAAY,CAAC3+E,UAAU,EACvB,IAAI,CAACwlB,MAAM,EACX,IACF,CAAC;QACD,IAAI,CAACu1E,mBAAmB,CAAC,CAAC;QAC1B,IAAM91C,SAAS,GAAG,IAAI,CAACoiC,SAAS,GAC5B3uG,GAAG,CAACgmG,4BAA4B,CAAC,CAAC,GAClChmG,GAAG,CAACszG,mBAAmB,CAAC,CAAC;QAC7B,IAAI,IAAI,CAAC+N,WAAW,EAAE;UACpB90C,SAAS,CAACpyC,YAAY,CAAC,IAAI,CAAC5gC,OAAO,EAAEgzE,SAAS,CAACxyC,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;QACvE,CAAC,MAAM;UACLwyC,SAAS,CAACryC,WAAW,CAAC,IAAI,CAAC3gC,OAAO,CAAC;QACrC;QACA,IAAI,CAAC+oH,cAAc,CAAC,CAAC;MACvB;IACF;;IAEA;AACF;AACA;EAFE;IAAA/4H,GAAA;IAAAC,KAAA,EAGA,SAAAsjD,OAAA,EAAS;MACP,IAAI,CAACu1E,mBAAmB,CAAC,CAAC;IAC5B;;IAEA;AACF;AACA;EAFE;IAAA94H,GAAA;IAAAC,KAAA,EAGA,SAAAk4H,oBAAA,EAAsB;MACpB,IAAI,CAACW,mBAAmB,CAAC,CAAC;IAC5B;;IAEA;AACF;AACA;EAFE;IAAA94H,GAAA;IAAAC,KAAA,EAGA,SAAAm4H,sBAAA,EAAwB;MACtB,IAAI,CAACU,mBAAmB,CAAC,CAAC;MAC1B,IAAI,CAACC,cAAc,CAAC,CAAC;IACvB;;IAEA;AACF;AACA;EAFE;IAAA/4H,GAAA;IAAAC,KAAA,EAGA,SAAAo4H,yBAAA,EAA2B;MACzB,IAAI,CAACS,mBAAmB,CAAC,CAAC;IAC5B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA94H,GAAA;IAAAC,KAAA,EAMA,SAAAq4H,WAAWtoH,OAAO,EAAE;MAClB,IAAI,CAACZ,GAAG,CAACS,QAAQ,CAAC6nH,OAAO,EAAE1nH,OAAO,CAAC;IACrC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAhQ,GAAA;IAAAC,KAAA,EAOA,SAAAo8D,OAAO5lD,GAAG,EAAE;MACV,IAAI,CAACrH,GAAG,CAACS,QAAQ,CAAC87C,GAAG,EAAEl1C,GAAG,CAAC;IAC7B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAzW,GAAA;IAAAC,KAAA,EAMA,SAAAs4H,UAAUr+G,MAAM,EAAE;MAChB,IAAI,CAAC9K,GAAG,CAACS,QAAQ,CAAC8nH,MAAM,EAAEz9G,MAAM,CAAC;IACnC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAla,GAAA;IAAAC,KAAA,EAQA,SAAAy4H,YAAY77F,QAAQ,EAAE;MACpB,IAAI,CAACztB,GAAG,CAACS,QAAQ,CAACorB,QAAQ,EAAE4B,QAAQ,CAAC;IACvC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA78B,GAAA;IAAAC,KAAA,EAKA,SAAA84H,eAAA,EAAiB;MACf,IAAI,IAAI,CAAChB,OAAO,EAAE;QAChB,IAAI,CAACiB,WAAW,CAAC,IAAI,CAACjB,OAAO,CAAC;MAChC;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/3H,GAAA;IAAAC,KAAA,EAMA,SAAA+4H,YAAYC,kBAAkB,EAAE;MAC9B,IAAMxiH,GAAG,GAAG,IAAI,CAAC47F,MAAM,CAAC,CAAC;MAEzB,IAAI,CAAC57F,GAAG,IAAI,CAACA,GAAG,CAACowG,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAACt4G,GAAG,CAACsB,QAAQ,CAACorB,QAAQ,CAAC,EAAE;QACnE;MACF;MAEA,IAAMi+F,OAAO,GAAG,IAAI,CAACC,OAAO,CAAC1iH,GAAG,CAACowG,gBAAgB,CAAC,CAAC,EAAEpwG,GAAG,CAAC6G,OAAO,CAAC,CAAC,CAAC;MACnE,IAAMtN,OAAO,GAAG,IAAI,CAAC2oH,UAAU,CAAC,CAAC;MACjC,IAAMS,WAAW,GAAG,IAAI,CAACD,OAAO,CAACnpH,OAAO,EAAE,CACxC,IAAAi/B,eAAU,EAACj/B,OAAO,CAAC,EACnB,IAAAs/B,gBAAW,EAACt/B,OAAO,CAAC,CACrB,CAAC;MAEFipH,kBAAkB,GAAGA,kBAAkB,IAAI,CAAC,CAAC;MAE7C,IAAMI,QAAQ,GACZJ,kBAAkB,CAACK,MAAM,KAAK9uH,SAAS,GAAG,EAAE,GAAGyuH,kBAAkB,CAACK,MAAM;MAC1E,IAAI,CAAC,IAAAjgH,sBAAc,EAAC6/G,OAAO,EAAEE,WAAW,CAAC,EAAE;QACzC;QACA,IAAMG,UAAU,GAAGH,WAAW,CAAC,CAAC,CAAC,GAAGF,OAAO,CAAC,CAAC,CAAC;QAC9C,IAAMM,WAAW,GAAGN,OAAO,CAAC,CAAC,CAAC,GAAGE,WAAW,CAAC,CAAC,CAAC;QAC/C,IAAMK,SAAS,GAAGL,WAAW,CAAC,CAAC,CAAC,GAAGF,OAAO,CAAC,CAAC,CAAC;QAC7C,IAAMQ,YAAY,GAAGR,OAAO,CAAC,CAAC,CAAC,GAAGE,WAAW,CAAC,CAAC,CAAC;QAEhD,IAAMzzG,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACpB,IAAI4zG,UAAU,GAAG,CAAC,EAAE;UAClB;UACA5zG,KAAK,CAAC,CAAC,CAAC,GAAG4zG,UAAU,GAAGF,QAAQ;QAClC,CAAC,MAAM,IAAIG,WAAW,GAAG,CAAC,EAAE;UAC1B;UACA7zG,KAAK,CAAC,CAAC,CAAC,GAAGzQ,IAAI,CAACwF,GAAG,CAAC8+G,WAAW,CAAC,GAAGH,QAAQ;QAC7C;QACA,IAAII,SAAS,GAAG,CAAC,EAAE;UACjB;UACA9zG,KAAK,CAAC,CAAC,CAAC,GAAG8zG,SAAS,GAAGJ,QAAQ;QACjC,CAAC,MAAM,IAAIK,YAAY,GAAG,CAAC,EAAE;UAC3B;UACA/zG,KAAK,CAAC,CAAC,CAAC,GAAGzQ,IAAI,CAACwF,GAAG,CAACg/G,YAAY,CAAC,GAAGL,QAAQ;QAC9C;QAEA,IAAI1zG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;UACpC,IAAM/J,MAAM,GAAG;UACbnF,GAAG,CAACymD,OAAO,CAAC,CAAC,CAAC/J,iBAAiB,CAAC,CACjC;UACD,IAAMwmE,QAAQ,GAAGljH,GAAG,CAAC2yG,8BAA8B,CAACxtG,MAAM,CAAC;UAC3D,IAAI,CAAC+9G,QAAQ,EAAE;YACb;UACF;UACA,IAAMC,WAAW,GAAG,CAACD,QAAQ,CAAC,CAAC,CAAC,GAAGh0G,KAAK,CAAC,CAAC,CAAC,EAAEg0G,QAAQ,CAAC,CAAC,CAAC,GAAGh0G,KAAK,CAAC,CAAC,CAAC,CAAC;UAEpE,IAAMk0G,UAAU,GAAGZ,kBAAkB,CAAC7kE,SAAS,IAAI,CAAC,CAAC;UACrD39C,GAAG,CAACymD,OAAO,CAAC,CAAC,CAACpJ,eAAe,CAAC;YAC5Bl4C,MAAM,EAAEnF,GAAG,CAAC4yG,8BAA8B,CAACuQ,WAAW,CAAC;YACvDvlE,QAAQ,EAAEwlE,UAAU,CAACxlE,QAAQ;YAC7BC,MAAM,EAAEulE,UAAU,CAACvlE;UACrB,CAAC,CAAC;QACJ;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAt0D,GAAA;IAAAC,KAAA,EAOA,SAAAk5H,QAAQnpH,OAAO,EAAE+L,IAAI,EAAE;MACrB,IAAMstE,GAAG,GAAGr5E,OAAO,CAAC2kH,qBAAqB,CAAC,CAAC;MAC3C,IAAMnzE,OAAO,GAAG6nC,GAAG,CAAC5oC,IAAI,GAAGtS,MAAM,CAAC2rF,WAAW;MAC7C,IAAMr4E,OAAO,GAAG4nC,GAAG,CAAC8kB,GAAG,GAAGhgE,MAAM,CAAC4rF,WAAW;MAC5C,OAAO,CAACv4E,OAAO,EAAEC,OAAO,EAAED,OAAO,GAAGzlC,IAAI,CAAC,CAAC,CAAC,EAAE0lC,OAAO,GAAG1lC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjE;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA/b,GAAA;IAAAC,KAAA,EAOA,SAAAu4H,eAAeC,WAAW,EAAE;MAC1B,IAAI,CAACrpH,GAAG,CAACS,QAAQ,CAAC+nH,WAAW,EAAEa,WAAW,CAAC;IAC7C;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAz4H,GAAA;IAAAC,KAAA,EAKA,SAAA2tD,WAAW3B,OAAO,EAAE;MAClB,IAAI,IAAI,CAACmQ,QAAQ,CAACnQ,OAAO,KAAKA,OAAO,EAAE;QACrC,IAAI,CAACj8C,OAAO,CAAC2C,KAAK,CAAC6tC,OAAO,GAAGyL,OAAO,GAAG,EAAE,GAAG,MAAM;QAClD,IAAI,CAACmQ,QAAQ,CAACnQ,OAAO,GAAGA,OAAO;MACjC;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAjsD,GAAA;IAAAC,KAAA,EAIA,SAAA64H,oBAAA,EAAsB;MACpB,IAAMriH,GAAG,GAAG,IAAI,CAAC47F,MAAM,CAAC,CAAC;MACzB,IAAMx1E,QAAQ,GAAG,IAAI,CAACe,WAAW,CAAC,CAAC;MACnC,IAAI,CAACnnB,GAAG,IAAI,CAACA,GAAG,CAAC6/G,UAAU,CAAC,CAAC,IAAI,CAACz5F,QAAQ,EAAE;QAC1C,IAAI,CAAC+wB,UAAU,CAAC,KAAK,CAAC;QACtB;MACF;MAEA,IAAMgP,KAAK,GAAGnmD,GAAG,CAAC2+G,sBAAsB,CAACv4F,QAAQ,CAAC;MAClD,IAAMm9F,OAAO,GAAGvjH,GAAG,CAAC6G,OAAO,CAAC,CAAC;MAC7B,IAAI,CAAC28G,sBAAsB,CAACr9D,KAAK,EAAEo9D,OAAO,CAAC;IAC7C;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAh6H,GAAA;IAAAC,KAAA,EAKA,SAAAg6H,uBAAuBr9D,KAAK,EAAEo9D,OAAO,EAAE;MACrC,IAAMrnH,KAAK,GAAG,IAAI,CAAC3C,OAAO,CAAC2C,KAAK;MAChC,IAAMuH,MAAM,GAAG,IAAI,CAAC0+G,SAAS,CAAC,CAAC;MAE/B,IAAMH,WAAW,GAAG,IAAI,CAACI,cAAc,CAAC,CAAC;MAEzC,IAAI,CAACjrE,UAAU,CAAC,IAAI,CAAC;MAErB,IAAM/4C,CAAC,GAAGK,IAAI,CAACwB,KAAK,CAACkmD,KAAK,CAAC,CAAC,CAAC,GAAG1iD,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;MACjD,IAAMpF,CAAC,GAAGI,IAAI,CAACwB,KAAK,CAACkmD,KAAK,CAAC,CAAC,CAAC,GAAG1iD,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;MACjD,IAAIggH,IAAI,GAAG,IAAI;MACf,IAAIC,IAAI,GAAG,IAAI;MACf,IACE1B,WAAW,IAAI,cAAc,IAC7BA,WAAW,IAAI,cAAc,IAC7BA,WAAW,IAAI,WAAW,EAC1B;QACAyB,IAAI,GAAG,OAAO;MAChB,CAAC,MAAM,IACLzB,WAAW,IAAI,eAAe,IAC9BA,WAAW,IAAI,eAAe,IAC9BA,WAAW,IAAI,YAAY,EAC3B;QACAyB,IAAI,GAAG,MAAM;MACf;MACA,IACEzB,WAAW,IAAI,aAAa,IAC5BA,WAAW,IAAI,eAAe,IAC9BA,WAAW,IAAI,cAAc,EAC7B;QACA0B,IAAI,GAAG,OAAO;MAChB,CAAC,MAAM,IACL1B,WAAW,IAAI,aAAa,IAC5BA,WAAW,IAAI,eAAe,IAC9BA,WAAW,IAAI,cAAc,EAC7B;QACA0B,IAAI,GAAG,MAAM;MACf;MACA,IAAM1mH,SAAS,gBAAAzE,MAAA,CAAgBkrH,IAAI,QAAAlrH,MAAA,CAAKmrH,IAAI,kBAAAnrH,MAAA,CAAe6F,CAAC,QAAA7F,MAAA,CAAK8F,CAAC,MAAG;MACrE,IAAI,IAAI,CAACsnD,QAAQ,CAACxgC,UAAU,IAAInoB,SAAS,EAAE;QACzC,IAAI,CAAC2oD,QAAQ,CAACxgC,UAAU,GAAGnoB,SAAS;QACpCd,KAAK,CAACc,SAAS,GAAGA,SAAS;MAC7B;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAAzT,GAAA;IAAAC,KAAA,EAIA,SAAAm6H,WAAA,EAAa;MACX,OAAO,IAAI,CAAChqH,OAAO;IACrB;EAAC;AAAA,EAndmBnC,eAAU;AAAA,IAAA5N,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAsdjBs3H,OAAO;;;;;;;;ACjkBtB,IAAAnmH,QAAA,GAAA5N,OAAA;AAAqC,SAAAkC,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA,KAJrC;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IASMkzH,QAAQ;EACZ;AACF;AACA;EACE,SAAAA,SAAYC,aAAa,EAAE;IAAA36H,eAAA,OAAA06H,QAAA;IACzB;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACC,aAAa,GAAGA,aAAa,KAAK9vH,SAAS,GAAG8vH,aAAa,GAAG,IAAI;;IAEvE;AACJ;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAG,CAAC;;IAEf;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;;IAElB;AACJ;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAG,IAAI;;IAEnB;AACJ;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAG,IAAI;EACrB;;EAEA;AACF;AACA;EAFE,OAAA36H,YAAA,CAAAs6H,QAAA;IAAAr6H,GAAA;IAAAC,KAAA,EAGA,SAAA0zC,eAAA,EAAiB;MACf,OAAO,IAAI,CAAC2mF,aAAa,GAAG,CAAC,IAAI,IAAI,CAACtgB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAACsgB,aAAa;IACvE;;IAEA;AACF;AACA;AACA;EAHE;IAAAt6H,GAAA;IAAAC,KAAA,EAIA,SAAA06H,YAAYx8C,IAAI,EAAE;MAChB,OAAO,IAAI,CAACxqC,cAAc,CAAC,CAAC,EAAE;QAC5B,IAAI,CAAChjC,GAAG,CAAC,CAAC;MACZ;IACF;;IAEA;AACF;AACA;EAFE;IAAA3Q,GAAA;IAAAC,KAAA,EAGA,SAAAqF,MAAA,EAAQ;MACN,IAAI,CAACi1H,MAAM,GAAG,CAAC;MACf,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;MAClB,IAAI,CAACC,OAAO,GAAG,IAAI;MACnB,IAAI,CAACC,OAAO,GAAG,IAAI;IACrB;;IAEA;AACF;AACA;AACA;EAHE;IAAA16H,GAAA;IAAAC,KAAA,EAIA,SAAA26H,YAAY56H,GAAG,EAAE;MACf,OAAO,IAAI,CAACw6H,QAAQ,CAAChsH,cAAc,CAACxO,GAAG,CAAC;IAC1C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAA,GAAA;IAAAC,KAAA,EAMA,SAAA2Q,QAAQC,CAAC,EAAE;MACT,IAAIgqH,KAAK,GAAG,IAAI,CAACJ,OAAO;MACxB,OAAOI,KAAK,EAAE;QACZhqH,CAAC,CAACgqH,KAAK,CAACC,MAAM,EAAED,KAAK,CAACE,IAAI,EAAE,IAAI,CAAC;QACjCF,KAAK,GAAGA,KAAK,CAACG,KAAK;MACrB;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAh7H,GAAA;IAAAC,KAAA,EAKA,SAAAsO,IAAIvO,GAAG,EAAEoQ,OAAO,EAAE;MAChB,IAAMyqH,KAAK,GAAG,IAAI,CAACL,QAAQ,CAACx6H,GAAG,CAAC;MAChC,IAAAuR,eAAM,EACJspH,KAAK,KAAKrwH,SAAS,EACnB,iEACF,CAAC;MACD,IAAIqwH,KAAK,KAAK,IAAI,CAACH,OAAO,EAAE;QAC1B,OAAOG,KAAK,CAACC,MAAM;MACrB;MACA,IAAID,KAAK,KAAK,IAAI,CAACJ,OAAO,EAAE;QAC1B,IAAI,CAACA,OAAO,GAAG,oBAAsB,IAAI,CAACA,OAAO,CAACO,KAAM;QACxD,IAAI,CAACP,OAAO,CAACQ,KAAK,GAAG,IAAI;MAC3B,CAAC,MAAM;QACLJ,KAAK,CAACG,KAAK,CAACC,KAAK,GAAGJ,KAAK,CAACI,KAAK;QAC/BJ,KAAK,CAACI,KAAK,CAACD,KAAK,GAAGH,KAAK,CAACG,KAAK;MACjC;MACAH,KAAK,CAACG,KAAK,GAAG,IAAI;MAClBH,KAAK,CAACI,KAAK,GAAG,IAAI,CAACP,OAAO;MAC1B,IAAI,CAACA,OAAO,CAACM,KAAK,GAAGH,KAAK;MAC1B,IAAI,CAACH,OAAO,GAAGG,KAAK;MACpB,OAAOA,KAAK,CAACC,MAAM;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA96H,GAAA;IAAAC,KAAA,EAKA,SAAAyC,OAAO1C,GAAG,EAAE;MACV,IAAM66H,KAAK,GAAG,IAAI,CAACL,QAAQ,CAACx6H,GAAG,CAAC;MAChC,IAAAuR,eAAM,EACJspH,KAAK,KAAKrwH,SAAS,EACnB,iEACF,CAAC;MACD,IAAIqwH,KAAK,KAAK,IAAI,CAACH,OAAO,EAAE;QAC1B,IAAI,CAACA,OAAO,GAAG,oBAAsBG,KAAK,CAACI,KAAM;QACjD,IAAI,IAAI,CAACP,OAAO,EAAE;UAChB,IAAI,CAACA,OAAO,CAACM,KAAK,GAAG,IAAI;QAC3B;MACF,CAAC,MAAM,IAAIH,KAAK,KAAK,IAAI,CAACJ,OAAO,EAAE;QACjC,IAAI,CAACA,OAAO,GAAG,oBAAsBI,KAAK,CAACG,KAAM;QACjD,IAAI,IAAI,CAACP,OAAO,EAAE;UAChB,IAAI,CAACA,OAAO,CAACQ,KAAK,GAAG,IAAI;QAC3B;MACF,CAAC,MAAM;QACLJ,KAAK,CAACG,KAAK,CAACC,KAAK,GAAGJ,KAAK,CAACI,KAAK;QAC/BJ,KAAK,CAACI,KAAK,CAACD,KAAK,GAAGH,KAAK,CAACG,KAAK;MACjC;MACA,OAAO,IAAI,CAACR,QAAQ,CAACx6H,GAAG,CAAC;MACzB,EAAE,IAAI,CAACu6H,MAAM;MACb,OAAOM,KAAK,CAACC,MAAM;IACrB;;IAEA;AACF;AACA;EAFE;IAAA96H,GAAA;IAAAC,KAAA,EAGA,SAAA+5G,SAAA,EAAW;MACT,OAAO,IAAI,CAACugB,MAAM;IACpB;;IAEA;AACF;AACA;EAFE;IAAAv6H,GAAA;IAAAC,KAAA,EAGA,SAAAwO,QAAA,EAAU;MACR,IAAM/D,IAAI,GAAG,IAAIlI,KAAK,CAAC,IAAI,CAAC+3H,MAAM,CAAC;MACnC,IAAIx4H,CAAC,GAAG,CAAC;MACT,IAAI84H,KAAK;MACT,KAAKA,KAAK,GAAG,IAAI,CAACH,OAAO,EAAEG,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAACI,KAAK,EAAE;QACrDvwH,IAAI,CAAC3I,CAAC,EAAE,CAAC,GAAG84H,KAAK,CAACE,IAAI;MACxB;MACA,OAAOrwH,IAAI;IACb;;IAEA;AACF;AACA;EAFE;IAAA1K,GAAA;IAAAC,KAAA,EAGA,SAAAi7H,UAAA,EAAY;MACV,IAAM/sH,MAAM,GAAG,IAAI3L,KAAK,CAAC,IAAI,CAAC+3H,MAAM,CAAC;MACrC,IAAIx4H,CAAC,GAAG,CAAC;MACT,IAAI84H,KAAK;MACT,KAAKA,KAAK,GAAG,IAAI,CAACH,OAAO,EAAEG,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAACI,KAAK,EAAE;QACrD9sH,MAAM,CAACpM,CAAC,EAAE,CAAC,GAAG84H,KAAK,CAACC,MAAM;MAC5B;MACA,OAAO3sH,MAAM;IACf;;IAEA;AACF;AACA;EAFE;IAAAnO,GAAA;IAAAC,KAAA,EAGA,SAAAk7H,SAAA,EAAW;MACT,OAAO,IAAI,CAACV,OAAO,CAACK,MAAM;IAC5B;;IAEA;AACF;AACA;EAFE;IAAA96H,GAAA;IAAAC,KAAA,EAGA,SAAAm7H,YAAA,EAAc;MACZ,OAAO,IAAI,CAACX,OAAO,CAACM,IAAI;IAC1B;;IAEA;AACF;AACA;AACA;EAHE;IAAA/6H,GAAA;IAAAC,KAAA,EAIA,SAAAo7H,aAAA,EAAe;MACb,OAAO,IAAI,CAACX,OAAO,CAACK,IAAI;IAC1B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA/6H,GAAA;IAAAC,KAAA,EAKA,SAAAq7H,KAAKt7H,GAAG,EAAE;MAAA,IAAAu7H,kBAAA;MACR,QAAAA,kBAAA,GAAO,IAAI,CAACf,QAAQ,CAACx6H,GAAG,CAAC,cAAAu7H,kBAAA,uBAAlBA,kBAAA,CAAoBT,MAAM;IACnC;;IAEA;AACF;AACA;EAFE;IAAA96H,GAAA;IAAAC,KAAA,EAGA,SAAA0Q,IAAA,EAAM;MACJ,IAAMkqH,KAAK,GAAG,IAAI,CAACJ,OAAO;MAC1B,OAAO,IAAI,CAACD,QAAQ,CAACK,KAAK,CAACE,IAAI,CAAC;MAChC,IAAIF,KAAK,CAACG,KAAK,EAAE;QACfH,KAAK,CAACG,KAAK,CAACC,KAAK,GAAG,IAAI;MAC1B;MACA,IAAI,CAACR,OAAO,GAAG,oBAAsBI,KAAK,CAACG,KAAM;MACjD,IAAI,CAAC,IAAI,CAACP,OAAO,EAAE;QACjB,IAAI,CAACC,OAAO,GAAG,IAAI;MACrB;MACA,EAAE,IAAI,CAACH,MAAM;MACb,OAAOM,KAAK,CAACC,MAAM;IACrB;;IAEA;AACF;AACA;AACA;EAHE;IAAA96H,GAAA;IAAAC,KAAA,EAIA,SAAA6iB,QAAQ9iB,GAAG,EAAEC,KAAK,EAAE;MAClB,IAAI,CAACsO,GAAG,CAACvO,GAAG,CAAC,CAAC,CAAC;MACf,IAAI,CAACw6H,QAAQ,CAACx6H,GAAG,CAAC,CAAC86H,MAAM,GAAG76H,KAAK;IACnC;;IAEA;AACF;AACA;AACA;EAHE;IAAAD,GAAA;IAAAC,KAAA,EAIA,SAAAmP,IAAIpP,GAAG,EAAEC,KAAK,EAAE;MACd,IAAAsR,eAAM,EACJ,EAAEvR,GAAG,IAAI,IAAI,CAACw6H,QAAQ,CAAC,EACvB,qDACF,CAAC;MACD,IAAMK,KAAK,GAAG;QACZE,IAAI,EAAE/6H,GAAG;QACTg7H,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE,IAAI,CAACP,OAAO;QACnBI,MAAM,EAAE76H;MACV,CAAC;MACD,IAAI,CAAC,IAAI,CAACy6H,OAAO,EAAE;QACjB,IAAI,CAACD,OAAO,GAAGI,KAAK;MACtB,CAAC,MAAM;QACL,IAAI,CAACH,OAAO,CAACM,KAAK,GAAGH,KAAK;MAC5B;MACA,IAAI,CAACH,OAAO,GAAGG,KAAK;MACpB,IAAI,CAACL,QAAQ,CAACx6H,GAAG,CAAC,GAAG66H,KAAK;MAC1B,EAAE,IAAI,CAACN,MAAM;IACf;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAv6H,GAAA;IAAAC,KAAA,EAKA,SAAAq0C,QAAQv4B,IAAI,EAAE;MACZ,IAAI,CAACu+G,aAAa,GAAGv+G,IAAI;IAC3B;EAAC;AAAA;AAAA,IAAA1b,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGY85H,QAAQ;;;;;;;;;;;;;;;;;;;;ACpSvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASrhH,cAAcA,CAACymB,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAEusE,SAAS,EAAE;EACjD,IAAIA,SAAS,KAAK72E,SAAS,EAAE;IAC3B62E,SAAS,CAAC,CAAC,CAAC,GAAG5hD,CAAC;IAChB4hD,SAAS,CAAC,CAAC,CAAC,GAAGxsE,CAAC;IAChBwsE,SAAS,CAAC,CAAC,CAAC,GAAGvsE,CAAC;IAChB,OAAOusE,SAAS;EAClB;EACA,OAAO,CAAC5hD,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,CAAC;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0mH,SAASA,CAAC/7F,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAE;EACjC,OAAO2qB,CAAC,GAAG,GAAG,GAAG5qB,CAAC,GAAG,GAAG,GAAGC,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS66F,MAAMA,CAACtuB,SAAS,EAAE;EAChC,OAAOm6C,SAAS,CAACn6C,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASo6C,qBAAqBA,CAAC/f,OAAO,EAAE;EAC7C,IAAAggB,qBAAA,GAAkBhgB,OAAO,CACtB3yC,SAAS,CAAC2yC,OAAO,CAAC3jB,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE2jB,OAAO,CAACp6G,MAAM,CAAC,CACvD6jB,KAAK,CAAC,GAAG,CAAC,CACV1O,GAAG,CAAChP,MAAM,CAAC;IAAAk0H,sBAAA,GAAAxkH,cAAA,CAAAukH,qBAAA;IAHPj8F,CAAC,GAAAk8F,sBAAA;IAAE9mH,CAAC,GAAA8mH,sBAAA;IAAE7mH,CAAC,GAAA6mH,sBAAA;EAId,OAAOH,SAAS,CAAC/7F,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS8mH,OAAOA,CAAC57H,GAAG,EAAE;EAC3B,OAAOA,GAAG,CAACmlB,KAAK,CAAC,GAAG,CAAC,CAAC1O,GAAG,CAAChP,MAAM,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACO,SAASo0H,IAAIA,CAACx6C,SAAS,EAAE;EAC9B,OAAO,CAACA,SAAS,CAAC,CAAC,CAAC,IAAIA,SAAS,CAAC,CAAC,CAAC,IAAIA,SAAS,CAAC,CAAC,CAAC;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASy6C,gBAAgBA,CAACz6C,SAAS,EAAElgE,QAAQ,EAAE;EACpD,IAAMse,CAAC,GAAG4hD,SAAS,CAAC,CAAC,CAAC;EACtB,IAAMxsE,CAAC,GAAGwsE,SAAS,CAAC,CAAC,CAAC;EACtB,IAAMvsE,CAAC,GAAGusE,SAAS,CAAC,CAAC,CAAC;EAEtB,IAAIlgE,QAAQ,CAAC8rC,UAAU,CAAC,CAAC,GAAGxtB,CAAC,IAAIA,CAAC,GAAGte,QAAQ,CAAC+rC,UAAU,CAAC,CAAC,EAAE;IAC1D,OAAO,KAAK;EACd;EACA,IAAMq0B,SAAS,GAAGpgE,QAAQ,CAAC46G,gBAAgB,CAACt8F,CAAC,CAAC;EAC9C,IAAI,CAAC8hD,SAAS,EAAE;IACd,OAAO,IAAI;EACb;EACA,OAAOA,SAAS,CAACnoE,UAAU,CAACvE,CAAC,EAAEC,CAAC,CAAC;AACnC;;;;;;;;AC5FA,IAAAknH,UAAA,GAAAr2H,sBAAA,CAAA7B,OAAA;AACA,IAAAm4H,UAAA,GAAAn4H,OAAA;AAA+C,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAmzB,KAAA,eAAAxyB,OAAA,oBAAAA,OAAA,CAAAyG,GAAA,IAAA+rB,IAAA,GAAAxyB,OAAA,CAAAyG,GAAA,CAAAhG,IAAA,aAAA+xB,IAAA,YAAAA,KAAAx6B,MAAA,EAAA0F,QAAA,EAAA+0B,QAAA,QAAAC,IAAA,GAAAC,cAAA,CAAA36B,MAAA,EAAA0F,QAAA,QAAAg1B,IAAA,cAAAE,IAAA,GAAA5zB,MAAA,CAAA6zB,wBAAA,CAAAH,IAAA,EAAAh1B,QAAA,OAAAk1B,IAAA,CAAAnsB,GAAA,WAAAmsB,IAAA,CAAAnsB,GAAA,CAAA5J,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAxB,MAAA,GAAAy6B,QAAA,YAAAG,IAAA,CAAAz6B,KAAA,cAAAq6B,IAAA,CAAAx1B,KAAA,OAAAF,SAAA;AAAA,SAAA61B,eAAAl1B,MAAA,EAAAC,QAAA,YAAAsB,MAAA,CAAArC,SAAA,CAAA+J,cAAA,CAAA7J,IAAA,CAAAY,MAAA,EAAAC,QAAA,KAAAD,MAAA,GAAAoC,eAAA,CAAApC,MAAA,OAAAA,MAAA,2BAAAA,MAAA;AAAA,SAAAoC,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KAJ/C;AACA;AACA;AAFA,IAMMozH,SAAS,0BAAAC,SAAA;EAAA,SAAAD,UAAA;IAAAv8H,eAAA,OAAAu8H,SAAA;IAAA,OAAAx0H,UAAA,OAAAw0H,SAAA,EAAAt3H,SAAA;EAAA;EAAA6D,SAAA,CAAAyzH,SAAA,EAAAC,SAAA;EAAA,OAAAp8H,YAAA,CAAAm8H,SAAA;IAAAl8H,GAAA;IAAAC,KAAA,EACb,SAAAqF,MAAA,EAAQ;MACN,OAAO,IAAI,CAAC00G,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE;QAC1B,IAAI,CAACrpG,GAAG,CAAC,CAAC,CAAC8+F,OAAO,CAAC,CAAC;MACtB;MACAn1E,IAAA,CAAA3yB,eAAA,CAAAu0H,SAAA,CAAAz3H,SAAA,kBAAAE,IAAA;IACF;;IAEA;AACF;AACA;EAFE;IAAA3E,GAAA;IAAAC,KAAA,EAGA,SAAA06H,YAAY7D,SAAS,EAAE;MACrB,OAAO,IAAI,CAACnjF,cAAc,CAAC,CAAC,EAAE;QAC5B,IAAMytC,IAAI,GAAG,IAAI,CAAC+5C,QAAQ,CAAC,CAAC;QAC5B,IAAI/5C,IAAI,CAACuuB,MAAM,CAAC,CAAC,IAAImnB,SAAS,EAAE;UAC9B;QACF,CAAC,MAAM;UACL,IAAI,CAACnmH,GAAG,CAAC,CAAC,CAAC8+F,OAAO,CAAC,CAAC;QACtB;MACF;IACF;;IAEA;AACF;AACA;EAFE;IAAAzvG,GAAA;IAAAC,KAAA,EAGA,SAAAm8H,mBAAA,EAAqB;MAAA,IAAAnzH,KAAA;MACnB,IAAI,IAAI,CAAC+wG,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;QACzB;MACF;MACA,IAAMh6G,GAAG,GAAG,IAAI,CAACq7H,YAAY,CAAC,CAAC;MAC/B,IAAMh6C,SAAS,GAAG,IAAAu6C,kBAAO,EAAC57H,GAAG,CAAC;MAC9B,IAAMy/B,CAAC,GAAG4hD,SAAS,CAAC,CAAC,CAAC;MACtB,IAAI,CAACzwE,OAAO,CAAC,UAACwwE,IAAI,EAAK;QACrB,IAAIA,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,KAAK5hD,CAAC,EAAE;UAC3Bx2B,KAAI,CAACvG,MAAM,CAAC,IAAAitG,iBAAM,EAACvuB,IAAI,CAACC,SAAS,CAAC,CAAC;UACnCD,IAAI,CAACquB,OAAO,CAAC,CAAC;QAChB;MACF,CAAC,CAAC;IACJ;EAAC;AAAA,EAtCqB4qB,kBAAQ;AAAA,IAAAh6H,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAyCjB27H,SAAS;;;;;;;;;;;;;;;AC/CxB;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA,IAIMG,SAAS;EACb;AACF;AACA;AACA;AACA;AACA;EACE,SAAAA,UAAY3jH,IAAI,EAAEG,IAAI,EAAED,IAAI,EAAEG,IAAI,EAAE;IAAApZ,eAAA,OAAA08H,SAAA;IAClC;AACJ;AACA;IACI,IAAI,CAAC3jH,IAAI,GAAGA,IAAI;;IAEhB;AACJ;AACA;IACI,IAAI,CAACG,IAAI,GAAGA,IAAI;;IAEhB;AACJ;AACA;IACI,IAAI,CAACD,IAAI,GAAGA,IAAI;;IAEhB;AACJ;AACA;IACI,IAAI,CAACG,IAAI,GAAGA,IAAI;EAClB;;EAEA;AACF;AACA;AACA;EAHE,OAAAhZ,YAAA,CAAAs8H,SAAA;IAAAr8H,GAAA;IAAAC,KAAA,EAIA,SAAA8iH,SAAS1hC,SAAS,EAAE;MAClB,OAAO,IAAI,CAACjoE,UAAU,CAACioE,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC;IACpD;;IAEA;AACF;AACA;AACA;EAHE;IAAArhF,GAAA;IAAAC,KAAA,EAIA,SAAAq8H,kBAAkB/6C,SAAS,EAAE;MAC3B,OACE,IAAI,CAAC7oE,IAAI,IAAI6oE,SAAS,CAAC7oE,IAAI,IAC3B6oE,SAAS,CAAC1oE,IAAI,IAAI,IAAI,CAACA,IAAI,IAC3B,IAAI,CAACD,IAAI,IAAI2oE,SAAS,CAAC3oE,IAAI,IAC3B2oE,SAAS,CAACxoE,IAAI,IAAI,IAAI,CAACA,IAAI;IAE/B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA/Y,GAAA;IAAAC,KAAA,EAKA,SAAAmZ,WAAWvE,CAAC,EAAEC,CAAC,EAAE;MACf,OAAO,IAAI,CAAC4D,IAAI,IAAI7D,CAAC,IAAIA,CAAC,IAAI,IAAI,CAACgE,IAAI,IAAI,IAAI,CAACD,IAAI,IAAI9D,CAAC,IAAIA,CAAC,IAAI,IAAI,CAACiE,IAAI;IAC7E;;IAEA;AACF;AACA;AACA;EAHE;IAAA/Y,GAAA;IAAAC,KAAA,EAIA,SAAA6C,OAAOy+E,SAAS,EAAE;MAChB,OACE,IAAI,CAAC7oE,IAAI,IAAI6oE,SAAS,CAAC7oE,IAAI,IAC3B,IAAI,CAACE,IAAI,IAAI2oE,SAAS,CAAC3oE,IAAI,IAC3B,IAAI,CAACC,IAAI,IAAI0oE,SAAS,CAAC1oE,IAAI,IAC3B,IAAI,CAACE,IAAI,IAAIwoE,SAAS,CAACxoE,IAAI;IAE/B;;IAEA;AACF;AACA;EAFE;IAAA/Y,GAAA;IAAAC,KAAA,EAGA,SAAAoC,OAAOk/E,SAAS,EAAE;MAChB,IAAIA,SAAS,CAAC7oE,IAAI,GAAG,IAAI,CAACA,IAAI,EAAE;QAC9B,IAAI,CAACA,IAAI,GAAG6oE,SAAS,CAAC7oE,IAAI;MAC5B;MACA,IAAI6oE,SAAS,CAAC1oE,IAAI,GAAG,IAAI,CAACA,IAAI,EAAE;QAC9B,IAAI,CAACA,IAAI,GAAG0oE,SAAS,CAAC1oE,IAAI;MAC5B;MACA,IAAI0oE,SAAS,CAAC3oE,IAAI,GAAG,IAAI,CAACA,IAAI,EAAE;QAC9B,IAAI,CAACA,IAAI,GAAG2oE,SAAS,CAAC3oE,IAAI;MAC5B;MACA,IAAI2oE,SAAS,CAACxoE,IAAI,GAAG,IAAI,CAACA,IAAI,EAAE;QAC9B,IAAI,CAACA,IAAI,GAAGwoE,SAAS,CAACxoE,IAAI;MAC5B;IACF;;IAEA;AACF;AACA;EAFE;IAAA/Y,GAAA;IAAAC,KAAA,EAGA,SAAAqb,UAAA,EAAY;MACV,OAAO,IAAI,CAACvC,IAAI,GAAG,IAAI,CAACH,IAAI,GAAG,CAAC;IAClC;;IAEA;AACF;AACA;EAFE;IAAA5Y,GAAA;IAAAC,KAAA,EAGA,SAAAqd,QAAA,EAAU;MACR,OAAO,CAAC,IAAI,CAACjC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;IAC5C;;IAEA;AACF;AACA;EAFE;IAAAtb,GAAA;IAAAC,KAAA,EAGA,SAAAob,SAAA,EAAW;MACT,OAAO,IAAI,CAACxC,IAAI,GAAG,IAAI,CAACH,IAAI,GAAG,CAAC;IAClC;;IAEA;AACF;AACA;AACA;EAHE;IAAA1Y,GAAA;IAAAC,KAAA,EAIA,SAAAmd,WAAWmkE,SAAS,EAAE;MACpB,OACE,IAAI,CAAC7oE,IAAI,IAAI6oE,SAAS,CAAC1oE,IAAI,IAC3B,IAAI,CAACA,IAAI,IAAI0oE,SAAS,CAAC7oE,IAAI,IAC3B,IAAI,CAACE,IAAI,IAAI2oE,SAAS,CAACxoE,IAAI,IAC3B,IAAI,CAACA,IAAI,IAAIwoE,SAAS,CAAC3oE,IAAI;IAE/B;EAAC;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,cAAcA,CAACN,IAAI,EAAEG,IAAI,EAAED,IAAI,EAAEG,IAAI,EAAEwoE,SAAS,EAAE;EAChE,IAAIA,SAAS,KAAK/2E,SAAS,EAAE;IAC3B+2E,SAAS,CAAC7oE,IAAI,GAAGA,IAAI;IACrB6oE,SAAS,CAAC1oE,IAAI,GAAGA,IAAI;IACrB0oE,SAAS,CAAC3oE,IAAI,GAAGA,IAAI;IACrB2oE,SAAS,CAACxoE,IAAI,GAAGA,IAAI;IACrB,OAAOwoE,SAAS;EAClB;EACA,OAAO,IAAI86C,SAAS,CAAC3jH,IAAI,EAAEG,IAAI,EAAED,IAAI,EAAEG,IAAI,CAAC;AAC9C;AAAC,IAAA1Y,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc87H,SAAS;;;;;;;;ACrJxB,IAAAlsB,MAAA,GAAAxqG,sBAAA,CAAA7B,OAAA;AACA,IAAAuvC,IAAA,GAAAvvC,OAAA;AACA,IAAAgK,KAAA,GAAAhK,OAAA;AAAiC,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAmzB,KAAA,eAAAxyB,OAAA,oBAAAA,OAAA,CAAAyG,GAAA,IAAA+rB,IAAA,GAAAxyB,OAAA,CAAAyG,GAAA,CAAAhG,IAAA,aAAA+xB,IAAA,YAAAA,KAAAx6B,MAAA,EAAA0F,QAAA,EAAA+0B,QAAA,QAAAC,IAAA,GAAAC,cAAA,CAAA36B,MAAA,EAAA0F,QAAA,QAAAg1B,IAAA,cAAAE,IAAA,GAAA5zB,MAAA,CAAA6zB,wBAAA,CAAAH,IAAA,EAAAh1B,QAAA,OAAAk1B,IAAA,CAAAnsB,GAAA,WAAAmsB,IAAA,CAAAnsB,GAAA,CAAA5J,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAxB,MAAA,GAAAy6B,QAAA,YAAAG,IAAA,CAAAz6B,KAAA,cAAAq6B,IAAA,CAAAx1B,KAAA,OAAAF,SAAA;AAAA,SAAA61B,eAAAl1B,MAAA,EAAAC,QAAA,YAAAsB,MAAA,CAAArC,SAAA,CAAA+J,cAAA,CAAA7J,IAAA,CAAAY,MAAA,EAAAC,QAAA,KAAAD,MAAA,GAAAoC,eAAA,CAAApC,MAAA,OAAAA,MAAA,2BAAAA,MAAA;AAAA,SAAAoC,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KALjC;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAMwlC,UAAU,GAAG,EAAE;AAAC,IAEhBiuF,gBAAgB,0BAAAlsB,KAAA;EACpB;AACF;AACA;AACA;AACA;AACA;AACA;EACE,SAAAksB,iBAAYl7C,SAAS,EAAEnwC,KAAK,EAAEsrF,YAAY,EAAEC,cAAc,EAAE;IAAA,IAAAxzH,KAAA;IAAAtJ,eAAA,OAAA48H,gBAAA;IAC1DtzH,KAAA,GAAAvB,UAAA,OAAA60H,gBAAA,GAAMl7C,SAAS,EAAEnwC,KAAK,EAAE;MAACq+D,UAAU,EAAE;IAAC,CAAC;;IAEvC;AACJ;AACA;AACA;IACItmG,KAAA,CAAKm5E,QAAQ,GAAG,CAAC,CAAC;;IAElB;AACJ;AACA;AACA;IACIn5E,KAAA,CAAK+uF,cAAc,GAAG,CAAC,CAAC;;IAExB;AACJ;AACA;AACA;IACI/uF,KAAA,CAAKyzH,kBAAkB,GAAG,CAAC;;IAE3B;AACJ;AACA;IACIzzH,KAAA,CAAK0zH,qBAAqB,GAAG,CAAC,CAAC;;IAE/B;AACJ;AACA;AACA;IACI1zH,KAAA,CAAK2zH,YAAY,GAAG,CAAC,CAAC;;IAEtB;AACJ;AACA;IACI3zH,KAAA,CAAK4zH,WAAW,GAAG,EAAE;;IAErB;AACJ;AACA;IACI5zH,KAAA,CAAK6zH,aAAa,GAAG,CAAC,CAAC;;IAEvB;AACJ;AACA;IACI7zH,KAAA,CAAK8zH,gBAAgB;;IAErB;AACJ;AACA;IACI9zH,KAAA,CAAKwzH,cAAc,GAAGA,cAAc,CAACl0H,IAAI,CAACiC,SAAS,EAAAvB,KAAM,CAAC;;IAE1D;AACJ;AACA;IACIA,KAAA,CAAK+zH,gBAAgB,GAAGR,YAAY;IAAC,OAAAvzH,KAAA;EACvC;;EAEA;AACF;AACA;AACA;EAHER,SAAA,CAAA8zH,gBAAA,EAAAlsB,KAAA;EAAA,OAAAtwG,YAAA,CAAAw8H,gBAAA;IAAAv8H,GAAA;IAAAC,KAAA,EAIA,SAAA0uC,WAAWke,KAAK,EAAE;MAChB,IAAM7sD,GAAG,GAAG,IAAAwN,YAAM,EAACq/C,KAAK,CAAC;MACzB,IAAI,EAAE7sD,GAAG,IAAI,IAAI,CAACoiF,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAACA,QAAQ,CAACpiF,GAAG,CAAC,GAAG,IAAAquC,0BAAqB,EAAC,CAAC,EAAE,CAAC,EAAEC,UAAU,CAAC;MAC9D;MACA,OAAO,IAAI,CAAC8zC,QAAQ,CAACpiF,GAAG,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;EAHE;IAAAA,GAAA;IAAAC,KAAA,EAIA,SAAAg9H,WAAWpwE,KAAK,EAAE;MAChB,OAAO,IAAAr/C,YAAM,EAACq/C,KAAK,CAAC,IAAI,IAAI,CAACu1B,QAAQ;IACvC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAApiF,GAAA;IAAAC,KAAA,EAKA,SAAAqxC,SAASub,KAAK,EAAE;MACd,OAAO,IAAI,CAACowE,UAAU,CAACpwE,KAAK,CAAC,GAAG,IAAI,CAACle,UAAU,CAACke,KAAK,CAAC,CAACre,MAAM,GAAG,IAAI;IACtE;;IAEA;AACF;AACA;AACA;EAHE;IAAAxuC,GAAA;IAAAC,KAAA,EAIA,SAAAi9H,eAAerwE,KAAK,EAAE;MACpB,IAAM7sD,GAAG,GAAG,IAAAwN,YAAM,EAACq/C,KAAK,CAAC;MACzB,IAAI,EAAE7sD,GAAG,IAAI,IAAI,CAAC48H,YAAY,CAAC,EAAE;QAC/B,IAAI,CAACA,YAAY,CAAC58H,GAAG,CAAC,GAAG;UACvBi5F,KAAK,EAAE,KAAK;UACZkkC,mBAAmB,EAAE,IAAI;UACzBl6C,kBAAkB,EAAEjzD,GAAG;UACvBotG,gBAAgB,EAAE,CAAC,CAAC;UACpBC,sBAAsB,EAAErtG,GAAG;UAC3BstG,oBAAoB,EAAE,CAAC,CAAC;UACxBC,aAAa,EAAE,CAAC;QAClB,CAAC;MACH;MACA,OAAO,IAAI,CAACX,YAAY,CAAC58H,GAAG,CAAC;IAC/B;;IAEA;AACF;AACA;EAFE;IAAAA,GAAA;IAAAC,KAAA,EAGA,SAAAyxC,KAAA,EAAO;MACL,IAAI,CAAC+qF,cAAc,CAAC,CAAC;IACvB;;IAEA;AACF;AACA;EAFE;IAAAz8H,GAAA;IAAAC,KAAA,EAGA,SAAAwvG,QAAA,EAAU;MACR,KAAK,IAAMzvG,GAAG,IAAI,IAAI,CAACoiF,QAAQ,EAAE;QAC/B,IAAMrzC,OAAO,GAAG,IAAI,CAACqzC,QAAQ,CAACpiF,GAAG,CAAC;QAClC,IAAA8uC,kBAAa,EAACC,OAAO,CAAC;QACtBT,UAAU,CAAC3kC,IAAI,CAAColC,OAAO,CAACP,MAAM,CAAC;QAC/B,OAAO,IAAI,CAAC4zC,QAAQ,CAACpiF,GAAG,CAAC;MAC3B;MACAs6B,IAAA,CAAA3yB,eAAA,CAAA40H,gBAAA,CAAA93H,SAAA,oBAAAE,IAAA;IACF;EAAC;AAAA,EArI4ByqG,cAAI;AAAA,IAAA/uG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAwIpBg8H,gBAAgB;;;;;;;;AC5J/B,IAAApsB,MAAA,GAAAxqG,sBAAA,CAAA7B,OAAA;AACA,IAAAqrG,UAAA,GAAAxpG,sBAAA,CAAA7B,OAAA;AAAuC,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAQ,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KAJvC;AACA;AACA;AAFA,IAMM00H,UAAU,0BAAAntB,KAAA;EACd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAAmtB,WAAYn8C,SAAS,EAAEnwC,KAAK,EAAE4B,GAAG,EAAEhsB,MAAM,EAAEwpF,gBAAgB,EAAElgG,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAA69H,UAAA;IACpEv0H,KAAA,GAAAvB,UAAA,OAAA81H,UAAA,GAAMn8C,SAAS,EAAEnwC,KAAK,EAAE9gC,OAAO;;IAE/B;AACJ;AACA;AACA;IACInH,KAAA,CAAKkP,MAAM,GAAG,IAAI;;IAElB;AACJ;AACA;AACA;IACIlP,KAAA,CAAKk5F,OAAO,GAAGr7E,MAAM;;IAErB;AACJ;AACA;AACA;IACI7d,KAAA,CAAKw0H,SAAS,GAAG,IAAI;;IAErB;AACJ;AACA;AACA;IACIx0H,KAAA,CAAKi5F,OAAO;;IAEZ;AACJ;AACA;AACA;IACIj5F,KAAA,CAAKyV,UAAU,GAAG,IAAI;;IAEtB;AACJ;AACA;AACA;IACIzV,KAAA,CAAK4S,UAAU;;IAEf;AACJ;AACA;AACA;IACI5S,KAAA,CAAKunG,iBAAiB,GAAGF,gBAAgB;;IAEzC;AACJ;AACA;AACA;IACIrnG,KAAA,CAAKm5F,IAAI,GAAGtvD,GAAG;IAEf7pC,KAAA,CAAKjJ,GAAG,GAAG8yC,GAAG;IAAC,OAAA7pC,KAAA;EACjB;;EAEA;AACF;AACA;AACA;AACA;EAJER,SAAA,CAAA+0H,UAAA,EAAAntB,KAAA;EAAA,OAAAtwG,YAAA,CAAAy9H,UAAA;IAAAx9H,GAAA;IAAAC,KAAA,EAKA,SAAAmlG,UAAA,EAAY;MACV,OAAO,IAAI,CAACjD,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAniG,GAAA;IAAAC,KAAA,EAKA,SAAA08D,YAAA,EAAc;MACZ,OAAO,IAAI,CAAC8gE,SAAS;IACvB;;IAEA;AACF;AACA;EAFE;IAAAz9H,GAAA;IAAAC,KAAA,EAGA,SAAAyxC,KAAA,EAAO;MACL,IAAI,IAAI,CAACR,KAAK,IAAIw+D,kBAAS,CAACvxE,IAAI,EAAE;QAChC,IAAI,CAACmhE,QAAQ,CAACoQ,kBAAS,CAACtxE,OAAO,CAAC;QAChC,IAAI,CAACoyE,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACpO,IAAI,CAAC;QACvC,IAAI,IAAI,CAACF,OAAO,EAAE;UAChB,IAAI,CAACA,OAAO,CAAC,IAAI,CAAC/pF,MAAM,EAAE,IAAI,CAAC0D,UAAU,EAAE,IAAI,CAAC6C,UAAU,CAAC;QAC7D;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1e,GAAA;IAAAC,KAAA,EAKA,SAAAy9H,OAAOprC,QAAQ,EAAE+O,cAAc,EAAE;MAC/B,IAAI,CAACs8B,WAAW,CAACrrC,QAAQ,CAAC;IAC5B;;IAEA;AACF;AACA;EAFE;IAAAtyF,GAAA;IAAAC,KAAA,EAGA,SAAA29H,QAAA,EAAU;MACR,IAAI,CAACt+B,QAAQ,CAACoQ,kBAAS,CAAC9kG,KAAK,CAAC;IAChC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5K,GAAA;IAAAC,KAAA,EAMA,SAAA09H,YAAYrrC,QAAQ,EAAE;MACpB,IAAI,CAACmrC,SAAS,GAAGnrC,QAAQ;MACzB,IAAI,CAACgN,QAAQ,CAACoQ,kBAAS,CAACrxE,MAAM,CAAC;IACjC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAr+B,GAAA;IAAAC,KAAA,EAKA,SAAAomG,UAAUh1D,MAAM,EAAE;MAChB,IAAI,CAAC6wD,OAAO,GAAG7wD,MAAM;IACvB;EAAC;AAAA,EAhIsB+9D,cAAI;AAAA,IAAA/uG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAmIdi9H,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrIzB,IAAA/7B,WAAA,GAAA97F,sBAAA,CAAA7B,OAAA;AACA,IAAAkF,WAAA,GAAArD,sBAAA,CAAA7B,OAAA;AACA,IAAA45F,QAAA,GAAA/3F,sBAAA,CAAA7B,OAAA;AACA,IAAA+5H,YAAA,GAAAl4H,sBAAA,CAAA7B,OAAA;AACA,IAAAg6H,UAAA,GAAAn4H,sBAAA,CAAA7B,OAAA;AACA,IAAA4wC,MAAA,GAAA/uC,sBAAA,CAAA7B,OAAA;AAEA,IAAAi6H,YAAA,GAAAp4H,sBAAA,CAAA7B,OAAA;AACA,IAAAk6H,UAAA,GAAAr4H,sBAAA,CAAA7B,OAAA;AACA,IAAAgrH,QAAA,GAAAnpH,sBAAA,CAAA7B,OAAA;AACA,IAAA2uG,IAAA,GAAA9sG,sBAAA,CAAA7B,OAAA;AACA,IAAAkyG,gBAAA,GAAArwG,sBAAA,CAAA7B,OAAA;AACA,IAAAisH,uBAAA,GAAApqH,sBAAA,CAAA7B,OAAA;AACA,IAAAgxG,SAAA,GAAAnvG,sBAAA,CAAA7B,OAAA;AACA,IAAA6L,OAAA,GAAAhK,sBAAA,CAAA7B,OAAA;AACA,IAAAoK,WAAA,GAAAvI,sBAAA,CAAA7B,OAAA;AACA,IAAAm6H,QAAA,GAAAt4H,sBAAA,CAAA7B,OAAA;AACA,IAAAusG,KAAA,GAAA1qG,sBAAA,CAAA7B,OAAA;AACA,IAAAo6H,UAAA,GAAAv4H,sBAAA,CAAA7B,OAAA;AACA,IAAAosH,UAAA,GAAAvqH,sBAAA,CAAA7B,OAAA;AACA,IAAAq6H,UAAA,GAAAx4H,sBAAA,CAAA7B,OAAA;AACA,IAAAs6H,iBAAA,GAAAz4H,sBAAA,CAAA7B,OAAA;AACA,IAAAu6H,WAAA,GAAA14H,sBAAA,CAAA7B,OAAA;AACA,IAAA83D,KAAA,GAAAj2D,sBAAA,CAAA7B,OAAA;AAEA,IAAAgK,KAAA,GAAAhK,OAAA;AAA0C,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;;;;;;;;AC7B1C;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAAtC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACb+9H,OAAO,EAAE,SAAS;EAClBC,0BAA0B,EAAE;AAC9B,CAAC;;;;;;;;ACPD,IAAAptD,OAAA,GAAAxrE,sBAAA,CAAA7B,OAAA;AACA,IAAA06H,aAAA,GAAA74H,sBAAA,CAAA7B,OAAA;AAA6C,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAmzB,KAAA,eAAAxyB,OAAA,oBAAAA,OAAA,CAAAyG,GAAA,IAAA+rB,IAAA,GAAAxyB,OAAA,CAAAyG,GAAA,CAAAhG,IAAA,aAAA+xB,IAAA,YAAAA,KAAAx6B,MAAA,EAAA0F,QAAA,EAAA+0B,QAAA,QAAAC,IAAA,GAAAC,cAAA,CAAA36B,MAAA,EAAA0F,QAAA,QAAAg1B,IAAA,cAAAE,IAAA,GAAA5zB,MAAA,CAAA6zB,wBAAA,CAAAH,IAAA,EAAAh1B,QAAA,OAAAk1B,IAAA,CAAAnsB,GAAA,WAAAmsB,IAAA,CAAAnsB,GAAA,CAAA5J,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAxB,MAAA,GAAAy6B,QAAA,YAAAG,IAAA,CAAAz6B,KAAA,cAAAq6B,IAAA,CAAAx1B,KAAA,OAAAF,SAAA;AAAA,SAAA61B,eAAAl1B,MAAA,EAAAC,QAAA,YAAAsB,MAAA,CAAArC,SAAA,CAAA+J,cAAA,CAAA7J,IAAA,CAAAY,MAAA,EAAAC,QAAA,KAAAD,MAAA,GAAAoC,eAAA,CAAApC,MAAA,OAAAA,MAAA,2BAAAA,MAAA;AAAA,SAAAoC,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KAJ7C;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAaM21H,aAAa,0BAAA7sD,MAAA;EACjB;AACF;AACA;EACE,SAAA6sD,cAAYruH,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAA8+H,aAAA;IACnBruH,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhC,IAAM2rD,WAAW,GAAGj1D,MAAM,CAAC6H,MAAM,CAAC,CAAC,CAAC,EAAEyB,OAAO,CAAC;IAE9C,OAAO2rD,WAAW,CAAC2iE,OAAO;IAC1B,OAAO3iE,WAAW,CAAC4iE,sBAAsB;IACzC11H,KAAA,GAAAvB,UAAA,OAAA+2H,aAAA,GAAM1iE,WAAW;;IAEjB;AACJ;AACA;IACI9yD,KAAA,CAAKuD,EAAE;;IAEP;AACJ;AACA;IACIvD,KAAA,CAAK6C,IAAI;;IAET;AACJ;AACA;IACI7C,KAAA,CAAK0D,EAAE;IAEP1D,KAAA,CAAK21H,UAAU,CAACxuH,OAAO,CAACsuH,OAAO,KAAKl0H,SAAS,GAAG4F,OAAO,CAACsuH,OAAO,GAAG,CAAC,CAAC;IACpEz1H,KAAA,CAAK41H,yBAAyB,CAC5BzuH,OAAO,CAACuuH,sBAAsB,KAAKn0H,SAAS,GACxC4F,OAAO,CAACuuH,sBAAsB,GAC9B,IACN,CAAC;IAAC,OAAA11H,KAAA;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;EALER,SAAA,CAAAg2H,aAAA,EAAA7sD,MAAA;EAAA,OAAA7xE,YAAA,CAAA0+H,aAAA;IAAAz+H,GAAA;IAAAC,KAAA,EAMA,SAAA6+H,WAAA,EAAa;MACX,OAAO,qBAAuB,IAAI,CAACvwH,GAAG,CAACwwH,qBAAY,CAACT,OAAO,CAAC;IAC9D;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAt+H,GAAA;IAAAC,KAAA,EAMA,SAAA2+H,WAAWF,OAAO,EAAE;MAClB,IAAI,CAACtvH,GAAG,CAAC2vH,qBAAY,CAACT,OAAO,EAAEI,OAAO,CAAC;IACzC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1+H,GAAA;IAAAC,KAAA,EAMA,SAAA++H,0BAAA,EAA4B;MAC1B,OAAO;QACL,IAAI,CAACzwH,GAAG,CAACwwH,qBAAY,CAACR,0BAA0B;MAAC;IAErD;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAv+H,GAAA;IAAAC,KAAA,EAMA,SAAA4+H,0BAA0BF,sBAAsB,EAAE;MAChD,IAAI,CAACvvH,GAAG,CAAC2vH,qBAAY,CAACR,0BAA0B,EAAEI,sBAAsB,CAAC;IAC3E;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAfE;IAAA3+H,GAAA;IAAAC,KAAA,EAgBA,SAAA48D,QAAQD,KAAK,EAAE;MACb,OAAAtiC,IAAA,CAAA3yB,eAAA,CAAA82H,aAAA,CAAAh6H,SAAA,oBAAAE,IAAA,OAAqBi4D,KAAK;IAC5B;EAAC;AAAA,EAhGyBf,eAAK;AAAA,IAAAx7D,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAmGlBk+H,aAAa;;;;;;;;AC/J5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,IAAMQ,eAAe,GAAA3+H,OAAA,CAAA2+H,eAAA,GAAG,GAAG;;;;;;;;ACNlC,IAAAz5G,OAAA,GAAA1hB,OAAA;AAYA,IAAAkrB,KAAA,GAAAlrB,OAAA;AACA,IAAA2hB,KAAA,GAAA3hB,OAAA;AAAkC,SAAAkC,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA,KAhBlC;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAM+3H,eAAe,GAAG,EAAE;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,kBAAkB,GAAG,IAAI;;AAE/B;AACA;AACA;AACA;AACA;AAJA,IAKMC,aAAa;EACjB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAAA,cACE9yG,UAAU,EACV+yG,UAAU,EACVC,YAAY,EACZC,eAAe,EACfC,cAAc,EACdC,qBAAqB,EACrB;IAAA,IAAAx2H,KAAA;IAAAtJ,eAAA,OAAAy/H,aAAA;IACA;AACJ;AACA;AACA;IACI,IAAI,CAACM,WAAW,GAAGpzG,UAAU;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACqzG,WAAW,GAAGN,UAAU;;IAE7B;IACA,IAAIO,iBAAiB,GAAG,CAAC,CAAC;IAC1B,IAAMC,YAAY,GAAG,IAAA5yG,kBAAY,EAAC,IAAI,CAAC0yG,WAAW,EAAE,IAAI,CAACD,WAAW,CAAC;;IAErE;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACI,aAAa,GAAG,UAAUrrH,CAAC,EAAE;MAChC,IAAMzU,GAAG,GAAGyU,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,CAAC,CAAC,CAAC,CAAC;MAC7B,IAAI,CAACmrH,iBAAiB,CAAC5/H,GAAG,CAAC,EAAE;QAC3B4/H,iBAAiB,CAAC5/H,GAAG,CAAC,GAAG6/H,YAAY,CAACprH,CAAC,CAAC;MAC1C;MACA,OAAOmrH,iBAAiB,CAAC5/H,GAAG,CAAC;IAC/B,CAAC;;IAED;AACJ;AACA;AACA;IACI,IAAI,CAAC+/H,gBAAgB,GAAGR,eAAe;;IAEvC;AACJ;AACA;AACA;IACI,IAAI,CAACS,sBAAsB,GAAGR,cAAc,GAAGA,cAAc;;IAE7D;AACJ;AACA;AACA;IACI,IAAI,CAACS,UAAU,GAAG,EAAE;;IAEpB;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACC,eAAe,GAAG,KAAK;;IAE5B;AACJ;AACA;AACA;IACI,IAAI,CAACC,iBAAiB,GACpB,IAAI,CAACT,WAAW,CAAC7gH,QAAQ,CAAC,CAAC,IAC3B,CAAC,CAAC0gH,eAAe,IACjB,CAAC,CAAC,IAAI,CAACG,WAAW,CAAC9gH,SAAS,CAAC,CAAC,IAC9B,IAAAvD,gBAAQ,EAACkkH,eAAe,CAAC,IAAI,IAAAlkH,gBAAQ,EAAC,IAAI,CAACqkH,WAAW,CAAC9gH,SAAS,CAAC,CAAC,CAAC;;IAErE;AACJ;AACA;AACA;IACI,IAAI,CAACwhH,iBAAiB,GAAG,IAAI,CAACV,WAAW,CAAC9gH,SAAS,CAAC,CAAC,GACjD,IAAAvD,gBAAQ,EAAC,IAAI,CAACqkH,WAAW,CAAC9gH,SAAS,CAAC,CAAC,CAAC,GACtC,IAAI;;IAER;AACJ;AACA;AACA;IACI,IAAI,CAACyhH,iBAAiB,GAAG,IAAI,CAACV,WAAW,CAAC/gH,SAAS,CAAC,CAAC,GACjD,IAAAvD,gBAAQ,EAAC,IAAI,CAACskH,WAAW,CAAC/gH,SAAS,CAAC,CAAC,CAAC,GACtC,IAAI;IAER,IAAM0hH,kBAAkB,GAAG,IAAAplH,kBAAU,EAACokH,YAAY,CAAC;IACnD,IAAMiB,mBAAmB,GAAG,IAAAtlH,mBAAW,EAACqkH,YAAY,CAAC;IACrD,IAAMkB,sBAAsB,GAAG,IAAAxlH,sBAAc,EAACskH,YAAY,CAAC;IAC3D,IAAMmB,qBAAqB,GAAG,IAAA1lH,qBAAa,EAACukH,YAAY,CAAC;IACzD,IAAMoB,aAAa,GAAG,IAAI,CAACZ,aAAa,CAACQ,kBAAkB,CAAC;IAC5D,IAAMK,cAAc,GAAG,IAAI,CAACb,aAAa,CAACS,mBAAmB,CAAC;IAC9D,IAAMK,iBAAiB,GAAG,IAAI,CAACd,aAAa,CAACU,sBAAsB,CAAC;IACpE,IAAMK,gBAAgB,GAAG,IAAI,CAACf,aAAa,CAACW,qBAAqB,CAAC;;IAElE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAMK,cAAc,GAClB5B,eAAe,IACdO,qBAAqB,GAClBvqH,IAAI,CAAC4D,GAAG,CACN,CAAC,EACD5D,IAAI,CAACuP,IAAI,CACPvP,IAAI,CAAC6rH,IAAI,CACP,IAAA5lH,eAAO,EAACmkH,YAAY,CAAC,IAClBG,qBAAqB,GAAGA,qBAAqB,GAAG,GAAG,GAAG,GAAG,CAC9D,CACF,CACF,CAAC,GACD,CAAC,CAAC;IAER,IAAI,CAACuB,QAAQ,CACXV,kBAAkB,EAClBC,mBAAmB,EACnBC,sBAAsB,EACtBC,qBAAqB,EACrBC,aAAa,EACbC,cAAc,EACdC,iBAAiB,EACjBC,gBAAgB,EAChBC,cACF,CAAC;IAED,IAAI,IAAI,CAACZ,eAAe,EAAE;MACxB,IAAIe,SAAS,GAAGtnH,QAAQ;MACxB,IAAI,CAACsmH,UAAU,CAACrvH,OAAO,CAAC,UAAUswH,QAAQ,EAAEn/H,CAAC,EAAEH,GAAG,EAAE;QAClDq/H,SAAS,GAAG/rH,IAAI,CAACyD,GAAG,CAClBsoH,SAAS,EACTC,QAAQ,CAAC3xH,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACrB2xH,QAAQ,CAAC3xH,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACrB2xH,QAAQ,CAAC3xH,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CACtB,CAAC;MACH,CAAC,CAAC;;MAEF;MACA;MACA,IAAI,CAAC0wH,UAAU,CAACrvH,OAAO,CAAC,UAACswH,QAAQ,EAAK;QACpC,IACEhsH,IAAI,CAAC4D,GAAG,CACNooH,QAAQ,CAAC3xH,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACrB2xH,QAAQ,CAAC3xH,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACrB2xH,QAAQ,CAAC3xH,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CACtB,CAAC,GACC0xH,SAAS,GACXh4H,KAAI,CAACm3H,iBAAiB,GAAG,CAAC,EAC1B;UACA,IAAMe,WAAW,GAAG,CAClB,CAACD,QAAQ,CAAC3xH,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE2xH,QAAQ,CAAC3xH,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9C,CAAC2xH,QAAQ,CAAC3xH,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE2xH,QAAQ,CAAC3xH,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9C,CAAC2xH,QAAQ,CAAC3xH,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE2xH,QAAQ,CAAC3xH,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC/C;UACD,IAAI4xH,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGF,SAAS,GAAGh4H,KAAI,CAACm3H,iBAAiB,GAAG,CAAC,EAAE;YAC9De,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIl4H,KAAI,CAACm3H,iBAAiB;UAC7C;UACA,IAAIe,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGF,SAAS,GAAGh4H,KAAI,CAACm3H,iBAAiB,GAAG,CAAC,EAAE;YAC9De,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIl4H,KAAI,CAACm3H,iBAAiB;UAC7C;UACA,IAAIe,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGF,SAAS,GAAGh4H,KAAI,CAACm3H,iBAAiB,GAAG,CAAC,EAAE;YAC9De,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIl4H,KAAI,CAACm3H,iBAAiB;UAC7C;;UAEA;UACA;UACA;UACA,IAAM1nH,IAAI,GAAGxD,IAAI,CAACyD,GAAG,CACnBwoH,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBA,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBA,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAClB,CAAC;UACD,IAAMtoH,IAAI,GAAG3D,IAAI,CAAC4D,GAAG,CACnBqoH,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBA,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBA,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAClB,CAAC;UACD,IAAItoH,IAAI,GAAGH,IAAI,GAAGzP,KAAI,CAACm3H,iBAAiB,GAAG,CAAC,EAAE;YAC5Cc,QAAQ,CAAC3xH,MAAM,GAAG4xH,WAAW;UAC/B;QACF;MACF,CAAC,CAAC;IACJ;IAEAvB,iBAAiB,GAAG,CAAC,CAAC;EACxB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE,OAAA7/H,YAAA,CAAAq/H,aAAA;IAAAp/H,GAAA;IAAAC,KAAA,EAUA,SAAAmhI,aAAa5/H,CAAC,EAAEC,CAAC,EAAEgT,CAAC,EAAE4sH,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;MACtC,IAAI,CAACtB,UAAU,CAACt2H,IAAI,CAAC;QACnB4F,MAAM,EAAE,CAAC8xH,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAC;QAC1BzhI,MAAM,EAAE,CAAC0B,CAAC,EAAEC,CAAC,EAAEgT,CAAC;MAClB,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAfE;IAAAzU,GAAA;IAAAC,KAAA,EAgBA,SAAA+gI,SAASx/H,CAAC,EAAEC,CAAC,EAAEgT,CAAC,EAAEC,CAAC,EAAE2sH,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEV,cAAc,EAAE;MAC3D,IAAMW,gBAAgB,GAAG,IAAAxpH,sBAAc,EAAC,CAACopH,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAC,CAAC;MACjE,IAAME,eAAe,GAAG,IAAI,CAACtB,iBAAiB,GAC1C,IAAA/kH,gBAAQ,EAAComH,gBAAgB,CAAC,GAAG,IAAI,CAACrB,iBAAiB,GACnD,IAAI;MACR,IAAMuB,gBAAgB,GAAG,qBAAuB,IAAI,CAACvB,iBAAkB;;MAEvE;MACA;MACA,IAAMwB,MAAM,GACV,IAAI,CAAClC,WAAW,CAAC7gH,QAAQ,CAAC,CAAC,IAC3B6iH,eAAe,GAAG,GAAG,IACrBA,eAAe,GAAG,CAAC;MAErB,IAAIG,gBAAgB,GAAG,KAAK;MAE5B,IAAIf,cAAc,GAAG,CAAC,EAAE;QACtB,IAAI,IAAI,CAACnB,WAAW,CAAC5+G,QAAQ,CAAC,CAAC,IAAI,IAAI,CAACs/G,iBAAiB,EAAE;UACzD,IAAMyB,gBAAgB,GAAG,IAAA7pH,sBAAc,EAAC,CAACzW,CAAC,EAAEC,CAAC,EAAEgT,CAAC,EAAEC,CAAC,CAAC,CAAC;UACrD,IAAMqtH,eAAe,GACnB,IAAA1mH,gBAAQ,EAACymH,gBAAgB,CAAC,GAAG,IAAI,CAACzB,iBAAiB;UACrDwB,gBAAgB,GACdE,eAAe,GAAG5C,kBAAkB,IAAI0C,gBAAgB;QAC5D;QACA,IAAI,CAACD,MAAM,IAAI,IAAI,CAAClC,WAAW,CAAC3+G,QAAQ,CAAC,CAAC,IAAI2gH,eAAe,EAAE;UAC7DG,gBAAgB,GACdH,eAAe,GAAGvC,kBAAkB,IAAI0C,gBAAgB;QAC5D;MACF;MAEA,IAAI,CAACA,gBAAgB,IAAI,IAAI,CAAC9B,gBAAgB,EAAE;QAC9C,IACE7gH,QAAQ,CAACuiH,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAC7BviH,QAAQ,CAACuiH,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAC7BviH,QAAQ,CAACuiH,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAC7BviH,QAAQ,CAACuiH,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAC7B;UACA,IAAI,CAAC,IAAArkH,kBAAU,EAACqkH,gBAAgB,EAAE,IAAI,CAAC1B,gBAAgB,CAAC,EAAE;YACxD;YACA;UACF;QACF;MACF;MAEA,IAAIiC,WAAW,GAAG,CAAC;MAEnB,IAAI,CAACH,gBAAgB,EAAE;QACrB,IACE,CAAC3iH,QAAQ,CAACmiH,IAAI,CAAC,CAAC,CAAC,CAAC,IAClB,CAACniH,QAAQ,CAACmiH,IAAI,CAAC,CAAC,CAAC,CAAC,IAClB,CAACniH,QAAQ,CAACoiH,IAAI,CAAC,CAAC,CAAC,CAAC,IAClB,CAACpiH,QAAQ,CAACoiH,IAAI,CAAC,CAAC,CAAC,CAAC,IAClB,CAACpiH,QAAQ,CAACqiH,IAAI,CAAC,CAAC,CAAC,CAAC,IAClB,CAACriH,QAAQ,CAACqiH,IAAI,CAAC,CAAC,CAAC,CAAC,IAClB,CAACriH,QAAQ,CAACsiH,IAAI,CAAC,CAAC,CAAC,CAAC,IAClB,CAACtiH,QAAQ,CAACsiH,IAAI,CAAC,CAAC,CAAC,CAAC,EAClB;UACA,IAAIV,cAAc,GAAG,CAAC,EAAE;YACtBe,gBAAgB,GAAG,IAAI;UACzB,CAAC,MAAM;YACL;YACA;YACAG,WAAW,GACT,CAAC,CAAC9iH,QAAQ,CAACmiH,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAACniH,QAAQ,CAACmiH,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAChD,CAACniH,QAAQ,CAACoiH,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAACpiH,QAAQ,CAACoiH,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IACjD,CAACpiH,QAAQ,CAACqiH,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAACriH,QAAQ,CAACqiH,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IACjD,CAACriH,QAAQ,CAACsiH,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAACtiH,QAAQ,CAACsiH,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACpD,IACEQ,WAAW,IAAI,CAAC,IAChBA,WAAW,IAAI,CAAC,IAChBA,WAAW,IAAI,CAAC,IAChBA,WAAW,IAAI,CAAC,EAChB;cACA;YACF;UACF;QACF;MACF;MAEA,IAAIlB,cAAc,GAAG,CAAC,EAAE;QACtB,IAAI,CAACe,gBAAgB,EAAE;UACrB,IAAMjmH,MAAM,GAAG,CAAC,CAACpa,CAAC,CAAC,CAAC,CAAC,GAAGiT,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAACjT,CAAC,CAAC,CAAC,CAAC,GAAGiT,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;UACrD,IAAMwtH,SAAS,GAAG,IAAI,CAACnC,aAAa,CAAClkH,MAAM,CAAC;UAE5C,IAAIrG,EAAE;UACN,IAAIqsH,MAAM,EAAE;YACV,IAAMM,eAAe,GACnB,CAAC,IAAA/9G,YAAM,EAACk9G,IAAI,CAAC,CAAC,CAAC,EAAEM,gBAAgB,CAAC,GAChC,IAAAx9G,YAAM,EAACo9G,IAAI,CAAC,CAAC,CAAC,EAAEI,gBAAgB,CAAC,IACnC,CAAC;YACHpsH,EAAE,GAAG2sH,eAAe,GAAG,IAAA/9G,YAAM,EAAC89G,SAAS,CAAC,CAAC,CAAC,EAAEN,gBAAgB,CAAC;UAC/D,CAAC,MAAM;YACLpsH,EAAE,GAAG,CAAC8rH,IAAI,CAAC,CAAC,CAAC,GAAGE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGU,SAAS,CAAC,CAAC,CAAC;UAC7C;UACA,IAAMzsH,EAAE,GAAG,CAAC6rH,IAAI,CAAC,CAAC,CAAC,GAAGE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGU,SAAS,CAAC,CAAC,CAAC;UACjD,IAAME,qBAAqB,GAAG5sH,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;UAC/CqsH,gBAAgB,GAAGM,qBAAqB,GAAG,IAAI,CAACnC,sBAAsB;QACxE;QACA,IAAI6B,gBAAgB,EAAE;UACpB,IAAI3sH,IAAI,CAACwF,GAAG,CAAClZ,CAAC,CAAC,CAAC,CAAC,GAAGiT,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIS,IAAI,CAACwF,GAAG,CAAClZ,CAAC,CAAC,CAAC,CAAC,GAAGiT,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YAClD;YACA,IAAM2tH,EAAE,GAAG,CAAC,CAAC3gI,CAAC,CAAC,CAAC,CAAC,GAAGgT,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAChT,CAAC,CAAC,CAAC,CAAC,GAAGgT,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACjD,IAAM4tH,KAAK,GAAG,IAAI,CAACvC,aAAa,CAACsC,EAAE,CAAC;YACpC,IAAME,EAAE,GAAG,CAAC,CAAC5tH,CAAC,CAAC,CAAC,CAAC,GAAGlT,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAACkT,CAAC,CAAC,CAAC,CAAC,GAAGlT,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACjD,IAAM+gI,KAAK,GAAG,IAAI,CAACzC,aAAa,CAACwC,EAAE,CAAC;YAEpC,IAAI,CAACtB,QAAQ,CACXx/H,CAAC,EACDC,CAAC,EACD2gI,EAAE,EACFE,EAAE,EACFjB,IAAI,EACJC,IAAI,EACJe,KAAK,EACLE,KAAK,EACLzB,cAAc,GAAG,CACnB,CAAC;YACD,IAAI,CAACE,QAAQ,CACXsB,EAAE,EACFF,EAAE,EACF3tH,CAAC,EACDC,CAAC,EACD6tH,KAAK,EACLF,KAAK,EACLd,IAAI,EACJC,IAAI,EACJV,cAAc,GAAG,CACnB,CAAC;UACH,CAAC,MAAM;YACL;YACA,IAAM0B,EAAE,GAAG,CAAC,CAAChhI,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAACD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACjD,IAAMghI,KAAK,GAAG,IAAI,CAAC3C,aAAa,CAAC0C,EAAE,CAAC;YACpC,IAAME,EAAE,GAAG,CAAC,CAACjuH,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAACD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACjD,IAAMiuH,KAAK,GAAG,IAAI,CAAC7C,aAAa,CAAC4C,EAAE,CAAC;YAEpC,IAAI,CAAC1B,QAAQ,CACXx/H,CAAC,EACDghI,EAAE,EACFE,EAAE,EACFhuH,CAAC,EACD2sH,IAAI,EACJoB,KAAK,EACLE,KAAK,EACLnB,IAAI,EACJV,cAAc,GAAG,CACnB,CAAC;YACD,IAAI,CAACE,QAAQ,CACXwB,EAAE,EACF/gI,CAAC,EACDgT,CAAC,EACDiuH,EAAE,EACFD,KAAK,EACLnB,IAAI,EACJC,IAAI,EACJoB,KAAK,EACL7B,cAAc,GAAG,CACnB,CAAC;UACH;UACA;QACF;MACF;MAEA,IAAIc,MAAM,EAAE;QACV,IAAI,CAAC,IAAI,CAACzB,iBAAiB,EAAE;UAC3B;QACF;QACA,IAAI,CAACD,eAAe,GAAG,IAAI;MAC7B;;MAEA;MACA;MACA;MACA;MACA,IAAI,CAAC8B,WAAW,GAAG,GAAG,KAAK,CAAC,EAAE;QAC5B,IAAI,CAACZ,YAAY,CAAC5/H,CAAC,EAAEiT,CAAC,EAAEC,CAAC,EAAE2sH,IAAI,EAAEE,IAAI,EAAEC,IAAI,CAAC;MAC9C;MACA,IAAI,CAACQ,WAAW,GAAG,GAAG,KAAK,CAAC,EAAE;QAC5B,IAAI,CAACZ,YAAY,CAAC5/H,CAAC,EAAEiT,CAAC,EAAEhT,CAAC,EAAE4/H,IAAI,EAAEE,IAAI,EAAED,IAAI,CAAC;MAC9C;MACA,IAAIU,WAAW,EAAE;QACf;QACA,IAAI,CAACA,WAAW,GAAG,GAAG,KAAK,CAAC,EAAE;UAC5B,IAAI,CAACZ,YAAY,CAAC3/H,CAAC,EAAEiT,CAAC,EAAElT,CAAC,EAAE8/H,IAAI,EAAEE,IAAI,EAAEH,IAAI,CAAC;QAC9C;QACA,IAAI,CAACW,WAAW,GAAG,GAAG,KAAK,CAAC,EAAE;UAC5B,IAAI,CAACZ,YAAY,CAAC3/H,CAAC,EAAEiT,CAAC,EAAED,CAAC,EAAE6sH,IAAI,EAAEE,IAAI,EAAED,IAAI,CAAC;QAC9C;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAvhI,GAAA;IAAAC,KAAA,EAKA,SAAA2iI,sBAAA,EAAwB;MACtB,IAAMzqH,MAAM,GAAG,IAAAC,mBAAW,EAAC,CAAC;MAE5B,IAAI,CAAC6nH,UAAU,CAACrvH,OAAO,CAAC,UAAUswH,QAAQ,EAAEn/H,CAAC,EAAEH,GAAG,EAAE;QAClD,IAAMkxC,GAAG,GAAGouF,QAAQ,CAAC3xH,MAAM;QAC3B,IAAA8I,wBAAgB,EAACF,MAAM,EAAE26B,GAAG,CAAC,CAAC,CAAC,CAAC;QAChC,IAAAz6B,wBAAgB,EAACF,MAAM,EAAE26B,GAAG,CAAC,CAAC,CAAC,CAAC;QAChC,IAAAz6B,wBAAgB,EAACF,MAAM,EAAE26B,GAAG,CAAC,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC;MAEF,OAAO36B,MAAM;IACf;;IAEA;AACF;AACA;EAFE;IAAAnY,GAAA;IAAAC,KAAA,EAGA,SAAA4iI,aAAA,EAAe;MACb,OAAO,IAAI,CAAC5C,UAAU;IACxB;EAAC;AAAA;AAAA,IAAA5/H,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGY6+H,aAAa;;;;;;;;;;;AClf5B,IAAA55G,OAAA,GAAA1hB,OAAA;AAUA,IAAAuvC,IAAA,GAAAvvC,OAAA;AACA,IAAAkrB,KAAA,GAAAlrB,OAAA;AACA,IAAA2hB,KAAA,GAAA3hB,OAAA;AAfA;AACA;AACA;;AAeA,IAAIg/H,wBAAwB;;AAE5B;AACA;AACA;AACO,IAAMx0F,UAAU,GAAAhuC,OAAA,CAAAguC,UAAA,GAAG,EAAE;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASy0F,gBAAgBA,CAAC3sF,GAAG,EAAE4sF,EAAE,EAAEh+G,EAAE,EAAEi+G,EAAE,EAAEh+G,EAAE,EAAE;EAC7CmxB,GAAG,CAACiuC,SAAS,CAAC,CAAC;EACfjuC,GAAG,CAACkuC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EAChBluC,GAAG,CAACyP,MAAM,CAACm9E,EAAE,EAAEh+G,EAAE,CAAC;EAClBoxB,GAAG,CAACyP,MAAM,CAACo9E,EAAE,EAAEh+G,EAAE,CAAC;EAClBmxB,GAAG,CAAC0P,SAAS,CAAC,CAAC;EACf1P,GAAG,CAAC2L,IAAI,CAAC,CAAC;EACV3L,GAAG,CAACmuC,IAAI,CAAC,CAAC;EACVnuC,GAAG,CAACF,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEhhC,IAAI,CAAC4D,GAAG,CAACkqH,EAAE,EAAEC,EAAE,CAAC,GAAG,CAAC,EAAE/tH,IAAI,CAAC4D,GAAG,CAACkM,EAAE,EAAEC,EAAE,CAAC,CAAC;EAC1DmxB,GAAG,CAAC+L,OAAO,CAAC,CAAC;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS+gF,6BAA6BA,CAAC5gI,IAAI,EAAE4X,MAAM,EAAE;EACnD;EACA,OACEhF,IAAI,CAACwF,GAAG,CAACpY,IAAI,CAAC4X,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,IACpChF,IAAI,CAACwF,GAAG,CAACpY,IAAI,CAAC4X,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC;AAEnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASipH,yBAAyBA,CAAA,EAAG;EACnC,IAAIL,wBAAwB,KAAKt4H,SAAS,EAAE;IAC1C,IAAM4rC,GAAG,GAAG,IAAA/H,0BAAqB,EAAC,CAAC,EAAE,CAAC,EAAEC,UAAU,CAAC;IACnD8H,GAAG,CAACC,wBAAwB,GAAG,SAAS;IACxCD,GAAG,CAACE,SAAS,GAAG,uBAAuB;IACvCysF,gBAAgB,CAAC3sF,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjC2sF,gBAAgB,CAAC3sF,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjC,IAAM9zC,IAAI,GAAG8zC,GAAG,CAACR,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACtzC,IAAI;IAC9CwgI,wBAAwB,GACtBI,6BAA6B,CAAC5gI,IAAI,EAAE,CAAC,CAAC,IACtC4gI,6BAA6B,CAAC5gI,IAAI,EAAE,CAAC,CAAC,IACtC4gI,6BAA6B,CAAC5gI,IAAI,EAAE,CAAC,CAAC;IACxC,IAAAwsC,kBAAa,EAACsH,GAAG,CAAC;IAClB9H,UAAU,CAAC3kC,IAAI,CAACysC,GAAG,CAAC5H,MAAM,CAAC;EAC7B;EAEA,OAAOs0F,wBAAwB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASM,yBAAyBA,CACvC92G,UAAU,EACV+yG,UAAU,EACV7qE,YAAY,EACZE,gBAAgB,EAChB;EACA,IAAMH,YAAY,GAAG,IAAA9gD,eAAS,EAAC+gD,YAAY,EAAE6qE,UAAU,EAAE/yG,UAAU,CAAC;;EAEpE;EACA,IAAImoC,gBAAgB,GAAG,IAAAn0C,wBAAkB,EACvC++G,UAAU,EACV3qE,gBAAgB,EAChBF,YACF,CAAC;EAED,IAAM6uE,mBAAmB,GAAGhE,UAAU,CAACz+G,gBAAgB,CAAC,CAAC;EACzD,IAAIyiH,mBAAmB,KAAK74H,SAAS,EAAE;IACrCiqD,gBAAgB,IAAI4uE,mBAAmB;EACzC;EACA,IAAMt1G,mBAAmB,GAAGzB,UAAU,CAAC1L,gBAAgB,CAAC,CAAC;EACzD,IAAImN,mBAAmB,KAAKvjB,SAAS,EAAE;IACrCiqD,gBAAgB,IAAI1mC,mBAAmB;EACzC;;EAEA;EACA;EACA;;EAEA,IAAMO,YAAY,GAAGhC,UAAU,CAAC1N,SAAS,CAAC,CAAC;EAC3C,IAAI,CAAC0P,YAAY,IAAI,IAAAnV,0BAAkB,EAACmV,YAAY,EAAEimC,YAAY,CAAC,EAAE;IACnE,IAAM+uE,kBAAkB,GACtB,IAAAhjH,wBAAkB,EAACgM,UAAU,EAAEmoC,gBAAgB,EAAEF,YAAY,CAAC,GAC9DE,gBAAgB;IAClB,IAAIv1C,QAAQ,CAACokH,kBAAkB,CAAC,IAAIA,kBAAkB,GAAG,CAAC,EAAE;MAC1D7uE,gBAAgB,IAAI6uE,kBAAkB;IACxC;EACF;EAEA,OAAO7uE,gBAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8uE,+BAA+BA,CAC7Cj3G,UAAU,EACV+yG,UAAU,EACVC,YAAY,EACZ5qE,gBAAgB,EAChB;EACA,IAAMF,YAAY,GAAG,IAAAj5C,iBAAS,EAAC+jH,YAAY,CAAC;EAC5C,IAAI7qE,gBAAgB,GAAG2uE,yBAAyB,CAC9C92G,UAAU,EACV+yG,UAAU,EACV7qE,YAAY,EACZE,gBACF,CAAC;EAED,IAAI,CAACx1C,QAAQ,CAACu1C,gBAAgB,CAAC,IAAIA,gBAAgB,IAAI,CAAC,EAAE;IACxD,IAAA75C,qBAAa,EAAC0kH,YAAY,EAAE,UAAU7jH,MAAM,EAAE;MAC5Cg5C,gBAAgB,GAAG2uE,yBAAyB,CAC1C92G,UAAU,EACV+yG,UAAU,EACV5jH,MAAM,EACNi5C,gBACF,CAAC;MACD,OAAOx1C,QAAQ,CAACu1C,gBAAgB,CAAC,IAAIA,gBAAgB,GAAG,CAAC;IAC3D,CAAC,CAAC;EACJ;EAEA,OAAOA,gBAAgB;AACzB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASlR,MAAMA,CACpBhlC,KAAK,EACLC,MAAM,EACNuyB,UAAU,EACV0jB,gBAAgB,EAChBnmC,YAAY,EACZomC,gBAAgB,EAChB4qE,YAAY,EACZkE,aAAa,EACbC,OAAO,EACP/qC,MAAM,EACNgrC,WAAW,EACX7rF,WAAW,EACX8rF,UAAU,EACVC,UAAU,EACV;EACA,IAAM70F,OAAO,GAAG,IAAAV,0BAAqB,EACnCn5B,IAAI,CAACwB,KAAK,CAACq6B,UAAU,GAAGxyB,KAAK,CAAC,EAC9BrJ,IAAI,CAACwB,KAAK,CAACq6B,UAAU,GAAGvyB,MAAM,CAAC,EAC/B8vB,UACF,CAAC;EAED,IAAI,CAACuJ,WAAW,EAAE;IAChB9I,OAAO,CAACyjD,qBAAqB,GAAG,KAAK;EACvC;EAEA,IAAIixC,OAAO,CAACniI,MAAM,KAAK,CAAC,EAAE;IACxB,OAAOytC,OAAO,CAACP,MAAM;EACvB;EAEAO,OAAO,CAAC35B,KAAK,CAAC27B,UAAU,EAAEA,UAAU,CAAC;EAErC,SAAS8yF,UAAUA,CAAC5jI,KAAK,EAAE;IACzB,OAAOiV,IAAI,CAACwB,KAAK,CAACzW,KAAK,GAAG8wC,UAAU,CAAC,GAAGA,UAAU;EACpD;EAEAhC,OAAO,CAACsH,wBAAwB,GAAG,SAAS;EAE5C,IAAMytF,gBAAgB,GAAG,IAAA1rH,mBAAW,EAAC,CAAC;EACtCqrH,OAAO,CAAC7yH,OAAO,CAAC,UAAUkiC,GAAG,EAAE/wC,CAAC,EAAEH,GAAG,EAAE;IACrC,IAAAS,cAAM,EAACyhI,gBAAgB,EAAEhxF,GAAG,CAAC36B,MAAM,CAAC;EACtC,CAAC,CAAC;EAEF,IAAI4rH,aAAa;EACjB,IAAMC,WAAW,GAAGjzF,UAAU,GAAG0jB,gBAAgB;EACjD;EACA,IAAMwvE,YAAY,GAAG,CAACpsF,WAAW,GAAG,CAAC,GAAG,CAAC,GAAG3iC,IAAI,CAACsP,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAIw/G,WAAW;EAE3E,IAAI,CAACL,UAAU,IAAIF,OAAO,CAACniI,MAAM,KAAK,CAAC,IAAIo3F,MAAM,KAAK,CAAC,EAAE;IACvDqrC,aAAa,GAAG,IAAA11F,0BAAqB,EACnCn5B,IAAI,CAACwB,KAAK,CAAC,IAAA2E,gBAAQ,EAACyoH,gBAAgB,CAAC,GAAGE,WAAW,CAAC,EACpD9uH,IAAI,CAACwB,KAAK,CAAC,IAAA4E,iBAAS,EAACwoH,gBAAgB,CAAC,GAAGE,WAAW,CAAC,EACrD11F,UACF,CAAC;IAED,IAAI,CAACuJ,WAAW,EAAE;MAChBksF,aAAa,CAACvxC,qBAAqB,GAAG,KAAK;IAC7C;IACA,IAAIlkE,YAAY,IAAIs1G,UAAU,EAAE;MAC9B,IAAMM,IAAI,GAAG,CAAC51G,YAAY,CAAC,CAAC,CAAC,GAAGw1G,gBAAgB,CAAC,CAAC,CAAC,IAAIE,WAAW;MAClE,IAAMG,IAAI,GAAG,EAAE71G,YAAY,CAAC,CAAC,CAAC,GAAGw1G,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAGE,WAAW;MACnE,IAAMzlH,MAAK,GAAG,IAAAlD,gBAAQ,EAACiT,YAAY,CAAC,GAAG01G,WAAW;MAClD,IAAMxlH,OAAM,GAAG,IAAAlD,iBAAS,EAACgT,YAAY,CAAC,GAAG01G,WAAW;MACpDD,aAAa,CAACK,IAAI,CAACF,IAAI,EAAEC,IAAI,EAAE5lH,MAAK,EAAEC,OAAM,CAAC;MAC7CulH,aAAa,CAACx/C,IAAI,CAAC,CAAC;IACtB;IAEAk/C,OAAO,CAAC7yH,OAAO,CAAC,UAAUkiC,GAAG,EAAE/wC,CAAC,EAAEH,GAAG,EAAE;MACrC,IAAMsiI,IAAI,GAAG,CAACpxF,GAAG,CAAC36B,MAAM,CAAC,CAAC,CAAC,GAAG2rH,gBAAgB,CAAC,CAAC,CAAC,IAAIE,WAAW;MAChE,IAAMG,IAAI,GAAG,EAAErxF,GAAG,CAAC36B,MAAM,CAAC,CAAC,CAAC,GAAG2rH,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAGE,WAAW;MACjE,IAAMK,QAAQ,GAAG,IAAAhpH,gBAAQ,EAACy3B,GAAG,CAAC36B,MAAM,CAAC,GAAG6rH,WAAW;MACnD,IAAMM,SAAS,GAAG,IAAAhpH,iBAAS,EAACw3B,GAAG,CAAC36B,MAAM,CAAC,GAAG6rH,WAAW;;MAErD;MACA,IAAIlxF,GAAG,CAACjB,KAAK,CAACtzB,KAAK,GAAG,CAAC,IAAIu0B,GAAG,CAACjB,KAAK,CAACrzB,MAAM,GAAG,CAAC,EAAE;QAC/CulH,aAAa,CAACpuF,SAAS,CACrB7C,GAAG,CAACjB,KAAK,EACT6mD,MAAM,EACNA,MAAM,EACN5lD,GAAG,CAACjB,KAAK,CAACtzB,KAAK,GAAG,CAAC,GAAGm6E,MAAM,EAC5B5lD,GAAG,CAACjB,KAAK,CAACrzB,MAAM,GAAG,CAAC,GAAGk6E,MAAM,EAC7B7gD,WAAW,GAAGqsF,IAAI,GAAGhvH,IAAI,CAACwB,KAAK,CAACwtH,IAAI,CAAC,EACrCrsF,WAAW,GAAGssF,IAAI,GAAGjvH,IAAI,CAACwB,KAAK,CAACytH,IAAI,CAAC,EACrCtsF,WAAW,GACPwsF,QAAQ,GACRnvH,IAAI,CAACwB,KAAK,CAACwtH,IAAI,GAAGG,QAAQ,CAAC,GAAGnvH,IAAI,CAACwB,KAAK,CAACwtH,IAAI,CAAC,EAClDrsF,WAAW,GACPysF,SAAS,GACTpvH,IAAI,CAACwB,KAAK,CAACytH,IAAI,GAAGG,SAAS,CAAC,GAAGpvH,IAAI,CAACwB,KAAK,CAACytH,IAAI,CACpD,CAAC;MACH;IACF,CAAC,CAAC;EACJ;EACA,IAAMI,aAAa,GAAG,IAAArpH,kBAAU,EAACokH,YAAY,CAAC;EAE9CkE,aAAa,CAACX,YAAY,CAAC,CAAC,CAACjyH,OAAO,CAAC,UAAUswH,QAAQ,EAAEn/H,CAAC,EAAEH,GAAG,EAAE;IAC/D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAM2N,MAAM,GAAG2xH,QAAQ,CAAC3xH,MAAM;IAC9B,IAAMzP,MAAM,GAAGohI,QAAQ,CAACphI,MAAM;IAC9B,IAAIqc,EAAE,GAAG5M,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnB6M,EAAE,GAAG7M,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,IAAI8M,EAAE,GAAG9M,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnB+M,EAAE,GAAG/M,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,IAAIgN,EAAE,GAAGhN,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnBiN,EAAE,GAAGjN,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB;IACA,IAAMi1H,EAAE,GAAGX,UAAU,CAAC,CAAC/jI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGykI,aAAa,CAAC,CAAC,CAAC,IAAI7vE,gBAAgB,CAAC;IAC3E,IAAM+vE,EAAE,GAAGZ,UAAU,CACnB,EAAE/jI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGykI,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG7vE,gBACvC,CAAC;IACD,IAAMsuE,EAAE,GAAGa,UAAU,CAAC,CAAC/jI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGykI,aAAa,CAAC,CAAC,CAAC,IAAI7vE,gBAAgB,CAAC;IAC3E,IAAM1vC,EAAE,GAAG6+G,UAAU,CACnB,EAAE/jI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGykI,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG7vE,gBACvC,CAAC;IACD,IAAMuuE,EAAE,GAAGY,UAAU,CAAC,CAAC/jI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGykI,aAAa,CAAC,CAAC,CAAC,IAAI7vE,gBAAgB,CAAC;IAC3E,IAAMzvC,EAAE,GAAG4+G,UAAU,CACnB,EAAE/jI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGykI,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG7vE,gBACvC,CAAC;;IAED;IACA;IACA;IACA,IAAMgwE,qBAAqB,GAAGvoH,EAAE;IAChC,IAAMwoH,qBAAqB,GAAGvoH,EAAE;IAChCD,EAAE,GAAG,CAAC;IACNC,EAAE,GAAG,CAAC;IACNC,EAAE,IAAIqoH,qBAAqB;IAC3BpoH,EAAE,IAAIqoH,qBAAqB;IAC3BpoH,EAAE,IAAImoH,qBAAqB;IAC3BloH,EAAE,IAAImoH,qBAAqB;IAE3B,IAAMC,eAAe,GAAG,CACtB,CAACvoH,EAAE,EAAEC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE0mH,EAAE,GAAGwB,EAAE,CAAC,EACvB,CAACjoH,EAAE,EAAEC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAEymH,EAAE,GAAGuB,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,CAAC,EAAEnoH,EAAE,EAAEC,EAAE,EAAE0I,EAAE,GAAGy/G,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,CAAC,EAAEloH,EAAE,EAAEC,EAAE,EAAEyI,EAAE,GAAGw/G,EAAE,CAAC,CACxB;IACD,IAAMI,WAAW,GAAG,IAAAthH,uBAAiB,EAACqhH,eAAe,CAAC;IACtD,IAAI,CAACC,WAAW,EAAE;MAChB;IACF;IAEA91F,OAAO,CAACgT,IAAI,CAAC,CAAC;IACdhT,OAAO,CAACs1C,SAAS,CAAC,CAAC;IAEnB,IAAI8+C,yBAAyB,CAAC,CAAC,IAAI,CAACtrF,WAAW,EAAE;MAC/C;MACA9I,OAAO,CAACu1C,MAAM,CAAC0+C,EAAE,EAAEh+G,EAAE,CAAC;MACtB;MACA,IAAM8/G,KAAK,GAAG,CAAC;MACf,IAAMC,EAAE,GAAGP,EAAE,GAAGxB,EAAE;MAClB,IAAMgC,EAAE,GAAGP,EAAE,GAAGz/G,EAAE;MAClB,KAAK,IAAIgnB,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG84F,KAAK,EAAE94F,IAAI,EAAE,EAAE;QACvC;QACA+C,OAAO,CAAC8W,MAAM,CACZm9E,EAAE,GAAGa,UAAU,CAAE,CAAC73F,IAAI,GAAG,CAAC,IAAI+4F,EAAE,GAAID,KAAK,CAAC,EAC1C9/G,EAAE,GAAG6+G,UAAU,CAAE73F,IAAI,GAAGg5F,EAAE,IAAKF,KAAK,GAAG,CAAC,CAAC,CAC3C,CAAC;QACD;QACA,IAAI94F,IAAI,IAAI84F,KAAK,GAAG,CAAC,EAAE;UACrB/1F,OAAO,CAAC8W,MAAM,CACZm9E,EAAE,GAAGa,UAAU,CAAE,CAAC73F,IAAI,GAAG,CAAC,IAAI+4F,EAAE,GAAID,KAAK,CAAC,EAC1C9/G,EAAE,GAAG6+G,UAAU,CAAE,CAAC73F,IAAI,GAAG,CAAC,IAAIg5F,EAAE,IAAKF,KAAK,GAAG,CAAC,CAAC,CACjD,CAAC;QACH;MACF;MACA;MACA/1F,OAAO,CAAC8W,MAAM,CAACo9E,EAAE,EAAEh+G,EAAE,CAAC;IACxB,CAAC,MAAM;MACL8pB,OAAO,CAACu1C,MAAM,CAAC0+C,EAAE,EAAEh+G,EAAE,CAAC;MACtB+pB,OAAO,CAAC8W,MAAM,CAAC2+E,EAAE,EAAEC,EAAE,CAAC;MACtB11F,OAAO,CAAC8W,MAAM,CAACo9E,EAAE,EAAEh+G,EAAE,CAAC;IACxB;IAEA8pB,OAAO,CAACw1C,IAAI,CAAC,CAAC;IAEdx1C,OAAO,CAACt7B,SAAS,CACfoxH,WAAW,CAAC,CAAC,CAAC,EACdA,WAAW,CAAC,CAAC,CAAC,EACdA,WAAW,CAAC,CAAC,CAAC,EACdA,WAAW,CAAC,CAAC,CAAC,EACdL,EAAE,EACFC,EACF,CAAC;IAED11F,OAAO,CAACz5B,SAAS,CACfwuH,gBAAgB,CAAC,CAAC,CAAC,GAAGY,qBAAqB,EAC3CZ,gBAAgB,CAAC,CAAC,CAAC,GAAGa,qBACxB,CAAC;IAED,IAAI9yF,KAAK;IACT,IAAIkyF,aAAa,EAAE;MACjBlyF,KAAK,GAAGkyF,aAAa,CAACv1F,MAAM;MAC5BO,OAAO,CAAC35B,KAAK,CAAC6uH,YAAY,EAAE,CAACA,YAAY,CAAC;IAC5C,CAAC,MAAM;MACL,IAAM10H,OAAM,GAAGk0H,OAAO,CAAC,CAAC,CAAC;MACzB,IAAMtrH,MAAM,GAAG5I,OAAM,CAAC4I,MAAM;MAC5B05B,KAAK,GAAGtiC,OAAM,CAACsiC,KAAK;MACpB9C,OAAO,CAAC35B,KAAK,CACX,IAAAiG,gBAAQ,EAAClD,MAAM,CAAC,GAAG05B,KAAK,CAACtzB,KAAK,EAC9B,CAAC,IAAAjD,iBAAS,EAACnD,MAAM,CAAC,GAAG05B,KAAK,CAACrzB,MAC7B,CAAC;IACH;IAEAuwB,OAAO,CAAC4G,SAAS,CAAC9D,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IAC9B9C,OAAO,CAACoT,OAAO,CAAC,CAAC;EACnB,CAAC,CAAC;EAEF,IAAI4hF,aAAa,EAAE;IACjB,IAAAj1F,kBAAa,EAACi1F,aAAa,CAAC;IAC5Bz1F,UAAU,CAAC3kC,IAAI,CAACo6H,aAAa,CAACv1F,MAAM,CAAC;EACvC;EAEA,IAAIk1F,WAAW,EAAE;IACf30F,OAAO,CAACgT,IAAI,CAAC,CAAC;IAEdhT,OAAO,CAACsH,wBAAwB,GAAG,aAAa;IAChDtH,OAAO,CAACiW,WAAW,GAAG,OAAO;IAC7BjW,OAAO,CAACqS,SAAS,GAAG,CAAC;IAErBoiF,aAAa,CAACX,YAAY,CAAC,CAAC,CAACjyH,OAAO,CAAC,UAAUswH,QAAQ,EAAEn/H,CAAC,EAAEH,GAAG,EAAE;MAC/D,IAAM9B,MAAM,GAAGohI,QAAQ,CAACphI,MAAM;MAC9B,IAAM0kI,EAAE,GAAG,CAAC1kI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGykI,aAAa,CAAC,CAAC,CAAC,IAAI7vE,gBAAgB;MAC/D,IAAM+vE,EAAE,GAAG,EAAE3kI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGykI,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG7vE,gBAAgB;MAChE,IAAMsuE,EAAE,GAAG,CAACljI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGykI,aAAa,CAAC,CAAC,CAAC,IAAI7vE,gBAAgB;MAC/D,IAAM1vC,EAAE,GAAG,EAAEllB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGykI,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG7vE,gBAAgB;MAChE,IAAMuuE,EAAE,GAAG,CAACnjI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGykI,aAAa,CAAC,CAAC,CAAC,IAAI7vE,gBAAgB;MAC/D,IAAMzvC,EAAE,GAAG,EAAEnlB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGykI,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG7vE,gBAAgB;MAEhE3lB,OAAO,CAACs1C,SAAS,CAAC,CAAC;MACnBt1C,OAAO,CAACu1C,MAAM,CAAC0+C,EAAE,EAAEh+G,EAAE,CAAC;MACtB+pB,OAAO,CAAC8W,MAAM,CAAC2+E,EAAE,EAAEC,EAAE,CAAC;MACtB11F,OAAO,CAAC8W,MAAM,CAACo9E,EAAE,EAAEh+G,EAAE,CAAC;MACtB8pB,OAAO,CAAC+W,SAAS,CAAC,CAAC;MACnB/W,OAAO,CAACsU,MAAM,CAAC,CAAC;IAClB,CAAC,CAAC;IAEFtU,OAAO,CAACoT,OAAO,CAAC,CAAC;EACnB;EACA,OAAOpT,OAAO,CAACP,MAAM;AACvB;;;;;;;;ACldA,IAAAmiB,OAAA,GAAA7sD,OAAA;AAEA,IAAAsI,UAAA,GAAAzG,sBAAA,CAAA7B,OAAA;AACA,IAAAqsG,MAAA,GAAAxqG,sBAAA,CAAA7B,OAAA;AACA,IAAAqrG,UAAA,GAAAxpG,sBAAA,CAAA7B,OAAA;AACA,IAAAmhI,cAAA,GAAAt/H,sBAAA,CAAA7B,OAAA;AACA,IAAAohI,OAAA,GAAAphI,OAAA;AAKA,IAAA2hB,KAAA,GAAA3hB,OAAA;AACA,IAAA0hB,OAAA,GAAA1hB,OAAA;AACA,IAAAuI,OAAA,GAAAvI,OAAA;AACA,IAAAuvC,IAAA,GAAAvvC,OAAA;AAAwC,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAmzB,KAAA,eAAAxyB,OAAA,oBAAAA,OAAA,CAAAyG,GAAA,IAAA+rB,IAAA,GAAAxyB,OAAA,CAAAyG,GAAA,CAAAhG,IAAA,aAAA+xB,IAAA,YAAAA,KAAAx6B,MAAA,EAAA0F,QAAA,EAAA+0B,QAAA,QAAAC,IAAA,GAAAC,cAAA,CAAA36B,MAAA,EAAA0F,QAAA,QAAAg1B,IAAA,cAAAE,IAAA,GAAA5zB,MAAA,CAAA6zB,wBAAA,CAAAH,IAAA,EAAAh1B,QAAA,OAAAk1B,IAAA,CAAAnsB,GAAA,WAAAmsB,IAAA,CAAAnsB,GAAA,CAAA5J,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAxB,MAAA,GAAAy6B,QAAA,YAAAG,IAAA,CAAAz6B,KAAA,cAAAq6B,IAAA,CAAAx1B,KAAA,OAAAF,SAAA;AAAA,SAAA61B,eAAAl1B,MAAA,EAAAC,QAAA,YAAAsB,MAAA,CAAArC,SAAA,CAAA+J,cAAA,CAAA7J,IAAA,CAAAY,MAAA,EAAAC,QAAA,KAAAD,MAAA,GAAAoC,eAAA,CAAApC,MAAA,OAAAA,MAAA,2BAAAA,MAAA;AAAA,SAAAoC,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KAjBxC;AACA;AACA;AAiBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMq8H,UAAU,0BAAA90B,KAAA;EACd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAA80B,WACE74G,UAAU,EACV84G,cAAc,EACd/F,UAAU,EACVgG,cAAc,EACdhkD,SAAS,EACT27C,gBAAgB,EAChBjsF,UAAU,EACV2nD,MAAM,EACN4sC,eAAe,EACf9F,cAAc,EACdkE,WAAW,EACXtzH,OAAO,EACP;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAAwlI,UAAA;IACAl8H,KAAA,GAAAvB,UAAA,OAAAy9H,UAAA,GAAM9jD,SAAS,EAAEquB,kBAAS,CAACvxE,IAAI,EAAE/tB,OAAO;;IAExC;AACJ;AACA;AACA;IACInH,KAAA,CAAKs8H,YAAY,GAAG7B,WAAW,KAAKl5H,SAAS,GAAGk5H,WAAW,GAAG,KAAK;;IAEnE;AACJ;AACA;AACA;IACIz6H,KAAA,CAAKgoC,WAAW,GAAGF,UAAU;;IAE7B;AACJ;AACA;AACA;IACI9nC,KAAA,CAAKu8H,OAAO,GAAG9sC,MAAM;;IAErB;AACJ;AACA;AACA;IACIzvF,KAAA,CAAKgsC,OAAO,GAAG,IAAI;;IAEnB;AACJ;AACA;AACA;IACIhsC,KAAA,CAAKw8H,eAAe,GAAGL,cAAc;;IAErC;AACJ;AACA;AACA;IACIn8H,KAAA,CAAKy8H,eAAe,GAAGL,cAAc;;IAErC;AACJ;AACA;AACA;IACIp8H,KAAA,CAAK08H,iBAAiB,GAAG3I,gBAAgB,GAAGA,gBAAgB,GAAG37C,SAAS;;IAExE;AACJ;AACA;AACA;IACIp4E,KAAA,CAAK28H,YAAY,GAAG,EAAE;;IAEtB;AACJ;AACA;AACA;IACI38H,KAAA,CAAK48H,oBAAoB,GAAG,IAAI;;IAEhC;AACJ;AACA;AACA;IACI58H,KAAA,CAAK68H,QAAQ,GAAG,CAAC;IAEjB,IAAMxG,YAAY,GAAG+F,cAAc,CAACrlC,kBAAkB,CACpD/2F,KAAA,CAAK08H,iBACP,CAAC;IACD,IAAMI,eAAe,GAAG98H,KAAA,CAAKy8H,eAAe,CAAC9mH,SAAS,CAAC,CAAC;IACxD,IAAI2gH,eAAe,GAAGt2H,KAAA,CAAKw8H,eAAe,CAAC7mH,SAAS,CAAC,CAAC;IAEtD,IAAMonH,mBAAmB,GAAGD,eAAe,GACvC,IAAA5oH,uBAAe,EAACmiH,YAAY,EAAEyG,eAAe,CAAC,GAC9CzG,YAAY;IAEhB,IAAI,IAAAnkH,eAAO,EAAC6qH,mBAAmB,CAAC,KAAK,CAAC,EAAE;MACtC;MACA;MACA/8H,KAAA,CAAKioC,KAAK,GAAGw+D,kBAAS,CAACpxE,KAAK;MAC5B,OAAA12B,0BAAA,CAAAqB,KAAA;IACF;IAEA,IAAMg9H,gBAAgB,GAAG35G,UAAU,CAAC1N,SAAS,CAAC,CAAC;IAC/C,IAAIqnH,gBAAgB,EAAE;MACpB,IAAI,CAAC1G,eAAe,EAAE;QACpBA,eAAe,GAAG0G,gBAAgB;MACpC,CAAC,MAAM;QACL1G,eAAe,GAAG,IAAApiH,uBAAe,EAACoiH,eAAe,EAAE0G,gBAAgB,CAAC;MACtE;IACF;IAEA,IAAMvxE,gBAAgB,GAAG2wE,cAAc,CAAC7zF,aAAa,CACnDvoC,KAAA,CAAK08H,iBAAiB,CAAC,CAAC,CAC1B,CAAC;IAED,IAAMlxE,gBAAgB,GAAG,IAAA8uE,uCAA+B,EACtDj3G,UAAU,EACV+yG,UAAU,EACV2G,mBAAmB,EACnBtxE,gBACF,CAAC;IAED,IAAI,CAACx1C,QAAQ,CAACu1C,gBAAgB,CAAC,IAAIA,gBAAgB,IAAI,CAAC,EAAE;MACxD;MACA;MACAxrD,KAAA,CAAKioC,KAAK,GAAGw+D,kBAAS,CAACpxE,KAAK;MAC5B,OAAA12B,0BAAA,CAAAqB,KAAA;IACF;IAEA,IAAMi9H,sBAAsB,GAC1B1G,cAAc,KAAKh1H,SAAS,GAAGg1H,cAAc,GAAGP,uBAAe;;IAEjE;AACJ;AACA;AACA;IACIh2H,KAAA,CAAKk9H,cAAc,GAAG,IAAI/G,sBAAa,CACrC9yG,UAAU,EACV+yG,UAAU,EACV2G,mBAAmB,EACnBzG,eAAe,EACf9qE,gBAAgB,GAAGyxE,sBAAsB,EACzCxxE,gBACF,CAAC;IAED,IAAIzrD,KAAA,CAAKk9H,cAAc,CAACtD,YAAY,CAAC,CAAC,CAACvhI,MAAM,KAAK,CAAC,EAAE;MACnD;MACA2H,KAAA,CAAKioC,KAAK,GAAGw+D,kBAAS,CAACpxE,KAAK;MAC5B,OAAA12B,0BAAA,CAAAqB,KAAA;IACF;IAEAA,KAAA,CAAK68H,QAAQ,GAAGV,cAAc,CAACtlC,iBAAiB,CAACrrC,gBAAgB,CAAC;IAClE,IAAInmC,YAAY,GAAGrlB,KAAA,CAAKk9H,cAAc,CAACvD,qBAAqB,CAAC,CAAC;IAE9D,IAAIrD,eAAe,EAAE;MACnB,IAAIjzG,UAAU,CAACzN,QAAQ,CAAC,CAAC,EAAE;QACzByP,YAAY,CAAC,CAAC,CAAC,GAAG,IAAAlL,WAAK,EACrBkL,YAAY,CAAC,CAAC,CAAC,EACfixG,eAAe,CAAC,CAAC,CAAC,EAClBA,eAAe,CAAC,CAAC,CACnB,CAAC;QACDjxG,YAAY,CAAC,CAAC,CAAC,GAAG,IAAAlL,WAAK,EACrBkL,YAAY,CAAC,CAAC,CAAC,EACfixG,eAAe,CAAC,CAAC,CAAC,EAClBA,eAAe,CAAC,CAAC,CACnB,CAAC;MACH,CAAC,MAAM;QACLjxG,YAAY,GAAG,IAAAnR,uBAAe,EAACmR,YAAY,EAAEixG,eAAe,CAAC;MAC/D;IACF;IAEA,IAAI,CAAC,IAAApkH,eAAO,EAACmT,YAAY,CAAC,EAAE;MAC1BrlB,KAAA,CAAKioC,KAAK,GAAGw+D,kBAAS,CAACpxE,KAAK;IAC9B,CAAC,MAAM;MACL,IAAM8nG,WAAW,GAAGhB,cAAc,CAACrlC,yBAAyB,CAC1DzxE,YAAY,EACZrlB,KAAA,CAAK68H,QACP,CAAC;MAED,KAAK,IAAIO,IAAI,GAAGD,WAAW,CAAC1tH,IAAI,EAAE2tH,IAAI,IAAID,WAAW,CAACvtH,IAAI,EAAEwtH,IAAI,EAAE,EAAE;QAClE,KAAK,IAAIC,IAAI,GAAGF,WAAW,CAACxtH,IAAI,EAAE0tH,IAAI,IAAIF,WAAW,CAACrtH,IAAI,EAAEutH,IAAI,EAAE,EAAE;UAClE,IAAMllD,IAAI,GAAGkkD,eAAe,CAACr8H,KAAA,CAAK68H,QAAQ,EAAEO,IAAI,EAAEC,IAAI,EAAEv1F,UAAU,CAAC;UACnE,IAAIqwC,IAAI,EAAE;YACRn4E,KAAA,CAAK28H,YAAY,CAACj8H,IAAI,CAACy3E,IAAI,CAAC;UAC9B;QACF;MACF;MAEA,IAAIn4E,KAAA,CAAK28H,YAAY,CAACtkI,MAAM,KAAK,CAAC,EAAE;QAClC2H,KAAA,CAAKioC,KAAK,GAAGw+D,kBAAS,CAACpxE,KAAK;MAC9B;IACF;IAAC,OAAAr1B,KAAA;EACH;;EAEA;AACF;AACA;AACA;EAHER,SAAA,CAAA08H,UAAA,EAAA90B,KAAA;EAAA,OAAAtwG,YAAA,CAAAolI,UAAA;IAAAnlI,GAAA;IAAAC,KAAA,EAIA,SAAAqxC,SAAA,EAAW;MACT,OAAO,IAAI,CAAC2D,OAAO;IACrB;;IAEA;AACF;AACA;EAFE;IAAAj1C,GAAA;IAAAC,KAAA,EAGA,SAAAsmI,WAAA,EAAa;MAAA,IAAAn4H,MAAA;MACX,IAAMq1H,OAAO,GAAG,EAAE;MAClB,IAAI,CAACmC,YAAY,CAACh1H,OAAO,CAAC,UAACwwE,IAAI,EAAK;QAClC,IAAIA,IAAI,IAAIA,IAAI,CAAC3vC,QAAQ,CAAC,CAAC,IAAIi+D,kBAAS,CAACrxE,MAAM,EAAE;UAC/ColG,OAAO,CAAC95H,IAAI,CAAC;YACXwO,MAAM,EAAE/J,MAAI,CAACq3H,eAAe,CAACzlC,kBAAkB,CAAC5e,IAAI,CAACC,SAAS,CAAC;YAC/DxvC,KAAK,EAAEuvC,IAAI,CAAC9vC,QAAQ,CAAC;UACvB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MACF,IAAI,CAACs0F,YAAY,CAACtkI,MAAM,GAAG,CAAC;MAE5B,IAAImiI,OAAO,CAACniI,MAAM,KAAK,CAAC,EAAE;QACxB,IAAI,CAAC4vC,KAAK,GAAGw+D,kBAAS,CAAC9kG,KAAK;MAC9B,CAAC,MAAM;QACL,IAAM60B,CAAC,GAAG,IAAI,CAACkmG,iBAAiB,CAAC,CAAC,CAAC;QACnC,IAAM5pH,IAAI,GAAG,IAAI,CAAC2pH,eAAe,CAACc,WAAW,CAAC/mG,CAAC,CAAC;QAChD,IAAMlhB,KAAK,GAAG,OAAOxC,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC;QACvD,IAAMyC,MAAM,GAAG,OAAOzC,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC;QACxD,IAAM24C,gBAAgB,GAAG,IAAI,CAACgxE,eAAe,CAACl0F,aAAa,CAAC/R,CAAC,CAAC;QAC9D,IAAMg1B,gBAAgB,GAAG,IAAI,CAACgxE,eAAe,CAACj0F,aAAa,CACzD,IAAI,CAACs0F,QACP,CAAC;QAED,IAAMxG,YAAY,GAAG,IAAI,CAACoG,eAAe,CAAC1lC,kBAAkB,CAC1D,IAAI,CAAC2lC,iBACP,CAAC;QAED,IAAI,CAAC1wF,OAAO,GAAG,IAAAwxF,cAAiB,EAC9BloH,KAAK,EACLC,MAAM,EACN,IAAI,CAACyyB,WAAW,EAChBwjB,gBAAgB,EAChB,IAAI,CAACgxE,eAAe,CAAC7mH,SAAS,CAAC,CAAC,EAChC81C,gBAAgB,EAChB4qE,YAAY,EACZ,IAAI,CAAC6G,cAAc,EACnB1C,OAAO,EACP,IAAI,CAAC+B,OAAO,EACZ,IAAI,CAACD,YAAY,EACjB,IAAI,CAAC1tF,WACP,CAAC;QAED,IAAI,CAAC3G,KAAK,GAAGw+D,kBAAS,CAACrxE,MAAM;MAC/B;MACA,IAAI,CAACvxB,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;EAFE;IAAA9M,GAAA;IAAAC,KAAA,EAGA,SAAAyxC,KAAA,EAAO;MAAA,IAAA6E,MAAA;MACL,IAAI,IAAI,CAACrF,KAAK,IAAIw+D,kBAAS,CAACvxE,IAAI,EAAE;QAChC,IAAI,CAAC+S,KAAK,GAAGw+D,kBAAS,CAACtxE,OAAO;QAC9B,IAAI,CAACtxB,OAAO,CAAC,CAAC;QAEd,IAAI45H,UAAU,GAAG,CAAC;QAElB,IAAI,CAACb,oBAAoB,GAAG,EAAE;QAC9B,IAAI,CAACD,YAAY,CAACh1H,OAAO,CAAC,UAACwwE,IAAI,EAAK;UAClC,IAAMlwC,KAAK,GAAGkwC,IAAI,CAAC3vC,QAAQ,CAAC,CAAC;UAC7B,IAAIP,KAAK,IAAIw+D,kBAAS,CAACvxE,IAAI,IAAI+S,KAAK,IAAIw+D,kBAAS,CAACtxE,OAAO,EAAE;YACzDsoG,UAAU,EAAE;YAEZ,IAAMC,eAAe,GAAG,IAAA/6H,cAAM,EAC5Bw1E,IAAI,EACJr0E,kBAAS,CAACpC,MAAM,EAChB,UAAUrD,CAAC,EAAE;cACX,IAAM4pC,KAAK,GAAGkwC,IAAI,CAAC3vC,QAAQ,CAAC,CAAC;cAC7B,IACEP,KAAK,IAAIw+D,kBAAS,CAACrxE,MAAM,IACzB6S,KAAK,IAAIw+D,kBAAS,CAAC9kG,KAAK,IACxBsmC,KAAK,IAAIw+D,kBAAS,CAACpxE,KAAK,EACxB;gBACA,IAAApyB,qBAAa,EAACy6H,eAAe,CAAC;gBAC9BD,UAAU,EAAE;gBACZ,IAAIA,UAAU,KAAK,CAAC,EAAE;kBACpB,IAAI,CAACE,gBAAgB,CAAC,CAAC;kBACvB,IAAI,CAACL,UAAU,CAAC,CAAC;gBACnB;cACF;YACF,CAAC,EACDhwF,MACF,CAAC;YACDA,MAAI,CAACsvF,oBAAoB,CAACl8H,IAAI,CAACg9H,eAAe,CAAC;UACjD;QACF,CAAC,CAAC;QAEF,IAAID,UAAU,KAAK,CAAC,EAAE;UACpB/rE,UAAU,CAAC,IAAI,CAAC4rE,UAAU,CAACh+H,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3C,CAAC,MAAM;UACL,IAAI,CAACq9H,YAAY,CAACh1H,OAAO,CAAC,UAAUwwE,IAAI,EAAEr/E,CAAC,EAAEH,GAAG,EAAE;YAChD,IAAMsvC,KAAK,GAAGkwC,IAAI,CAAC3vC,QAAQ,CAAC,CAAC;YAC7B,IAAIP,KAAK,IAAIw+D,kBAAS,CAACvxE,IAAI,EAAE;cAC3BijD,IAAI,CAAC1vC,IAAI,CAAC,CAAC;YACb;UACF,CAAC,CAAC;QACJ;MACF;IACF;;IAEA;AACF;AACA;EAFE;IAAA1xC,GAAA;IAAAC,KAAA,EAGA,SAAA2mI,iBAAA,EAAmB;MACjB,IAAI,CAACf,oBAAoB,CAACj1H,OAAO,CAAC1E,qBAAa,CAAC;MAChD,IAAI,CAAC25H,oBAAoB,GAAG,IAAI;IAClC;;IAEA;AACF;AACA;EAFE;IAAA7lI,GAAA;IAAAC,KAAA,EAGA,SAAAwvG,QAAA,EAAU;MACR,IAAI,IAAI,CAACx6D,OAAO,EAAE;QAChB,IAAAnG,kBAAa,EAAC,IAAI,CAACmG,OAAO,CAACtG,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5CL,kBAAU,CAAC3kC,IAAI,CAAC,IAAI,CAACsrC,OAAO,CAAC;QAC7B,IAAI,CAACA,OAAO,GAAG,IAAI;MACrB;MACA3a,IAAA,CAAA3yB,eAAA,CAAAw9H,UAAA,CAAA1gI,SAAA,oBAAAE,IAAA;IACF;EAAC;AAAA,EA3UsByqG,cAAI;AAAA,IAAA/uG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA8Ud4kI,UAAU;;;;;;;;ACxWzB,IAAAvzD,MAAA,GAAAjsE,sBAAA,CAAA7B,OAAA;AACA,IAAAk6H,UAAA,GAAAr4H,sBAAA,CAAA7B,OAAA;AACA,IAAAusG,KAAA,GAAA1qG,sBAAA,CAAA7B,OAAA;AACA,IAAAq6H,UAAA,GAAAx4H,sBAAA,CAAA7B,OAAA;AACA,IAAAqrG,UAAA,GAAAxpG,sBAAA,CAAA7B,OAAA;AACA,IAAAgrB,UAAA,GAAAhrB,OAAA;AAMA,IAAAD,MAAA,GAAAC,OAAA;AACA,IAAA0hB,OAAA,GAAA1hB,OAAA;AAWA,IAAAkrB,KAAA,GAAAlrB,OAAA;AACA,IAAAgK,KAAA,GAAAhK,OAAA;AACA,IAAAy2C,KAAA,GAAAz2C,OAAA;AAAqC,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAmzB,KAAA,eAAAxyB,OAAA,oBAAAA,OAAA,CAAAyG,GAAA,IAAA+rB,IAAA,GAAAxyB,OAAA,CAAAyG,GAAA,CAAAhG,IAAA,aAAA+xB,IAAA,YAAAA,KAAAx6B,MAAA,EAAA0F,QAAA,EAAA+0B,QAAA,QAAAC,IAAA,GAAAC,cAAA,CAAA36B,MAAA,EAAA0F,QAAA,QAAAg1B,IAAA,cAAAE,IAAA,GAAA5zB,MAAA,CAAA6zB,wBAAA,CAAAH,IAAA,EAAAh1B,QAAA,OAAAk1B,IAAA,CAAAnsB,GAAA,WAAAmsB,IAAA,CAAAnsB,GAAA,CAAA5J,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAxB,MAAA,GAAAy6B,QAAA,YAAAG,IAAA,CAAAz6B,KAAA,cAAAq6B,IAAA,CAAAx1B,KAAA,OAAAF,SAAA;AAAA,SAAA61B,eAAAl1B,MAAA,EAAAC,QAAA,YAAAsB,MAAA,CAAArC,SAAA,CAAA+J,cAAA,CAAA7J,IAAA,CAAAY,MAAA,EAAAC,QAAA,KAAAD,MAAA,GAAAoC,eAAA,CAAApC,MAAA,OAAAA,MAAA,2BAAAA,MAAA;AAAA,SAAAoC,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KA5BrC;AACA;AACA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAOM+9H,uBAAuB,0BAAAjxC,oBAAA;EAC3B;AACF;AACA;EACE,SAAAixC,wBAAYC,SAAS,EAAE;IAAA,IAAA79H,KAAA;IAAAtJ,eAAA,OAAAknI,uBAAA;IACrB59H,KAAA,GAAAvB,UAAA,OAAAm/H,uBAAA,GAAMC,SAAS;;IAEf;AACJ;AACA;AACA;IACI79H,KAAA,CAAK89H,aAAa,GAAG,IAAI;;IAEzB;AACJ;AACA;AACA;IACI99H,KAAA,CAAKotF,eAAe,GAAG,IAAI;;IAE3B;AACJ;AACA;AACA;IACIptF,KAAA,CAAK+9H,kBAAkB;;IAEvB;AACJ;AACA;AACA;IACI/9H,KAAA,CAAKg+H,kBAAkB,GAAG,IAAI;;IAE9B;AACJ;AACA;AACA;IACIh+H,KAAA,CAAKm0H,gBAAgB;;IAErB;AACJ;AACA;AACA;IACIn0H,KAAA,CAAKi+H,aAAa,GAAG,EAAE;;IAEvB;AACJ;AACA;AACA;IACIj+H,KAAA,CAAKk+H,SAAS,GAAG,KAAK;;IAEtB;AACJ;AACA;AACA;IACIl+H,KAAA,CAAK68E,SAAS,GAAG,IAAA1tE,mBAAW,EAAC,CAAC;;IAE9B;AACJ;AACA;AACA;IACInP,KAAA,CAAKm+H,aAAa,GAAG,IAAI/K,kBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAAC,OAAApzH,KAAA;EACjD;;EAEA;AACF;AACA;AACA;AACA;EAJER,SAAA,CAAAo+H,uBAAA,EAAAjxC,oBAAA;EAAA,OAAA71F,YAAA,CAAA8mI,uBAAA;IAAA7mI,GAAA;IAAAC,KAAA,EAKA,SAAAonI,eAAejmD,IAAI,EAAE;MACnB,IAAM0lD,SAAS,GAAG,IAAI,CAACllD,QAAQ,CAAC,CAAC;MACjC,IAAM0lD,SAAS,GAAGlmD,IAAI,CAAC3vC,QAAQ,CAAC,CAAC;MACjC,IAAMktF,sBAAsB,GAAGmI,SAAS,CAAC9H,yBAAyB,CAAC,CAAC;MACpE,OACEsI,SAAS,IAAI53B,kBAAS,CAACrxE,MAAM,IAC7BipG,SAAS,IAAI53B,kBAAS,CAACpxE,KAAK,IAC3BgpG,SAAS,IAAI53B,kBAAS,CAAC9kG,KAAK,IAAI,CAAC+zH,sBAAuB;IAE7D;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA3+H,GAAA;IAAAC,KAAA,EAOA,SAAAsnI,QAAQ9nG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAEkoD,UAAU,EAAE;MAC3B,IAAMjsB,UAAU,GAAGisB,UAAU,CAACjsB,UAAU;MACxC,IAAMryB,UAAU,GAAGs+C,UAAU,CAAClF,SAAS,CAACp5C,UAAU;MAClD,IAAMooH,SAAS,GAAG,IAAI,CAACllD,QAAQ,CAAC,CAAC;MACjC,IAAM4lD,UAAU,GAAGV,SAAS,CAACtqE,SAAS,CAAC,CAAC;MACxC,IAAI4kB,IAAI,GAAGomD,UAAU,CAACD,OAAO,CAAC9nG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAEi8B,UAAU,EAAEryB,UAAU,CAAC;MAC9D,IAAI0iE,IAAI,CAAC3vC,QAAQ,CAAC,CAAC,IAAIi+D,kBAAS,CAAC9kG,KAAK,EAAE;QACtC,IAAIk8H,SAAS,CAAC9H,yBAAyB,CAAC,CAAC,IAAI8H,SAAS,CAAChI,UAAU,CAAC,CAAC,GAAG,CAAC,EAAE;UACvE;UACA,IAAI,CAACqI,SAAS,GAAG,IAAI;QACvB;MACF;MACA,IAAI,CAAC,IAAI,CAACE,cAAc,CAACjmD,IAAI,CAAC,EAAE;QAC9BA,IAAI,GAAGA,IAAI,CAACwuB,cAAc,CAAC,CAAC;MAC9B;MACA,OAAOxuB,IAAI;IACb;;IAEA;AACF;AACA;AACA;EAHE;IAAAphF,GAAA;IAAAC,KAAA,EAIA,SAAA48D,QAAQD,KAAK,EAAE;MACb,IAAMI,UAAU,GAAG,IAAI,CAACA,UAAU;MAClC,IAAI,CAACA,UAAU,EAAE;QACf,OAAO,IAAI;MACb;MAEA,IAAMnQ,KAAK,GAAG,IAAI,CAAC+0B,QAAQ,CAAC,CAAC;MAC7B,IAAMhtE,UAAU,GAAG,IAAAwJ,gBAAc,EAC/B4+C,UAAU,CAAC20C,0BAA0B,EACrC/0C,KAAK,CAACl4D,KAAK,CAAC,CACd,CAAC;MAED,IAAM64D,WAAW,GAAG1Q,KAAK,CAACjuC,SAAS,CAAC,CAAC;MACrC,IAAI2+C,WAAW,EAAE;QACf,IAAI,CAAC,IAAApkD,0BAAkB,EAACokD,WAAW,EAAE3oD,UAAU,CAAC,EAAE;UAChD,OAAO,IAAI;QACb;MACF;MAEA,IAAMm8B,UAAU,GAAGisB,UAAU,CAACjsB,UAAU;MACxC,IAAMryB,UAAU,GAAGs+C,UAAU,CAAClF,SAAS,CAACp5C,UAAU;MAClD,IAAMo5C,SAAS,GAAGkF,UAAU,CAAClF,SAAS;MACtC,IAAMvoD,MAAM,GAAGs9C,KAAK,CAAC4P,eAAe,CAAC,CAAC;MACtC,IAAMt7C,QAAQ,GAAG5R,MAAM,CAACk4H,wBAAwB,CAAC3vE,SAAS,CAACp5C,UAAU,CAAC;MACtE,IAAMgpH,cAAc,GAAGn4H,MAAM,CAACo4H,iBAAiB,CAAC3qE,UAAU,CAACjsB,UAAU,CAAC;MAEtE,KACE,IAAItR,CAAC,GAAGte,QAAQ,CAAC2+E,iBAAiB,CAAChoC,SAAS,CAACj8C,UAAU,CAAC,EACxD4jB,CAAC,IAAIte,QAAQ,CAAC8rC,UAAU,CAAC,CAAC,EAC1B,EAAExtB,CAAC,EACH;QACA,IAAM4hD,SAAS,GAAGlgE,QAAQ,CAACymH,wBAAwB,CAAChzH,UAAU,EAAE6qB,CAAC,CAAC;QAClE,IAAM2hD,IAAI,GAAG7xE,MAAM,CAACg4H,OAAO,CACzB9nG,CAAC,EACD4hD,SAAS,CAAC,CAAC,CAAC,EACZA,SAAS,CAAC,CAAC,CAAC,EACZtwC,UAAU,EACVryB,UACF,CAAC;QACD,IACE,EAAE0iE,IAAI,YAAYgvB,kBAAS,IAAIhvB,IAAI,YAAY+jD,aAAU,CAAC,IACzD/jD,IAAI,YAAY+jD,aAAU,IAAI/jD,IAAI,CAAC3vC,QAAQ,CAAC,CAAC,KAAKi+D,kBAAS,CAACpxE,KAAM,EACnE;UACA,OAAO,IAAI;QACb;QAEA,IAAI8iD,IAAI,CAAC3vC,QAAQ,CAAC,CAAC,KAAKi+D,kBAAS,CAACrxE,MAAM,EAAE;UACxC;QACF;QAEA,IAAMwpG,UAAU,GAAG1mH,QAAQ,CAAC06B,SAAS,CAACpc,CAAC,CAAC;QACxC,IAAMqoG,QAAQ,GAAG,IAAAxtF,YAAM,EAACn5B,QAAQ,CAACqlH,WAAW,CAAC/mG,CAAC,CAAC,CAAC;QAChD,IAAMy8E,cAAc,GAAG/6F,QAAQ,CAACqwB,aAAa,CAAC/R,CAAC,CAAC;QAEhD,IAAM8jD,GAAG,GAAGruE,IAAI,CAAC8J,KAAK,CACpB0oH,cAAc,IACX,CAAC9yH,UAAU,CAAC,CAAC,CAAC,GAAGizH,UAAU,CAAC,CAAC,CAAC,IAAI3rB,cAAc,GAC/C76B,SAAS,CAAC,CAAC,CAAC,GAAGymD,QAAQ,CAAC,CAAC,CAAC,CAChC,CAAC;QAED,IAAMtkD,GAAG,GAAGtuE,IAAI,CAAC8J,KAAK,CACpB0oH,cAAc,IACX,CAACG,UAAU,CAAC,CAAC,CAAC,GAAGjzH,UAAU,CAAC,CAAC,CAAC,IAAIsnG,cAAc,GAC/C76B,SAAS,CAAC,CAAC,CAAC,GAAGymD,QAAQ,CAAC,CAAC,CAAC,CAChC,CAAC;QAED,IAAMpvC,MAAM,GAAGxjF,IAAI,CAACwB,KAAK,CACvBgxH,cAAc,GAAGn4H,MAAM,CAACw4H,sBAAsB,CAACjwE,SAAS,CAACp5C,UAAU,CACrE,CAAC;QAED,OAAO,IAAI,CAACk3B,YAAY,CAACwrC,IAAI,CAAC9vC,QAAQ,CAAC,CAAC,EAAEiyC,GAAG,GAAGmV,MAAM,EAAElV,GAAG,GAAGkV,MAAM,CAAC;MACvE;MAEA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA14F,GAAA;IAAAC,KAAA,EAMA,SAAAihF,mBAAmBC,KAAK,EAAEnuB,IAAI,EAAEouB,IAAI,EAAE;MACpC,IAAI,IAAI,CAACimD,cAAc,CAACjmD,IAAI,CAAC,EAAE;QAC7B,OAAA9mD,IAAA,CAAA3yB,eAAA,CAAAk/H,uBAAA,CAAApiI,SAAA,+BAAAE,IAAA,OAAgCw8E,KAAK,EAAEnuB,IAAI,EAAEouB,IAAI;MACnD;MACA,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAphF,GAAA;IAAAC,KAAA,EAKA,SAAA29D,aAAaZ,UAAU,EAAE;MACvB,OAAO,CAAC,CAAC,IAAI,CAAC4kB,QAAQ,CAAC,CAAC,CAACplB,SAAS,CAAC,CAAC;IACtC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAx8D,GAAA;IAAAC,KAAA,EAMA,SAAA49D,YAAYb,UAAU,EAAEl9D,MAAM,EAAE;MAC9B,IAAMu9D,UAAU,GAAGL,UAAU,CAACG,gBAAgB,CAACH,UAAU,CAAC06B,UAAU,CAAC;MACrE,IAAM5/B,SAAS,GAAGkF,UAAU,CAAClF,SAAS;MACtC,IAAMp5C,UAAU,GAAGo5C,SAAS,CAACp5C,UAAU;MACvC,IAAMspH,cAAc,GAAGlwE,SAAS,CAACj8C,UAAU;MAC3C,IAAMosH,UAAU,GAAGnwE,SAAS,CAACl8C,MAAM;MACnC,IAAME,QAAQ,GAAGg8C,SAAS,CAACh8C,QAAQ;MACnC,IAAMi1B,UAAU,GAAGisB,UAAU,CAACjsB,UAAU;MAExC,IAAM+1F,SAAS,GAAG,IAAI,CAACllD,QAAQ,CAAC,CAAC;MACjC,IAAM4lD,UAAU,GAAGV,SAAS,CAACtqE,SAAS,CAAC,CAAC;MACxC,IAAM0rE,cAAc,GAAGV,UAAU,CAACx6H,WAAW,CAAC,CAAC;MAC/C,IAAMmU,QAAQ,GAAGqmH,UAAU,CAACC,wBAAwB,CAAC/oH,UAAU,CAAC;MAChE,IAAM+gB,CAAC,GAAGte,QAAQ,CAAC2+E,iBAAiB,CAACkoC,cAAc,EAAER,UAAU,CAACW,UAAU,CAAC;MAC3E,IAAMjsB,cAAc,GAAG/6F,QAAQ,CAACqwB,aAAa,CAAC/R,CAAC,CAAC;MAEhD,IAAItnB,MAAM,GAAG6kD,UAAU,CAAC7kD,MAAM;MAC9B,IAAM0D,UAAU,GAAGmhD,UAAU,CAAClF,SAAS,CAACj8C,UAAU;MAClD,IAAM6rH,cAAc,GAAGF,UAAU,CAACG,iBAAiB,CAAC52F,UAAU,CAAC;MAC/D;MACA,IAAMxyB,KAAK,GAAGrJ,IAAI,CAACwB,KAAK,CAAE,IAAA2E,gBAAQ,EAAClD,MAAM,CAAC,GAAG0D,UAAU,GAAIk1B,UAAU,CAAC;MACtE,IAAMvyB,MAAM,GAAGtJ,IAAI,CAACwB,KAAK,CAAE,IAAA4E,iBAAS,EAACnD,MAAM,CAAC,GAAG0D,UAAU,GAAIk1B,UAAU,CAAC;MAExE,IAAMwsB,WAAW,GACfF,UAAU,CAACllD,MAAM,IAAI,IAAA0V,oBAAc,EAACwvC,UAAU,CAACllD,MAAM,EAAEuG,UAAU,CAAC;MACpE,IAAI6+C,WAAW,EAAE;QACfplD,MAAM,GAAG,IAAAgF,uBAAe,EACtBhF,MAAM,EACN,IAAA0V,oBAAc,EAACwvC,UAAU,CAACllD,MAAM,EAAEuG,UAAU,CAC9C,CAAC;MACH;MAEA,IAAMnJ,EAAE,GAAI2mG,cAAc,GAAG39F,KAAK,GAAI,CAAC,GAAGmpH,cAAc;MACxD,IAAMlyH,EAAE,GAAI0mG,cAAc,GAAG19F,MAAM,GAAI,CAAC,GAAGkpH,cAAc;MACzD,IAAMU,YAAY,GAAG,CACnBH,UAAU,CAAC,CAAC,CAAC,GAAG1yH,EAAE,EAClB0yH,UAAU,CAAC,CAAC,CAAC,GAAGzyH,EAAE,EAClByyH,UAAU,CAAC,CAAC,CAAC,GAAG1yH,EAAE,EAClB0yH,UAAU,CAAC,CAAC,CAAC,GAAGzyH,EAAE,CACnB;MAED,IAAM+rE,SAAS,GAAGpgE,QAAQ,CAAC4+E,yBAAyB,CAAC5nF,MAAM,EAAEsnB,CAAC,CAAC;;MAE/D;AACJ;AACA;MACI,IAAM4oG,cAAc,GAAG,CAAC,CAAC;MACzBA,cAAc,CAAC5oG,CAAC,CAAC,GAAG,CAAC,CAAC;MAEtB,IAAM6oG,eAAe,GAAG,IAAI,CAAChnD,sBAAsB,CACjDkmD,UAAU,EACV9oH,UAAU,EACV2pH,cACF,CAAC;MAED,IAAMviD,SAAS,GAAG,IAAI,CAACA,SAAS;MAChC,IAAMyiD,YAAY,GAAG,IAAI,CAACnB,aAAa;MACvC,IAAI,CAACD,SAAS,GAAG,KAAK;MACtB,IAAM1S,QAAQ,GAAG34G,QAAQ,GACrB,IAAAG,0BAAkB,EAChB67C,SAAS,CAACl8C,MAAM,EAChBC,UAAU,EACVC,QAAQ,EACRkhD,UAAU,CAACjhD,IACb,CAAC,GACDvR,SAAS;MACb,KAAK,IAAIqK,CAAC,GAAG0sE,SAAS,CAAC7oE,IAAI,EAAE7D,CAAC,IAAI0sE,SAAS,CAAC1oE,IAAI,EAAE,EAAEhE,CAAC,EAAE;QACrD,KAAK,IAAIC,CAAC,GAAGysE,SAAS,CAAC3oE,IAAI,EAAE9D,CAAC,IAAIysE,SAAS,CAACxoE,IAAI,EAAE,EAAEjE,CAAC,EAAE;UACrD,IACEgH,QAAQ,IACR,CAACqF,QAAQ,CAACqnH,2BAA2B,CAAC,CAAC/oG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,CAAC,EAAE2/G,QAAQ,CAAC,EAC1D;YACA;UACF;UACA,IAAMrzC,IAAI,GAAG,IAAI,CAACmmD,OAAO,CAAC9nG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAEkoD,UAAU,CAAC;UAC9C,IAAI,IAAI,CAACqqE,cAAc,CAACjmD,IAAI,CAAC,EAAE;YAC7B,IAAM2Y,GAAG,GAAG,IAAAvsF,YAAM,EAAC,IAAI,CAAC;YACxB,IAAI4zE,IAAI,CAAC3vC,QAAQ,CAAC,CAAC,IAAIi+D,kBAAS,CAACrxE,MAAM,EAAE;cACvCgqG,cAAc,CAAC5oG,CAAC,CAAC,CAAC2hD,IAAI,CAACC,SAAS,CAACprE,QAAQ,CAAC,CAAC,CAAC,GAAGmrE,IAAI;cACnD,IAAI6uB,YAAY,GAAG7uB,IAAI,CAAC6uB,YAAY,CAAClW,GAAG,CAAC;cACzC,IAAIkW,YAAY,IAAI5yC,UAAU,CAAC3iB,OAAO,KAAK,CAAC,EAAE;gBAC5C;gBACA0mC,IAAI,CAAC8uB,aAAa,CAACnW,GAAG,CAAC;gBACvBkW,YAAY,GAAG,KAAK;cACtB;cACA,IACE,CAAC,IAAI,CAACk3B,SAAS,KACdl3B,YAAY,IAAI,CAAC,IAAI,CAACi3B,aAAa,CAACx9H,QAAQ,CAAC03E,IAAI,CAAC,CAAC,EACpD;gBACA,IAAI,CAAC+lD,SAAS,GAAG,IAAI;cACvB;YACF;YACA,IAAI/lD,IAAI,CAAC2uB,QAAQ,CAAChW,GAAG,EAAE/8B,UAAU,CAACgzC,IAAI,CAAC,KAAK,CAAC,EAAE;cAC7C;cACA;YACF;UACF;UAEA,IAAMy4B,cAAc,GAAGtnH,QAAQ,CAACunH,0BAA0B,CACxDtnD,IAAI,CAACC,SAAS,EACdknD,YAAY,EACZziD,SACF,CAAC;UAED,IAAI6iD,OAAO,GAAG,KAAK;UACnB,IAAIF,cAAc,EAAE;YAClBE,OAAO,GAAGL,eAAe,CAAC7oG,CAAC,GAAG,CAAC,EAAEgpG,cAAc,CAAC;UAClD;UACA,IAAI,CAACE,OAAO,EAAE;YACZxnH,QAAQ,CAACynH,+BAA+B,CACtCxnD,IAAI,CAACC,SAAS,EACdinD,eAAe,EACfC,YAAY,EACZziD,SACF,CAAC;UACH;QACF;MACF;MAEA,IAAM+iD,WAAW,GACb3sB,cAAc,GAAG8rB,cAAc,GAAIj3F,UAAU,GAAI22F,cAAc;;MAEnE;MACA,IAAA/2G,kBAAgB,EACd,IAAI,CAACwyD,cAAc,EACnBnmB,UAAU,CAACjhD,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EACtBihD,UAAU,CAACjhD,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EACtB,CAAC,GAAGg1B,UAAU,EACd,CAAC,GAAGA,UAAU,EACdj1B,QAAQ,EACR,CAACyC,KAAK,GAAG,CAAC,EACV,CAACC,MAAM,GAAG,CACZ,CAAC;MAED,IAAMwqE,eAAe,GAAG,IAAA8/C,mBAAiB,EAAC,IAAI,CAAC3lD,cAAc,CAAC;MAE9D,IAAI,CAACM,YAAY,CAAC3jF,MAAM,EAAEkpF,eAAe,EAAE,IAAI,CAACv8B,aAAa,CAACuQ,UAAU,CAAC,CAAC;MAE1E,IAAMjuB,OAAO,GAAG,IAAI,CAAC61C,gBAAgB,CAAC5nB,UAAU,CAAC;MACjD,IAAMxuB,MAAM,GAAG,IAAI,CAACO,OAAO,CAACP,MAAM;MAElC,IAAAr4B,sBAAW,EAAC,IAAI,CAAC8rE,qBAAqB,EAAE,IAAI,CAACkB,cAAc,CAAC;;MAE5D;MACA,IAAAxyD,kBAAgB,EACd,IAAI,CAACuyD,aAAa,EAClB3kE,KAAK,GAAG,CAAC,EACTC,MAAM,GAAG,CAAC,EACVqqH,WAAW,EACXA,WAAW,EACX,CAAC,EACD,CAACtqH,KAAK,GAAG,CAAC,EACV,CAACC,MAAM,GAAG,CACZ,CAAC;MAED,IAAIgwB,MAAM,CAACjwB,KAAK,IAAIA,KAAK,IAAIiwB,MAAM,CAAChwB,MAAM,IAAIA,MAAM,EAAE;QACpDgwB,MAAM,CAACjwB,KAAK,GAAGA,KAAK;QACpBiwB,MAAM,CAAChwB,MAAM,GAAGA,MAAM;MACxB,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC6kE,eAAe,EAAE;QAChCt0C,OAAO,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEzwB,KAAK,EAAEC,MAAM,CAAC;MACxC;MAEA,IAAI++C,WAAW,EAAE;QACf,IAAI,CAACumB,aAAa,CAAC/0C,OAAO,EAAEiuB,UAAU,EAAEO,WAAW,CAAC;MACtD;MAEA,IAAI,CAACiqE,UAAU,CAACroC,cAAc,CAAC,CAAC,EAAE;QAChCpwD,OAAO,CAACyjD,qBAAqB,GAAG,KAAK;MACvC;MAEA,IAAI,CAAC/N,SAAS,CAAC11C,OAAO,EAAEiuB,UAAU,CAAC;MAEnC,IAAI,CAACkqE,aAAa,CAAC5lI,MAAM,GAAG,CAAC;MAC7B;MACA,IAAIqsF,EAAE,GAAG7mF,MAAM,CAAC4D,IAAI,CAAC29H,cAAc,CAAC,CAAC5xH,GAAG,CAAChP,MAAM,CAAC;MAChDkmF,EAAE,CAACtqF,IAAI,CAAClC,gBAAS,CAAC;MAElB,IAAI4nI,KAAK,EAAEC,MAAM,EAAEC,WAAW;MAC9B,IACE5rE,UAAU,CAAC3iB,OAAO,KAAK,CAAC,KACvB,CAAC,IAAI,CAAC2oC,eAAe,IACpBmkD,UAAU,CAAC0B,SAAS,CAAClsE,UAAU,CAAClF,SAAS,CAACp5C,UAAU,CAAC,CAAC,EACxD;QACAivE,EAAE,GAAGA,EAAE,CAAC51D,OAAO,CAAC,CAAC;MACnB,CAAC,MAAM;QACLgxG,KAAK,GAAG,EAAE;QACVC,MAAM,GAAG,EAAE;MACb;MACA,KAAK,IAAIjnI,CAAC,GAAG4rF,EAAE,CAACrsF,MAAM,GAAG,CAAC,EAAES,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QACvC,IAAMonI,QAAQ,GAAGx7C,EAAE,CAAC5rF,CAAC,CAAC;QACtB,IAAMqnI,oBAAoB,GAAG5B,UAAU,CAAC6B,gBAAgB,CACtDF,QAAQ,EACRp4F,UAAU,EACVryB,UACF,CAAC;QACD,IAAM03C,iBAAiB,GAAGj1C,QAAQ,CAACqwB,aAAa,CAAC23F,QAAQ,CAAC;QAC1D,IAAMG,YAAY,GAAGlzE,iBAAiB,GAAG8lD,cAAc;QACvD,IAAM3mG,GAAE,GAAG6zH,oBAAoB,CAAC,CAAC,CAAC,GAAGE,YAAY,GAAGT,WAAW;QAC/D,IAAMrzH,GAAE,GAAG4zH,oBAAoB,CAAC,CAAC,CAAC,GAAGE,YAAY,GAAGT,WAAW;QAC/D,IAAMU,eAAe,GAAGpoH,QAAQ,CAACymH,wBAAwB,CACvD,IAAA1sH,kBAAU,EAACktH,YAAY,CAAC,EACxBe,QACF,CAAC;QACD,IAAMK,gBAAgB,GAAGroH,QAAQ,CAAC6+E,kBAAkB,CAACupC,eAAe,CAAC;QACrE,IAAM/uD,MAAM,GAAG,IAAAp8D,gBAAc,EAAC,IAAI,CAAC8kE,aAAa,EAAE,CAC/CwkD,cAAc,IAAI8B,gBAAgB,CAAC,CAAC,CAAC,GAAGpB,YAAY,CAAC,CAAC,CAAC,CAAC,GACvDlsB,cAAc,EACfwrB,cAAc,IAAIU,YAAY,CAAC,CAAC,CAAC,GAAGoB,gBAAgB,CAAC,CAAC,CAAC,CAAC,GACvDttB,cAAc,CACjB,CAAC;QACF,IAAMutB,UAAU,GACd/B,cAAc,GAAGF,UAAU,CAACO,sBAAsB,CAACrpH,UAAU,CAAC;QAChE,IAAMgrH,WAAW,GAAGrB,cAAc,CAACc,QAAQ,CAAC;QAC5C,KAAK,IAAMQ,YAAY,IAAID,WAAW,EAAE;UACtC,IAAMtoD,KAAI,GAAG;UACXsoD,WAAW,CAACC,YAAY,CACzB;UACD,IAAMtoD,SAAS,GAAGD,KAAI,CAACC,SAAS;;UAEhC;UACA,IAAMuoD,MAAM,GAAGL,eAAe,CAAC,CAAC,CAAC,GAAGloD,SAAS,CAAC,CAAC,CAAC;UAChD,IAAMwoD,KAAK,GAAG30H,IAAI,CAACwB,KAAK,CAAC8jE,MAAM,CAAC,CAAC,CAAC,GAAG,CAACovD,MAAM,GAAG,CAAC,IAAIr0H,GAAE,CAAC;UACvD,IAAMu0H,MAAM,GAAGP,eAAe,CAAC,CAAC,CAAC,GAAGloD,SAAS,CAAC,CAAC,CAAC;UAChD,IAAM0oD,KAAK,GAAG70H,IAAI,CAACwB,KAAK,CAAC8jE,MAAM,CAAC,CAAC,CAAC,GAAG,CAACsvD,MAAM,GAAG,CAAC,IAAIt0H,GAAE,CAAC;UACvD,IAAMX,EAAC,GAAGK,IAAI,CAACwB,KAAK,CAAC8jE,MAAM,CAAC,CAAC,CAAC,GAAGovD,MAAM,GAAGr0H,GAAE,CAAC;UAC7C,IAAMT,EAAC,GAAGI,IAAI,CAACwB,KAAK,CAAC8jE,MAAM,CAAC,CAAC,CAAC,GAAGsvD,MAAM,GAAGt0H,GAAE,CAAC;UAC7C,IAAMssC,CAAC,GAAG+nF,KAAK,GAAGh1H,EAAC;UACnB,IAAM0rB,CAAC,GAAGwpG,KAAK,GAAGj1H,EAAC;UACnB,IAAMy6F,UAAU,GAAG9vE,CAAC,KAAK0pG,QAAQ;UAEjC,IAAMl5B,aAAY,GAChBV,UAAU,IAAInuB,KAAI,CAAC2uB,QAAQ,CAAC,IAAAviG,YAAM,EAAC,IAAI,CAAC,EAAEwvD,UAAU,CAACgzC,IAAI,CAAC,KAAK,CAAC;UAClE,IAAIg6B,YAAY,GAAG,KAAK;UACxB,IAAI,CAAC/5B,aAAY,EAAE;YACjB,IAAI84B,KAAK,EAAE;cACT;cACAE,WAAW,GAAG,CAACp0H,EAAC,EAAEC,EAAC,EAAED,EAAC,GAAGitC,CAAC,EAAEhtC,EAAC,EAAED,EAAC,GAAGitC,CAAC,EAAEhtC,EAAC,GAAGyrB,CAAC,EAAE1rB,EAAC,EAAEC,EAAC,GAAGyrB,CAAC,CAAC;cACtD,KAAK,IAAIx+B,EAAC,GAAG,CAAC,EAAEoI,EAAE,GAAG4+H,KAAK,CAACznI,MAAM,EAAES,EAAC,GAAGoI,EAAE,EAAE,EAAEpI,EAAC,EAAE;gBAC9C,IAAI09B,CAAC,KAAK0pG,QAAQ,IAAIA,QAAQ,GAAGH,MAAM,CAACjnI,EAAC,CAAC,EAAE;kBAC1C,IAAMwiF,IAAI,GAAGwkD,KAAK,CAAChnI,EAAC,CAAC;kBACrB,IACE,IAAAqb,kBAAU,EACR,CAACvI,EAAC,EAAEC,EAAC,EAAED,EAAC,GAAGitC,CAAC,EAAEhtC,EAAC,GAAGyrB,CAAC,CAAC,EACpB,CAACgkD,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CACrC,CAAC,EACD;oBACA,IAAI,CAACylD,YAAY,EAAE;sBACjBj7F,OAAO,CAACgT,IAAI,CAAC,CAAC;sBACdioF,YAAY,GAAG,IAAI;oBACrB;oBACAj7F,OAAO,CAACs1C,SAAS,CAAC,CAAC;oBACnB;oBACAt1C,OAAO,CAACu1C,MAAM,CAAC2kD,WAAW,CAAC,CAAC,CAAC,EAAEA,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC9Cl6F,OAAO,CAAC8W,MAAM,CAACojF,WAAW,CAAC,CAAC,CAAC,EAAEA,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC9Cl6F,OAAO,CAAC8W,MAAM,CAACojF,WAAW,CAAC,CAAC,CAAC,EAAEA,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC9Cl6F,OAAO,CAAC8W,MAAM,CAACojF,WAAW,CAAC,CAAC,CAAC,EAAEA,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC9C;oBACAl6F,OAAO,CAACu1C,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;oBAChCx1C,OAAO,CAAC8W,MAAM,CAAC0+B,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;oBAChCx1C,OAAO,CAAC8W,MAAM,CAAC0+B,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;oBAChCx1C,OAAO,CAAC8W,MAAM,CAAC0+B,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;oBAChCx1C,OAAO,CAACw1C,IAAI,CAAC,CAAC;kBAChB;gBACF;cACF;cACAwkD,KAAK,CAACp/H,IAAI,CAACs/H,WAAW,CAAC;cACvBD,MAAM,CAACr/H,IAAI,CAACw/H,QAAQ,CAAC;YACvB,CAAC,MAAM;cACLp6F,OAAO,CAACC,SAAS,CAACn6B,EAAC,EAAEC,EAAC,EAAEgtC,CAAC,EAAEvhB,CAAC,CAAC;YAC/B;UACF;UACA,IAAI,CAAC0pG,aAAa,CAChB7oD,KAAI,EACJpkB,UAAU,EACVnoD,EAAC,EACDC,EAAC,EACDgtC,CAAC,EACDvhB,CAAC,EACDkpG,UAAU,EACVl6B,UACF,CAAC;UACD,IAAIw5B,KAAK,IAAI,CAAC94B,aAAY,EAAE;YAC1B,IAAI+5B,YAAY,EAAE;cAChBj7F,OAAO,CAACoT,OAAO,CAAC,CAAC;YACnB;YACA,IAAI,CAAC+kF,aAAa,CAACgD,OAAO,CAAC9oD,KAAI,CAAC;UAClC,CAAC,MAAM;YACL,IAAI,CAAC8lD,aAAa,CAACv9H,IAAI,CAACy3E,KAAI,CAAC;UAC/B;UACA,IAAI,CAAC+oD,eAAe,CAACntE,UAAU,CAAC85D,SAAS,EAAE0Q,UAAU,EAAEpmD,KAAI,CAAC;QAC9D;MACF;MAEA,IAAI,CAACg8C,gBAAgB,GAAG8K,cAAc;MACtC,IAAI,CAACjlD,kBAAkB,GAAGi5B,cAAc;MACxC,IAAI,CAAC6qB,aAAa,GAChB,CAAC,IAAI,CAAC1wC,eAAe,IAAI,CAAC,IAAAvzF,cAAM,EAAC,IAAI,CAACuzF,eAAe,EAAE+xC,YAAY,CAAC;MACtE,IAAI,CAAC/xC,eAAe,GAAG+xC,YAAY;MACnC,IAAI,CAACpB,kBAAkB,GAAGj2F,UAAU;MACpC,IAAI,CAACk2F,kBAAkB,GAAGvoH,UAAU;MAEpC,IAAI,CAAC0rH,iBAAiB,CACpBptE,UAAU,EACVwqE,UAAU,EACVrmH,QAAQ,EACR4vB,UAAU,EACVryB,UAAU,EACVvG,MAAM,EACNsnB,CAAC,EACDqnG,SAAS,CAAChI,UAAU,CAAC,CACvB,CAAC;MACD,IAAI,CAACuL,mBAAmB,CAACrtE,UAAU,EAAEwqE,UAAU,CAAC;MAEhD,IAAI,CAAC9iD,UAAU,CAAC,IAAI,CAAC31C,OAAO,EAAEiuB,UAAU,CAAC;MAEzC,IAAIK,UAAU,CAACllD,MAAM,EAAE;QACrB42B,OAAO,CAACoT,OAAO,CAAC,CAAC;MACnB;MACApT,OAAO,CAACyjD,qBAAqB,GAAG,IAAI;MAEpC,IAAIxJ,eAAe,KAAKx6C,MAAM,CAAC77B,KAAK,CAACc,SAAS,EAAE;QAC9C+6B,MAAM,CAAC77B,KAAK,CAACc,SAAS,GAAGu1E,eAAe;MAC1C;MAEA,OAAO,IAAI,CAAChG,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAhjF,GAAA;IAAAC,KAAA,EAUA,SAAAgqI,cAAc7oD,IAAI,EAAEpkB,UAAU,EAAEnoD,CAAC,EAAEC,CAAC,EAAEgtC,CAAC,EAAEvhB,CAAC,EAAEm4D,MAAM,EAAE6W,UAAU,EAAE;MAC9D,IAAM19D,KAAK,GAAG,IAAI,CAACy4F,YAAY,CAAClpD,IAAI,CAAC;MACrC,IAAI,CAACvvC,KAAK,EAAE;QACV;MACF;MACA,IAAM9C,OAAO,GAAG,IAAI,CAAC61C,gBAAgB,CAAC5nB,UAAU,CAAC;MACjD,IAAM+8B,GAAG,GAAG,IAAAvsF,YAAM,EAAC,IAAI,CAAC;MACxB,IAAM6vD,UAAU,GAAGL,UAAU,CAACG,gBAAgB,CAACH,UAAU,CAAC06B,UAAU,CAAC;MACrE,IAAM1tD,KAAK,GACTqzB,UAAU,CAAC3iB,OAAO,IACjB60D,UAAU,GAAGnuB,IAAI,CAAC2uB,QAAQ,CAAChW,GAAG,EAAE/8B,UAAU,CAACgzC,IAAI,CAAC,GAAG,CAAC,CAAC;MACxD,IAAMu6B,YAAY,GAAGvgG,KAAK,KAAK+E,OAAO,CAACiT,WAAW;MAClD,IAAIuoF,YAAY,EAAE;QAChBx7F,OAAO,CAACgT,IAAI,CAAC,CAAC;QACdhT,OAAO,CAACiT,WAAW,GAAGhY,KAAK;MAC7B;MACA+E,OAAO,CAAC4G,SAAS,CACf9D,KAAK,EACL6mD,MAAM,EACNA,MAAM,EACN7mD,KAAK,CAACtzB,KAAK,GAAG,CAAC,GAAGm6E,MAAM,EACxB7mD,KAAK,CAACrzB,MAAM,GAAG,CAAC,GAAGk6E,MAAM,EACzB7jF,CAAC,EACDC,CAAC,EACDgtC,CAAC,EACDvhB,CACF,CAAC;MAED,IAAIgqG,YAAY,EAAE;QAChBx7F,OAAO,CAACoT,OAAO,CAAC,CAAC;MACnB;MACA,IAAInY,KAAK,KAAKqzB,UAAU,CAAC3iB,OAAO,EAAE;QAChCsiB,UAAU,CAACxJ,OAAO,GAAG,IAAI;MAC3B,CAAC,MAAM,IAAI+7C,UAAU,EAAE;QACrBnuB,IAAI,CAAC8uB,aAAa,CAACnW,GAAG,CAAC;MACzB;IACF;;IAEA;AACF;AACA;EAFE;IAAA/5F,GAAA;IAAAC,KAAA,EAGA,SAAAqxC,SAAA,EAAW;MACT,IAAMvC,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,OAAOA,OAAO,GAAGA,OAAO,CAACP,MAAM,GAAG,IAAI;IACxC;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxuC,GAAA;IAAAC,KAAA,EAMA,SAAAqqI,aAAalpD,IAAI,EAAE;MACjB,OAAOA,IAAI,CAAC9vC,QAAQ,CAAC,CAAC;IACxB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAtxC,GAAA;IAAAC,KAAA,EAKA,SAAAoqI,oBAAoBrtE,UAAU,EAAEwqE,UAAU,EAAE;MAC1C,IAAIA,UAAU,CAAC7zF,cAAc,CAAC,CAAC,EAAE;QAC/B;AACN;AACA;AACA;AACA;QACM,IAAM62F,kBAAkB,GAAG,UAAUhD,UAAU,EAAE/wH,GAAG,EAAEumD,UAAU,EAAE;UAChE,IAAMg/C,aAAa,GAAG,IAAAxuG,YAAM,EAACg6H,UAAU,CAAC;UACxC,IAAIxrB,aAAa,IAAIh/C,UAAU,CAAC85D,SAAS,EAAE;YACzC0Q,UAAU,CAAC7M,WAAW,CACpB39D,UAAU,CAAClF,SAAS,CAACp5C,UAAU,EAC/Bs+C,UAAU,CAAC85D,SAAS,CAAC9a,aAAa,CACpC,CAAC;UACH;QACF,CAAC,CAACzzG,IAAI,CAAC,IAAI,EAAEi/H,UAAU,CAAC;QAExBxqE,UAAU,CAACu1C,mBAAmB,CAAC5oG,IAAI,EACjC;QACE6gI,kBAEJ,CAAC;MACH;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxqI,GAAA;IAAAC,KAAA,EAMA,SAAAkqI,gBAAgBrT,SAAS,EAAE0Q,UAAU,EAAEpmD,IAAI,EAAE;MAC3C;MACA,IAAM46B,aAAa,GAAG,IAAAxuG,YAAM,EAACg6H,UAAU,CAAC;MACxC,IAAI,EAAExrB,aAAa,IAAI8a,SAAS,CAAC,EAAE;QACjCA,SAAS,CAAC9a,aAAa,CAAC,GAAG,CAAC,CAAC;MAC/B;MACA8a,SAAS,CAAC9a,aAAa,CAAC,CAAC56B,IAAI,CAACuuB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI;IAChD;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAjBE;IAAA3vG,GAAA;IAAAC,KAAA,EAkBA,SAAAmqI,kBACEptE,UAAU,EACVwqE,UAAU,EACVrmH,QAAQ,EACR4vB,UAAU,EACVryB,UAAU,EACVvG,MAAM,EACNgxH,QAAQ,EACRzK,OAAO,EACP+L,YAAY,EACZ;MACA,IAAMzuB,aAAa,GAAG,IAAAxuG,YAAM,EAACg6H,UAAU,CAAC;MACxC,IAAI,EAAExrB,aAAa,IAAIh/C,UAAU,CAACm/C,WAAW,CAAC,EAAE;QAC9Cn/C,UAAU,CAACm/C,WAAW,CAACH,aAAa,CAAC,GAAG,CAAC,CAAC;MAC5C;MACA,IAAMG,WAAW,GAAGn/C,UAAU,CAACm/C,WAAW,CAACH,aAAa,CAAC;MACzD,IAAM6Z,SAAS,GAAG74D,UAAU,CAAC64D,SAAS;MACtC,IAAMzpE,OAAO,GAAGjrC,QAAQ,CAAC8rC,UAAU,CAAC,CAAC;MACrC,IAAMnxC,QAAQ,GAAGkhD,UAAU,CAAClF,SAAS,CAACh8C,QAAQ;MAC9C,IAAM24G,QAAQ,GAAG34G,QAAQ,GACrB,IAAAG,0BAAkB,EAChB+gD,UAAU,CAAClF,SAAS,CAACl8C,MAAM,EAC3BohD,UAAU,CAAClF,SAAS,CAACj8C,UAAU,EAC/BC,QAAQ,EACRkhD,UAAU,CAACjhD,IACb,CAAC,GACDvR,SAAS;MACb,IAAIkgI,SAAS,GAAG,CAAC;MACjB,IAAItpD,IAAI,EAAEG,SAAS,EAAE26B,cAAc,EAAErnG,CAAC,EAAEC,CAAC,EAAE2qB,CAAC;MAC5C,KAAKA,CAAC,GAAG2sB,OAAO,EAAE3sB,CAAC,IAAI0pG,QAAQ,EAAE,EAAE1pG,CAAC,EAAE;QACpC8hD,SAAS,GAAGpgE,QAAQ,CAAC4+E,yBAAyB,CAAC5nF,MAAM,EAAEsnB,CAAC,EAAE8hD,SAAS,CAAC;QACpE26B,cAAc,GAAG/6F,QAAQ,CAACqwB,aAAa,CAAC/R,CAAC,CAAC;QAC1C,KAAK5qB,CAAC,GAAG0sE,SAAS,CAAC7oE,IAAI,EAAE7D,CAAC,IAAI0sE,SAAS,CAAC1oE,IAAI,EAAE,EAAEhE,CAAC,EAAE;UACjD,KAAKC,CAAC,GAAGysE,SAAS,CAAC3oE,IAAI,EAAE9D,CAAC,IAAIysE,SAAS,CAACxoE,IAAI,EAAE,EAAEjE,CAAC,EAAE;YACjD,IACEgH,QAAQ,IACR,CAACqF,QAAQ,CAACqnH,2BAA2B,CAAC,CAAC/oG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,CAAC,EAAE2/G,QAAQ,CAAC,EAC1D;cACA;YACF;YACA,IAAI0U,QAAQ,GAAG1pG,CAAC,IAAIi/F,OAAO,EAAE;cAC3B,EAAEgM,SAAS;cACXtpD,IAAI,GAAGomD,UAAU,CAACD,OAAO,CAAC9nG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAEi8B,UAAU,EAAEryB,UAAU,CAAC;cAC1D,IAAI0iE,IAAI,CAAC3vC,QAAQ,CAAC,CAAC,IAAIi+D,kBAAS,CAACvxE,IAAI,EAAE;gBACrCg+E,WAAW,CAAC/6B,IAAI,CAACuuB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI;gBACjC,IAAI,CAACkmB,SAAS,CAACxb,WAAW,CAACj5B,IAAI,CAACuuB,MAAM,CAAC,CAAC,CAAC,EAAE;kBACzCkmB,SAAS,CAAChc,OAAO,CAAC,CAChBz4B,IAAI,EACJ46B,aAAa,EACb76F,QAAQ,CAACwpH,kBAAkB,CAACvpD,IAAI,CAACC,SAAS,CAAC,EAC3C66B,cAAc,CACf,CAAC;gBACJ;cACF;cACA,IAAIuuB,YAAY,KAAKjgI,SAAS,EAAE;gBAC9BigI,YAAY,CAACrpD,IAAI,CAAC;cACpB;YACF,CAAC,MAAM;cACLomD,UAAU,CAACoD,OAAO,CAACnrG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAE4J,UAAU,CAAC;YACzC;UACF;QACF;MACF;MACA8oH,UAAU,CAACqD,eAAe,CAACH,SAAS,EAAEhsH,UAAU,CAAC;IACnD;EAAC;AAAA,EA3tBmCokE,cAAmB;AAAA,IAAAziF,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA8tB1CsmI,uBAAuB;;;;;;;;AChwBtC,IAAAiE,SAAA,GAAAnlI,sBAAA,CAAA7B,OAAA;AACA,IAAAinI,UAAA,GAAAplI,sBAAA,CAAA7B,OAAA;AAAsE,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAQ,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KAJtE;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,IAYMkiI,SAAS,0BAAAC,cAAA;EACb;AACF;AACA;EACE,SAAAD,UAAY56H,OAAO,EAAE;IAAAzQ,eAAA,OAAAqrI,SAAA;IAAA,OAAAtjI,UAAA,OAAAsjI,SAAA,GACb56H,OAAO;EACf;EAAC3H,SAAA,CAAAuiI,SAAA,EAAAC,cAAA;EAAA,OAAAlrI,YAAA,CAAAirI,SAAA;IAAAhrI,GAAA;IAAAC,KAAA,EAED,SAAAs+D,eAAA,EAAiB;MACf,OAAO,IAAIsoE,kBAAuB,CAAC,IAAI,CAAC;IAC1C;EAAC;AAAA,EAVqBpI,iBAAa;AAAA,IAAAp+H,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAatByqI,SAAS;;;;;;;;AC/BxB;AACA;AACA;AAEA;AACA;AACA;AAFA,IAAA3qI,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGe;EACb;AACF;AACA;AACA;AACA;EACE2qI,aAAa,EAAE,eAAe;EAE9B;AACF;AACA;AACA;AACA;AACA;EACEC,WAAW,EAAE,aAAa;EAE1B;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,aAAa,EAAE;AACjB,CAAC;AAED;AACA;AACA;;;;;;;;AChCA,IAAAjN,UAAA,GAAA9sD,uBAAA,CAAAvtE,OAAA;AAGA,IAAA6sD,OAAA,GAAA7sD,OAAA;AACA,IAAA4N,QAAA,GAAA5N,OAAA;AACA,IAAA2hB,KAAA,GAAA3hB,OAAA;AACA,IAAA0hB,OAAA,GAAA1hB,OAAA;AACA,IAAAm4H,UAAA,GAAAn4H,OAAA;AACA,IAAA20B,iBAAA,GAAA30B,OAAA;AACA,IAAAD,MAAA,GAAAC,OAAA;AACA,IAAAy2C,KAAA,GAAAz2C,OAAA;AAAkC,SAAAytE,yBAAAjqE,CAAA,6BAAAkqE,OAAA,mBAAAnqE,CAAA,OAAAmqE,OAAA,IAAArqE,CAAA,OAAAqqE,OAAA,YAAAD,wBAAA,YAAAA,CAAAjqE,CAAA,WAAAA,CAAA,GAAAH,CAAA,GAAAE,CAAA,KAAAC,CAAA;AAAA,SAAA+pE,wBAAA/pE,CAAA,EAAAD,CAAA,SAAAA,CAAA,IAAAC,CAAA,IAAAA,CAAA,CAAAvB,UAAA,SAAAuB,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAA/G,OAAA,EAAA+G,CAAA,QAAAH,CAAA,GAAAoqE,wBAAA,CAAAlqE,CAAA,OAAAF,CAAA,IAAAA,CAAA,CAAAsqE,GAAA,CAAAnqE,CAAA,UAAAH,CAAA,CAAAoH,GAAA,CAAAjH,CAAA,OAAAxF,CAAA,KAAA0G,SAAA,UAAAhH,CAAA,GAAAsF,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAA6zB,wBAAA,WAAA9iB,CAAA,IAAAvQ,CAAA,oBAAAuQ,CAAA,OAAArJ,cAAA,CAAA7J,IAAA,CAAA2C,CAAA,EAAAuQ,CAAA,SAAA9V,CAAA,GAAAP,CAAA,GAAAsF,MAAA,CAAA6zB,wBAAA,CAAArzB,CAAA,EAAAuQ,CAAA,UAAA9V,CAAA,KAAAA,CAAA,CAAAwM,GAAA,IAAAxM,CAAA,CAAAqN,GAAA,IAAAtI,MAAA,CAAAC,cAAA,CAAAjF,CAAA,EAAA+V,CAAA,EAAA9V,CAAA,IAAAD,CAAA,CAAA+V,CAAA,IAAAvQ,CAAA,CAAAuQ,CAAA,YAAA/V,CAAA,CAAAvB,OAAA,GAAA+G,CAAA,EAAAH,CAAA,IAAAA,CAAA,CAAAiI,GAAA,CAAA9H,CAAA,EAAAxF,CAAA,GAAAA,CAAA;AAAA,SAAAkE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA,KAblC;AACA;AACA;AAaA;AACA;AACA;AACA;AACA,IAAMkkI,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;AAE9B;AACA;AACA;AACA;AACA,IAAMC,QAAQ,GAAG,CAAC;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMC,QAAQ;EACZ;AACF;AACA;EACE,SAAAA,SAAYn7H,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAA4rI,QAAA;IACnB;AACJ;AACA;AACA;IACI,IAAI,CAACn/E,OAAO,GAAGh8C,OAAO,CAACg8C,OAAO,KAAK5hD,SAAS,GAAG4F,OAAO,CAACg8C,OAAO,GAAG,CAAC;;IAElE;AACJ;AACA;AACA;IACI,IAAI,CAACkG,YAAY,GAAGliD,OAAO,CAACm/C,WAAW;IACvC,IAAAh+C,eAAM,EACJ,IAAAjO,eAAQ,EACN,IAAI,CAACgvD,YAAY;IACjB;AACR;AACA;AACA;AACA;IACQ,UAAC9wD,CAAC,EAAEC,CAAC;MAAA,OAAKA,CAAC,GAAGD,CAAC;IAAA,GACf,IACF,CAAC,EACD,kDACF,CAAC;;IAED;IACA,IAAI6wD,UAAU;IACd,IAAI,CAACjiD,OAAO,CAACo7H,OAAO,EAAE;MACpB,KAAK,IAAIzpI,CAAC,GAAG,CAAC,EAAEoI,EAAE,GAAG,IAAI,CAACmoD,YAAY,CAAChxD,MAAM,GAAG,CAAC,EAAES,CAAC,GAAGoI,EAAE,EAAE,EAAEpI,CAAC,EAAE;QAC9D,IAAI,CAACswD,UAAU,EAAE;UACfA,UAAU,GAAG,IAAI,CAACC,YAAY,CAACvwD,CAAC,CAAC,GAAG,IAAI,CAACuwD,YAAY,CAACvwD,CAAC,GAAG,CAAC,CAAC;QAC9D,CAAC,MAAM;UACL,IAAI,IAAI,CAACuwD,YAAY,CAACvwD,CAAC,CAAC,GAAG,IAAI,CAACuwD,YAAY,CAACvwD,CAAC,GAAG,CAAC,CAAC,KAAKswD,UAAU,EAAE;YAClEA,UAAU,GAAG7nD,SAAS;YACtB;UACF;QACF;MACF;IACF;;IAEA;AACJ;AACA;AACA;IACI,IAAI,CAAC4nD,WAAW,GAAGC,UAAU;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAAChG,OAAO,GAAG,IAAI,CAACiG,YAAY,CAAChxD,MAAM,GAAG,CAAC;;IAE3C;AACJ;AACA;AACA;IACI,IAAI,CAACuhD,OAAO,GAAGzyC,OAAO,CAACoqE,MAAM,KAAKhwE,SAAS,GAAG4F,OAAO,CAACoqE,MAAM,GAAG,IAAI;;IAEnE;AACJ;AACA;AACA;IACI,IAAI,CAACixD,QAAQ,GAAG,IAAI;IACpB,IAAIr7H,OAAO,CAACo7H,OAAO,KAAKhhI,SAAS,EAAE;MACjC,IAAI,CAACihI,QAAQ,GAAGr7H,OAAO,CAACo7H,OAAO;MAC/B,IAAAj6H,eAAM,EACJ,IAAI,CAACk6H,QAAQ,CAACnqI,MAAM,IAAI,IAAI,CAACgxD,YAAY,CAAChxD,MAAM,EAChD,qDACF,CAAC;IACH;IAEA,IAAM6W,MAAM,GAAG/H,OAAO,CAAC+H,MAAM;IAE7B,IAAIA,MAAM,KAAK3N,SAAS,IAAI,CAAC,IAAI,CAACq4C,OAAO,IAAI,CAAC,IAAI,CAAC4oF,QAAQ,EAAE;MAC3D,IAAI,CAAC5oF,OAAO,GAAG,IAAA3nC,kBAAU,EAAC/C,MAAM,CAAC;IACnC;IAEA,IAAA5G,eAAM,EACH,CAAC,IAAI,CAACsxC,OAAO,IAAI,IAAI,CAAC4oF,QAAQ,IAAM,IAAI,CAAC5oF,OAAO,IAAI,CAAC,IAAI,CAAC4oF,QAAS,EACpE,6DACF,CAAC;;IAED;AACJ;AACA;AACA;IACI,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAIt7H,OAAO,CAACu7H,SAAS,KAAKnhI,SAAS,EAAE;MACnC,IAAI,CAACkhI,UAAU,GAAGt7H,OAAO,CAACu7H,SAAS;MACnC,IAAAp6H,eAAM,EACJ,IAAI,CAACm6H,UAAU,CAACpqI,MAAM,IAAI,IAAI,CAACgxD,YAAY,CAAChxD,MAAM,EAClD,uDACF,CAAC;IACH;;IAEA;AACJ;AACA;AACA;IACI,IAAI,CAACsqI,SAAS,GACZx7H,OAAO,CAAC03H,QAAQ,KAAKt9H,SAAS,GAC1B4F,OAAO,CAAC03H,QAAQ,GAChB,CAAC,IAAI,CAAC4D,UAAU,GACdt9E,yBAAiB,GACjB,IAAI;IACZ,IAAA78C,eAAM,EACH,CAAC,IAAI,CAACq6H,SAAS,IAAI,IAAI,CAACF,UAAU,IAChC,IAAI,CAACE,SAAS,IAAI,CAAC,IAAI,CAACF,UAAW,EACtC,iEACF,CAAC;;IAED;AACJ;AACA;AACA;IACI,IAAI,CAAC7rH,OAAO,GAAG1H,MAAM,KAAK3N,SAAS,GAAG2N,MAAM,GAAG,IAAI;;IAEnD;AACJ;AACA;AACA;IACI,IAAI,CAAC0zH,eAAe,GAAG,IAAI;;IAE3B;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;IAEtB;AACJ;AACA;AACA;IACI,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAE9B,IAAI37H,OAAO,CAAC47H,KAAK,KAAKxhI,SAAS,EAAE;MAC/B,IAAI,CAACqhI,eAAe,GAAGz7H,OAAO,CAAC47H,KAAK,CAACv1H,GAAG,CAAC,UAACsF,IAAI,EAAE0jB,CAAC,EAAK;QACpD,IAAM8hD,SAAS,GAAG,IAAI86C,kBAAS,CAC7BnnH,IAAI,CAACyD,GAAG,CAAC,CAAC,EAAEoD,IAAI,CAAC,CAAC,CAAC,CAAC,EACpB7G,IAAI,CAAC4D,GAAG,CAACiD,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EACzB7G,IAAI,CAACyD,GAAG,CAAC,CAAC,EAAEoD,IAAI,CAAC,CAAC,CAAC,CAAC,EACpB7G,IAAI,CAAC4D,GAAG,CAACiD,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAC1B,CAAC;QACD,IAAI5D,MAAM,EAAE;UACV,IAAM8zH,mBAAmB,GAAGhjI,KAAI,CAAC82F,yBAAyB,CAAC5nF,MAAM,EAAEsnB,CAAC,CAAC;UACrE8hD,SAAS,CAAC7oE,IAAI,GAAGxD,IAAI,CAAC4D,GAAG,CAACmzH,mBAAmB,CAACvzH,IAAI,EAAE6oE,SAAS,CAAC7oE,IAAI,CAAC;UACnE6oE,SAAS,CAAC1oE,IAAI,GAAG3D,IAAI,CAACyD,GAAG,CAACszH,mBAAmB,CAACpzH,IAAI,EAAE0oE,SAAS,CAAC1oE,IAAI,CAAC;UACnE0oE,SAAS,CAAC3oE,IAAI,GAAG1D,IAAI,CAAC4D,GAAG,CAACmzH,mBAAmB,CAACrzH,IAAI,EAAE2oE,SAAS,CAAC3oE,IAAI,CAAC;UACnE2oE,SAAS,CAACxoE,IAAI,GAAG7D,IAAI,CAACyD,GAAG,CAACszH,mBAAmB,CAAClzH,IAAI,EAAEwoE,SAAS,CAACxoE,IAAI,CAAC;QACrE;QACA,OAAOwoE,SAAS;MAClB,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIppE,MAAM,EAAE;MACjB,IAAI,CAAC+zH,oBAAoB,CAAC/zH,MAAM,CAAC;IACnC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE,OAAApY,YAAA,CAAAwrI,QAAA;IAAAvrI,GAAA;IAAAC,KAAA,EAQA,SAAAksI,iBAAiBh0H,MAAM,EAAE66C,IAAI,EAAEn4C,QAAQ,EAAE;MACvC,IAAM0mE,SAAS,GAAG,IAAI,CAACwe,yBAAyB,CAAC5nF,MAAM,EAAE66C,IAAI,CAAC;MAC9D,KAAK,IAAIjxD,CAAC,GAAGw/E,SAAS,CAAC7oE,IAAI,EAAEvO,EAAE,GAAGo3E,SAAS,CAAC1oE,IAAI,EAAE9W,CAAC,IAAIoI,EAAE,EAAE,EAAEpI,CAAC,EAAE;QAC9D,KAAK,IAAI4hB,CAAC,GAAG49D,SAAS,CAAC3oE,IAAI,EAAE0P,EAAE,GAAGi5D,SAAS,CAACxoE,IAAI,EAAE4K,CAAC,IAAI2E,EAAE,EAAE,EAAE3E,CAAC,EAAE;UAC9D9I,QAAQ,CAAC,CAACm4C,IAAI,EAAEjxD,CAAC,EAAE4hB,CAAC,CAAC,CAAC;QACxB;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA3jB,GAAA;IAAAC,KAAA,EAOA,SAAA2oI,gCACEvnD,SAAS,EACTxmE,QAAQ,EACRuxH,aAAa,EACbC,UAAU,EACV;MACA,IAAI9qD,SAAS,EAAE1sE,CAAC,EAAEC,CAAC;MACnB,IAAIw3H,eAAe,GAAG,IAAI;MAC1B,IAAI7sG,CAAC,GAAG4hD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;MACxB,IAAI,IAAI,CAACjvB,WAAW,KAAK,CAAC,EAAE;QAC1Bv9C,CAAC,GAAGwsE,SAAS,CAAC,CAAC,CAAC;QAChBvsE,CAAC,GAAGusE,SAAS,CAAC,CAAC,CAAC;MAClB,CAAC,MAAM;QACLirD,eAAe,GAAG,IAAI,CAACtsC,kBAAkB,CAAC3e,SAAS,EAAEgrD,UAAU,CAAC;MAClE;MACA,OAAO5sG,CAAC,IAAI,IAAI,CAAC2sB,OAAO,EAAE;QACxB,IAAIv3C,CAAC,KAAKrK,SAAS,IAAIsK,CAAC,KAAKtK,SAAS,EAAE;UACtCqK,CAAC,GAAGK,IAAI,CAAC8J,KAAK,CAACnK,CAAC,GAAG,CAAC,CAAC;UACrBC,CAAC,GAAGI,IAAI,CAAC8J,KAAK,CAAClK,CAAC,GAAG,CAAC,CAAC;UACrBysE,SAAS,GAAG,IAAAgrD,yBAAuB,EAAC13H,CAAC,EAAEA,CAAC,EAAEC,CAAC,EAAEA,CAAC,EAAEs3H,aAAa,CAAC;QAChE,CAAC,MAAM;UACL7qD,SAAS,GAAG,IAAI,CAACwe,yBAAyB,CACxCusC,eAAe,EACf7sG,CAAC,EACD2sG,aACF,CAAC;QACH;QACA,IAAIvxH,QAAQ,CAAC4kB,CAAC,EAAE8hD,SAAS,CAAC,EAAE;UAC1B,OAAO,IAAI;QACb;QACA,EAAE9hD,CAAC;MACL;MACA,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAz/B,GAAA;IAAAC,KAAA,EAKA,SAAA2e,UAAA,EAAY;MACV,OAAO,IAAI,CAACiB,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA7f,GAAA;IAAAC,KAAA,EAKA,SAAAitD,WAAA,EAAa;MACX,OAAO,IAAI,CAACb,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAArsD,GAAA;IAAAC,KAAA,EAKA,SAAAgtD,WAAA,EAAa;MACX,OAAO,IAAI,CAACb,OAAO;IACrB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAApsD,GAAA;IAAAC,KAAA,EAMA,SAAA47C,UAAUpc,CAAC,EAAE;MACX,IAAI,IAAI,CAACojB,OAAO,EAAE;QAChB,OAAO,IAAI,CAACA,OAAO;MACrB;MACA,OAAO,IAAI,CAAC4oF,QAAQ,CAAChsG,CAAC,CAAC;IACzB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAz/B,GAAA;IAAAC,KAAA,EAMA,SAAAuxC,cAAc/R,CAAC,EAAE;MACf,OAAO,IAAI,CAAC6yB,YAAY,CAAC7yB,CAAC,CAAC;IAC7B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAz/B,GAAA;IAAAC,KAAA,EAKA,SAAAg3D,eAAA,EAAiB;MACf,OAAO,IAAI,CAAC3E,YAAY;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAtyD,GAAA;IAAAC,KAAA,EAMA,SAAAyoI,2BAA2BrnD,SAAS,EAAE+qD,aAAa,EAAEC,UAAU,EAAE;MAC/D,IAAIhrD,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAACh1B,OAAO,EAAE;QAC/B,IAAI,IAAI,CAAC+F,WAAW,KAAK,CAAC,EAAE;UAC1B,IAAM15C,IAAI,GAAG2oE,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;UAC7B,IAAMzoE,IAAI,GAAGyoE,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;UAC7B,OAAO,IAAAkrD,yBAAuB,EAC5B7zH,IAAI,EACJA,IAAI,GAAG,CAAC,EACRE,IAAI,EACJA,IAAI,GAAG,CAAC,EACRwzH,aACF,CAAC;QACH;QACA,IAAME,eAAe,GAAG,IAAI,CAACtsC,kBAAkB,CAC7C3e,SAAS,EACTgrD,UAAU,IAAI,IAAI,CAACN,UACrB,CAAC;QACD,OAAO,IAAI,CAAChsC,yBAAyB,CACnCusC,eAAe,EACfjrD,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAChB+qD,aACF,CAAC;MACH;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAApsI,GAAA;IAAAC,KAAA,EAMA,SAAAusI,6BAA6BnrD,SAAS,EAAE5hD,CAAC,EAAE2sG,aAAa,EAAE;MACxD,IAAI3sG,CAAC,GAAG,IAAI,CAAC4sB,OAAO,IAAI5sB,CAAC,GAAG,IAAI,CAAC2sB,OAAO,EAAE;QACxC,OAAO,IAAI;MACb;MAEA,IAAMqgF,UAAU,GAAGprD,SAAS,CAAC,CAAC,CAAC;MAC/B,IAAMqrD,UAAU,GAAGrrD,SAAS,CAAC,CAAC,CAAC;MAC/B,IAAMsrD,UAAU,GAAGtrD,SAAS,CAAC,CAAC,CAAC;MAE/B,IAAI5hD,CAAC,KAAKgtG,UAAU,EAAE;QACpB,OAAO,IAAAF,yBAAuB,EAC5BG,UAAU,EACVC,UAAU,EACVD,UAAU,EACVC,UAAU,EACVP,aACF,CAAC;MACH;MAEA,IAAI,IAAI,CAACh6E,WAAW,EAAE;QACpB,IAAM7tC,MAAM,GAAGrP,IAAI,CAACsP,GAAG,CAAC,IAAI,CAAC4tC,WAAW,EAAE3yB,CAAC,GAAGgtG,UAAU,CAAC;QACzD,IAAM/zH,IAAI,GAAGxD,IAAI,CAAC8J,KAAK,CAAC0tH,UAAU,GAAGnoH,MAAM,CAAC;QAC5C,IAAM3L,IAAI,GAAG1D,IAAI,CAAC8J,KAAK,CAAC2tH,UAAU,GAAGpoH,MAAM,CAAC;QAC5C,IAAIkb,CAAC,GAAGgtG,UAAU,EAAE;UAClB,OAAO,IAAAF,yBAAuB,EAAC7zH,IAAI,EAAEA,IAAI,EAAEE,IAAI,EAAEA,IAAI,EAAEwzH,aAAa,CAAC;QACvE;QAEA,IAAMvzH,IAAI,GAAG3D,IAAI,CAAC8J,KAAK,CAACuF,MAAM,IAAImoH,UAAU,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QACtD,IAAM3zH,IAAI,GAAG7D,IAAI,CAAC8J,KAAK,CAACuF,MAAM,IAAIooH,UAAU,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QACtD,OAAO,IAAAJ,yBAAuB,EAAC7zH,IAAI,EAAEG,IAAI,EAAED,IAAI,EAAEG,IAAI,EAAEqzH,aAAa,CAAC;MACvE;MAEA,IAAME,eAAe,GAAG,IAAI,CAACtsC,kBAAkB,CAAC3e,SAAS,EAAE,IAAI,CAAC0qD,UAAU,CAAC;MAC3E,OAAO,IAAI,CAAChsC,yBAAyB,CAACusC,eAAe,EAAE7sG,CAAC,EAAE2sG,aAAa,CAAC;IAC1E;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAApsI,GAAA;IAAAC,KAAA,EAOA,SAAA8/F,0BAA0B5nF,MAAM,EAAEsnB,CAAC,EAAE2sG,aAAa,EAAE;MAClD,IAAI,CAACQ,sBAAsB,CAACz0H,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEsnB,CAAC,EAAE,KAAK,EAAE4rG,YAAY,CAAC;MACzE,IAAM3yH,IAAI,GAAG2yH,YAAY,CAAC,CAAC,CAAC;MAC5B,IAAMzyH,IAAI,GAAGyyH,YAAY,CAAC,CAAC,CAAC;MAC5B,IAAI,CAACuB,sBAAsB,CAACz0H,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEsnB,CAAC,EAAE,IAAI,EAAE4rG,YAAY,CAAC;MACxE,IAAMxyH,IAAI,GAAGwyH,YAAY,CAAC,CAAC,CAAC;MAC5B,IAAMtyH,IAAI,GAAGsyH,YAAY,CAAC,CAAC,CAAC;MAC5B,OAAO,IAAAkB,yBAAuB,EAAC7zH,IAAI,EAAEG,IAAI,EAAED,IAAI,EAAEG,IAAI,EAAEqzH,aAAa,CAAC;IACvE;;IAEA;AACF;AACA;AACA;EAHE;IAAApsI,GAAA;IAAAC,KAAA,EAIA,SAAA0qI,mBAAmBtpD,SAAS,EAAE;MAC5B,IAAM7G,MAAM,GAAG,IAAI,CAAC3+B,SAAS,CAACwlC,SAAS,CAAC,CAAC,CAAC,CAAC;MAC3C,IAAMxlE,UAAU,GAAG,IAAI,CAAC21B,aAAa,CAAC6vC,SAAS,CAAC,CAAC,CAAC,CAAC;MACnD,IAAMymD,QAAQ,GAAG,IAAAxtF,YAAM,EAAC,IAAI,CAACksF,WAAW,CAACnlD,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACyqD,QAAQ,CAAC;MACtE,OAAO,CACLtxD,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC6G,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIymD,QAAQ,CAAC,CAAC,CAAC,GAAGjsH,UAAU,EAC3D2+D,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC6G,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIymD,QAAQ,CAAC,CAAC,CAAC,GAAGjsH,UAAU,CAC5D;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA7b,GAAA;IAAAC,KAAA,EAQA,SAAA+/F,mBAAmB3e,SAAS,EAAEgrD,UAAU,EAAE;MACxC,IAAM7xD,MAAM,GAAG,IAAI,CAAC3+B,SAAS,CAACwlC,SAAS,CAAC,CAAC,CAAC,CAAC;MAC3C,IAAMxlE,UAAU,GAAG,IAAI,CAAC21B,aAAa,CAAC6vC,SAAS,CAAC,CAAC,CAAC,CAAC;MACnD,IAAMymD,QAAQ,GAAG,IAAAxtF,YAAM,EAAC,IAAI,CAACksF,WAAW,CAACnlD,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACyqD,QAAQ,CAAC;MACtE,IAAMpzH,IAAI,GAAG8hE,MAAM,CAAC,CAAC,CAAC,GAAG6G,SAAS,CAAC,CAAC,CAAC,GAAGymD,QAAQ,CAAC,CAAC,CAAC,GAAGjsH,UAAU;MAChE,IAAMjD,IAAI,GAAG4hE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC6G,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIymD,QAAQ,CAAC,CAAC,CAAC,GAAGjsH,UAAU;MACtE,IAAMhD,IAAI,GAAGH,IAAI,GAAGovH,QAAQ,CAAC,CAAC,CAAC,GAAGjsH,UAAU;MAC5C,IAAM9C,IAAI,GAAGH,IAAI,GAAGkvH,QAAQ,CAAC,CAAC,CAAC,GAAGjsH,UAAU;MAC5C,OAAO,IAAA7C,sBAAc,EAACN,IAAI,EAAEE,IAAI,EAAEC,IAAI,EAAEE,IAAI,EAAEszH,UAAU,CAAC;IAC3D;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVE;IAAArsI,GAAA;IAAAC,KAAA,EAWA,SAAA4sI,kCAAkCj4H,UAAU,EAAEiH,UAAU,EAAEixH,aAAa,EAAE;MACvE,OAAO,IAAI,CAACC,+BAA+B,CACzCn4H,UAAU,CAAC,CAAC,CAAC,EACbA,UAAU,CAAC,CAAC,CAAC,EACbiH,UAAU,EACV,KAAK,EACLixH,aACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAZE;IAAA9sI,GAAA;IAAAC,KAAA,EAaA,SAAA8sI,gCACEl4H,CAAC,EACDC,CAAC,EACD+G,UAAU,EACVmxH,yBAAyB,EACzBF,aAAa,EACb;MACA,IAAMrtG,CAAC,GAAG,IAAI,CAACqgE,iBAAiB,CAACjkF,UAAU,CAAC;MAC5C,IAAMzG,KAAK,GAAGyG,UAAU,GAAG,IAAI,CAAC21B,aAAa,CAAC/R,CAAC,CAAC;MAChD,IAAM+6C,MAAM,GAAG,IAAI,CAAC3+B,SAAS,CAACpc,CAAC,CAAC;MAChC,IAAMqoG,QAAQ,GAAG,IAAAxtF,YAAM,EAAC,IAAI,CAACksF,WAAW,CAAC/mG,CAAC,CAAC,EAAE,IAAI,CAACqsG,QAAQ,CAAC;MAE3D,IAAIY,UAAU,GAAIt3H,KAAK,IAAIP,CAAC,GAAG2lE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAI3+D,UAAU,GAAGisH,QAAQ,CAAC,CAAC,CAAC;MACrE,IAAI6E,UAAU,GAAIv3H,KAAK,IAAIolE,MAAM,CAAC,CAAC,CAAC,GAAG1lE,CAAC,CAAC,GAAI+G,UAAU,GAAGisH,QAAQ,CAAC,CAAC,CAAC;MAErE,IAAIkF,yBAAyB,EAAE;QAC7BN,UAAU,GAAG,IAAAjoH,UAAI,EAACioH,UAAU,EAAEpB,QAAQ,CAAC,GAAG,CAAC;QAC3CqB,UAAU,GAAG,IAAAloH,UAAI,EAACkoH,UAAU,EAAErB,QAAQ,CAAC,GAAG,CAAC;MAC7C,CAAC,MAAM;QACLoB,UAAU,GAAG,IAAA1tH,WAAK,EAAC0tH,UAAU,EAAEpB,QAAQ,CAAC;QACxCqB,UAAU,GAAG,IAAA3tH,WAAK,EAAC2tH,UAAU,EAAErB,QAAQ,CAAC;MAC1C;MAEA,OAAO,IAAA2B,yBAAuB,EAACxtG,CAAC,EAAEitG,UAAU,EAAEC,UAAU,EAAEG,aAAa,CAAC;IAC1E;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAdE;IAAA9sI,GAAA;IAAAC,KAAA,EAeA,SAAA2sI,uBAAuB/3H,CAAC,EAAEC,CAAC,EAAE2qB,CAAC,EAAEutG,yBAAyB,EAAEF,aAAa,EAAE;MACxE,IAAMtyD,MAAM,GAAG,IAAI,CAAC3+B,SAAS,CAACpc,CAAC,CAAC;MAChC,IAAM5jB,UAAU,GAAG,IAAI,CAAC21B,aAAa,CAAC/R,CAAC,CAAC;MACxC,IAAMqoG,QAAQ,GAAG,IAAAxtF,YAAM,EAAC,IAAI,CAACksF,WAAW,CAAC/mG,CAAC,CAAC,EAAE,IAAI,CAACqsG,QAAQ,CAAC;MAE3D,IAAIY,UAAU,GAAG,CAAC73H,CAAC,GAAG2lE,MAAM,CAAC,CAAC,CAAC,IAAI3+D,UAAU,GAAGisH,QAAQ,CAAC,CAAC,CAAC;MAC3D,IAAI6E,UAAU,GAAG,CAACnyD,MAAM,CAAC,CAAC,CAAC,GAAG1lE,CAAC,IAAI+G,UAAU,GAAGisH,QAAQ,CAAC,CAAC,CAAC;MAE3D,IAAIkF,yBAAyB,EAAE;QAC7BN,UAAU,GAAG,IAAAjoH,UAAI,EAACioH,UAAU,EAAEpB,QAAQ,CAAC,GAAG,CAAC;QAC3CqB,UAAU,GAAG,IAAAloH,UAAI,EAACkoH,UAAU,EAAErB,QAAQ,CAAC,GAAG,CAAC;MAC7C,CAAC,MAAM;QACLoB,UAAU,GAAG,IAAA1tH,WAAK,EAAC0tH,UAAU,EAAEpB,QAAQ,CAAC;QACxCqB,UAAU,GAAG,IAAA3tH,WAAK,EAAC2tH,UAAU,EAAErB,QAAQ,CAAC;MAC1C;MAEA,OAAO,IAAA2B,yBAAuB,EAACxtG,CAAC,EAAEitG,UAAU,EAAEC,UAAU,EAAEG,aAAa,CAAC;IAC1E;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA9sI,GAAA;IAAAC,KAAA,EAQA,SAAA2nI,yBAAyBhzH,UAAU,EAAE6qB,CAAC,EAAEqtG,aAAa,EAAE;MACrD,OAAO,IAAI,CAACF,sBAAsB,CAChCh4H,UAAU,CAAC,CAAC,CAAC,EACbA,UAAU,CAAC,CAAC,CAAC,EACb6qB,CAAC,EACD,KAAK,EACLqtG,aACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;EAHE;IAAA9sI,GAAA;IAAAC,KAAA,EAIA,SAAAitI,uBAAuB7rD,SAAS,EAAE;MAChC,OAAO,IAAI,CAAC/uB,YAAY,CAAC+uB,SAAS,CAAC,CAAC,CAAC,CAAC;IACxC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAArhF,GAAA;IAAAC,KAAA,EAQA,SAAAumI,YAAY/mG,CAAC,EAAE;MACb,IAAI,IAAI,CAACmsG,SAAS,EAAE;QAClB,OAAO,IAAI,CAACA,SAAS;MACvB;MACA,OAAO,IAAI,CAACF,UAAU,CAACjsG,CAAC,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;EAHE;IAAAz/B,GAAA;IAAAC,KAAA,EAIA,SAAA87H,iBAAiBt8F,CAAC,EAAE;MAClB,IAAI,CAAC,IAAI,CAACosG,eAAe,EAAE;QACzB,OAAO,IAAI,CAAChsH,OAAO,GACf,IAAI,CAACkgF,yBAAyB,CAAC,IAAI,CAAClgF,OAAO,EAAE4f,CAAC,CAAC,GAC/C,IAAI;MACV;MACA,OAAO,IAAI,CAACosG,eAAe,CAACpsG,CAAC,CAAC;IAChC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAhBE;IAAAz/B,GAAA;IAAAC,KAAA,EAiBA,SAAA6/F,kBAAkBjkF,UAAU,EAAEsxH,aAAa,EAAE;MAC3C,IAAM1tG,CAAC,GAAG,IAAA99B,wBAAiB,EACzB,IAAI,CAAC2wD,YAAY,EACjBz2C,UAAU,EACVsxH,aAAa,IAAI,CACnB,CAAC;MACD,OAAO,IAAA/pH,WAAK,EAACqc,CAAC,EAAE,IAAI,CAAC2sB,OAAO,EAAE,IAAI,CAACC,OAAO,CAAC;IAC7C;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAArsD,GAAA;IAAAC,KAAA,EAMA,SAAAuoI,4BAA4BnnD,SAAS,EAAEozC,QAAQ,EAAE;MAC/C,OAAO,IAAAr9F,sCAAoB,EACzBq9F,QAAQ,EACR,CAAC,EACDA,QAAQ,CAACnzH,MAAM,EACf,CAAC,EACD,IAAI,CAAC0+F,kBAAkB,CAAC3e,SAAS,CACnC,CAAC;IACH;;IAEA;AACF;AACA;AACA;EAHE;IAAArhF,GAAA;IAAAC,KAAA,EAIA,SAAAisI,qBAAqB/zH,MAAM,EAAE;MAC3B,IAAM7W,MAAM,GAAG,IAAI,CAACgxD,YAAY,CAAChxD,MAAM;MACvC,IAAM8rI,cAAc,GAAG,IAAI5qI,KAAK,CAAClB,MAAM,CAAC;MACxC,KAAK,IAAIm+B,CAAC,GAAG,IAAI,CAAC2sB,OAAO,EAAE3sB,CAAC,GAAGn+B,MAAM,EAAE,EAAEm+B,CAAC,EAAE;QAC1C2tG,cAAc,CAAC3tG,CAAC,CAAC,GAAG,IAAI,CAACsgE,yBAAyB,CAAC5nF,MAAM,EAAEsnB,CAAC,CAAC;MAC/D;MACA,IAAI,CAACosG,eAAe,GAAGuB,cAAc;IACvC;EAAC;AAAA;AAAA,IAAA/sI,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAGYgrI,QAAQ;;;;;;;;;AC5pBvB,IAAA8B,UAAA,GAAA1nI,sBAAA,CAAA7B,OAAA;AACA,IAAAkrB,KAAA,GAAAlrB,OAAA;AAAgD,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAQ,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KALhD;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKMwkI,YAAY,0BAAAC,SAAA;EAChB;AACF;AACA;EACE,SAAAD,aAAYl9H,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAA2tI,YAAA;IACnBrkI,KAAA,GAAAvB,UAAA,OAAA4lI,YAAA,GAAM;MACJn1H,MAAM,EAAE/H,OAAO,CAAC+H,MAAM;MACtBqiE,MAAM,EAAEpqE,OAAO,CAACoqE,MAAM;MACtBgxD,OAAO,EAAEp7H,OAAO,CAACo7H,OAAO;MACxBj8E,WAAW,EAAEn/C,OAAO,CAACm/C,WAAW;MAChCu4E,QAAQ,EAAE13H,OAAO,CAAC03H,QAAQ;MAC1B6D,SAAS,EAAEv7H,OAAO,CAACu7H,SAAS;MAC5BK,KAAK,EAAE57H,OAAO,CAAC47H;IACjB,CAAC;;IAED;AACJ;AACA;AACA;IACI/iI,KAAA,CAAKukI,UAAU,GAAGp9H,OAAO,CAACq9H,SAAS;IAAC,OAAAxkI,KAAA;EACtC;;EAEA;AACF;AACA;AACA;EAHER,SAAA,CAAA6kI,YAAA,EAAAC,SAAA;EAAA,OAAAxtI,YAAA,CAAAutI,YAAA;IAAAttI,GAAA;IAAAC,KAAA,EAIA,SAAAytI,YAAYjuG,CAAC,EAAE;MACb,OAAO,IAAI,CAAC+tG,UAAU,CAAC/tG,CAAC,CAAC;IAC3B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAz/B,GAAA;IAAAC,KAAA,EAKA,SAAA0tI,aAAA,EAAe;MACb,OAAO,IAAI,CAACH,UAAU;IACxB;EAAC;AAAA,EArCwBjC,kBAAQ;AAAA,IAAAlrI,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAwCpB+sI,YAAY;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASM,+BAA+BA,CAC7CC,SAAS,EACT11H,MAAM,EACN21H,YAAY,EACZ;EACA;EACA,IAAMv+E,WAAW,GAAG,EAAE;EACtB;EACA,IAAMk+E,SAAS,GAAG,EAAE;EACpB;EACA,IAAMjC,OAAO,GAAG,EAAE;EAClB;EACA,IAAMG,SAAS,GAAG,EAAE;EACpB;EACA,IAAMK,KAAK,GAAG,EAAE;EAEhB8B,YAAY,GAAGA,YAAY,KAAKtjI,SAAS,GAAGsjI,YAAY,GAAG,EAAE;EAE7D,IAAMC,oBAAoB,GAAG,cAAc;EAC3C,IAAMC,iBAAiB,GAAG,YAAY;EACtC,IAAMC,kBAAkB,GAAG,YAAY;EACvC,IAAMC,wBAAwB,GAAG,kBAAkB;EACnD,IAAMC,qBAAqB,GAAG,eAAe;EAC7C,IAAMC,iBAAiB,GAAG,WAAW;EACrC,IAAMC,kBAAkB,GAAG,YAAY;EAEvC,IAAMhvH,IAAI,GAAGwuH,SAAS,CAACE,oBAAoB,CAAC;EAC5C,IAAMrvH,UAAU,GAAG,IAAA4R,SAAa,EAACjR,IAAI,CAAC;EACtC,IAAMoB,aAAa,GAAG/B,UAAU,CAACkC,gBAAgB,CAAC,CAAC;EACnD;EACA,IAAM0tH,cAAc,GAAG5vH,UAAU,CAACoC,kBAAkB,CAAC,CAAC,CAACytH,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI;EAE3EV,SAAS,CAACG,iBAAiB,CAAC,CAAC3qI,IAAI,CAAC,UAAU7B,CAAC,EAAEC,CAAC,EAAE;IAChD,OAAOA,CAAC,CAACysI,wBAAwB,CAAC,GAAG1sI,CAAC,CAAC0sI,wBAAwB,CAAC;EAClE,CAAC,CAAC;EAEFL,SAAS,CAACG,iBAAiB,CAAC,CAACp9H,OAAO,CAAC,UAAU49H,GAAG,EAAE;IAClD,IAAIC,eAAe;IACnB;IACA;IACA,IAAIX,YAAY,CAACxsI,MAAM,GAAG,CAAC,EAAE;MAC3BmtI,eAAe,GAAGX,YAAY,CAACxwE,IAAI,CAAC,UAAUoxE,MAAM,EAAE;QACpD,IAAIF,GAAG,CAACP,kBAAkB,CAAC,IAAIS,MAAM,CAACV,iBAAiB,CAAC,EAAE;UACxD,OAAO,IAAI;QACb;QACA;QACA;QACA,IAAI,CAACQ,GAAG,CAACP,kBAAkB,CAAC,CAACvkI,QAAQ,CAAC,GAAG,CAAC,EAAE;UAC1C,OACEmkI,SAAS,CAACI,kBAAkB,CAAC,GAAG,GAAG,GAAGO,GAAG,CAACP,kBAAkB,CAAC,KAC7DS,MAAM,CAACV,iBAAiB,CAAC;QAE7B;QACA,OAAO,KAAK;MACd,CAAC,CAAC;IACJ,CAAC,MAAM;MACLS,eAAe,GAAG,IAAI;IACxB;IAEA,IAAIA,eAAe,EAAE;MACnBhB,SAAS,CAAC9jI,IAAI,CAAC6kI,GAAG,CAACP,kBAAkB,CAAC,CAAC;MACvC,IAAMpyH,UAAU,GACb2yH,GAAG,CAACN,wBAAwB,CAAC,GAAG,OAAO,GAAIztH,aAAa;MAC3D,IAAMkuH,SAAS,GAAGH,GAAG,CAACJ,iBAAiB,CAAC;MACxC,IAAMQ,UAAU,GAAGJ,GAAG,CAACH,kBAAkB,CAAC;MAC1C,IAAIC,cAAc,EAAE;QAClB9C,OAAO,CAAC7hI,IAAI,CAAC,CACX6kI,GAAG,CAACL,qBAAqB,CAAC,CAAC,CAAC,CAAC,EAC7BK,GAAG,CAACL,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAC9B,CAAC;MACJ,CAAC,MAAM;QACL3C,OAAO,CAAC7hI,IAAI,CAAC6kI,GAAG,CAACL,qBAAqB,CAAC,CAAC;MAC1C;MACA5+E,WAAW,CAAC5lD,IAAI,CAACkS,UAAU,CAAC;MAC5B8vH,SAAS,CAAChiI,IAAI,CACZglI,SAAS,IAAIC,UAAU,GAAGD,SAAS,GAAG,CAACA,SAAS,EAAEC,UAAU,CAC9D,CAAC;MACD5C,KAAK,CAACriI,IAAI,CAAC,CAAC6kI,GAAG,CAAC,aAAa,CAAC,EAAEA,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;IACvD;EACF,CAAC,CAAC;EAEF,OAAO,IAAIlB,YAAY,CAAC;IACtBn1H,MAAM,EAAEA,MAAM;IACdqzH,OAAO,EAAEA,OAAO;IAChBj8E,WAAW,EAAEA,WAAW;IACxBk+E,SAAS,EAAEA,SAAS;IACpB9B,SAAS,EAAEA,SAAS;IACpBK,KAAK,EAAEA;EACT,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;ACxLA,IAAAuB,SAAA,GAAA5nI,sBAAA,CAAA7B,OAAA;AACA,IAAA6sD,OAAA,GAAA7sD,OAAA;AACA,IAAAkrB,KAAA,GAAAlrB,OAAA;AACA,IAAA0hB,OAAA,GAAA1hB,OAAA;AAOA,IAAAy2C,KAAA,GAAAz2C,OAAA;AAGA,IAAA+qI,KAAA,GAAAlpI,sBAAA,CAAA7B,OAAA;AAAmD,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAhBnD;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;AACO,SAASmsI,gBAAgBA,CAACpwH,UAAU,EAAE;EAC3C,IAAIyC,QAAQ,GAAGzC,UAAU,CAACuC,kBAAkB,CAAC,CAAC;EAC9C,IAAI,CAACE,QAAQ,EAAE;IACbA,QAAQ,GAAG4tH,mBAAmB,CAACrwH,UAAU,CAAC;IAC1CA,UAAU,CAACwC,kBAAkB,CAACC,QAAQ,CAAC;EACzC;EACA,OAAOA,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS1C,KAAKA,CAAC0C,QAAQ,EAAEkgE,SAAS,EAAE3iE,UAAU,EAAE;EACrD,IAAM+gB,CAAC,GAAG4hD,SAAS,CAAC,CAAC,CAAC;EACtB,IAAMzlE,MAAM,GAAGuF,QAAQ,CAACwpH,kBAAkB,CAACtpD,SAAS,CAAC;EACrD,IAAM1iE,gBAAgB,GAAGqwH,oBAAoB,CAACtwH,UAAU,CAAC;EACzD,IAAI,CAAC,IAAAvF,0BAAkB,EAACwF,gBAAgB,EAAE/C,MAAM,CAAC,EAAE;IACjD,IAAMkD,UAAU,GAAG,IAAAzD,gBAAQ,EAACsD,gBAAgB,CAAC;IAC7C,IAAMI,UAAU,GAAG7J,IAAI,CAACuP,IAAI,CAC1B,CAAC9F,gBAAgB,CAAC,CAAC,CAAC,GAAG/C,MAAM,CAAC,CAAC,CAAC,IAAIkD,UACtC,CAAC;IACDlD,MAAM,CAAC,CAAC,CAAC,IAAIkD,UAAU,GAAGC,UAAU;IACpC,OAAOoC,QAAQ,CAACymH,wBAAwB,CAAChsH,MAAM,EAAE6jB,CAAC,CAAC;EACrD;EACA,OAAO4hD,SAAS;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4tD,eAAeA,CAAC92H,MAAM,EAAEk0C,OAAO,EAAEy7E,QAAQ,EAAErsH,MAAM,EAAE;EACjEA,MAAM,GAAGA,MAAM,KAAKjR,SAAS,GAAGiR,MAAM,GAAG,UAAU;EAEnD,IAAM8zC,WAAW,GAAG2/E,qBAAqB,CAAC/2H,MAAM,EAAEk0C,OAAO,EAAEy7E,QAAQ,CAAC;EAEpE,OAAO,IAAIyD,iBAAQ,CAAC;IAClBpzH,MAAM,EAAEA,MAAM;IACdqiE,MAAM,EAAE,IAAAh/D,iBAAS,EAACrD,MAAM,EAAEsD,MAAM,CAAC;IACjC8zC,WAAW,EAAEA,WAAW;IACxBu4E,QAAQ,EAAEA;EACZ,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqH,SAASA,CAAC/+H,OAAO,EAAE;EACjC,IAAMg/H,UAAU,GAAGh/H,OAAO,IAAI,CAAC,CAAC;EAEhC,IAAM+H,MAAM,GAAGi3H,UAAU,CAACj3H,MAAM,IAAI,IAAAmY,SAAa,EAAC,WAAW,CAAC,CAAC1R,SAAS,CAAC,CAAC;EAE1E,IAAMywH,WAAW,GAAG;IAClBl3H,MAAM,EAAEA,MAAM;IACdi0C,OAAO,EAAEgjF,UAAU,CAAChjF,OAAO;IAC3B07E,QAAQ,EAAEsH,UAAU,CAACtH,QAAQ;IAC7Bv4E,WAAW,EAAE2/E,qBAAqB,CAChC/2H,MAAM,EACNi3H,UAAU,CAAC/iF,OAAO,EAClB+iF,UAAU,CAACtH,QAAQ,EACnBsH,UAAU,CAACljF,aACb;EACF,CAAC;EACD,OAAO,IAAIq/E,iBAAQ,CAAC8D,WAAW,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASH,qBAAqBA,CAAC/2H,MAAM,EAAEk0C,OAAO,EAAEy7E,QAAQ,EAAE57E,aAAa,EAAE;EACvEG,OAAO,GAAGA,OAAO,KAAK7hD,SAAS,GAAG6hD,OAAO,GAAG8B,wBAAgB;EAC5D25E,QAAQ,GAAG,IAAAxtF,YAAM,EAACwtF,QAAQ,KAAKt9H,SAAS,GAAGs9H,QAAQ,GAAG15E,yBAAiB,CAAC;EAExE,IAAM5vC,MAAM,GAAG,IAAAlD,iBAAS,EAACnD,MAAM,CAAC;EAChC,IAAMoG,KAAK,GAAG,IAAAlD,gBAAQ,EAAClD,MAAM,CAAC;EAE9B+zC,aAAa,GACXA,aAAa,GAAG,CAAC,GACbA,aAAa,GACbh3C,IAAI,CAAC4D,GAAG,CAACyF,KAAK,GAAGupH,QAAQ,CAAC,CAAC,CAAC,EAAEtpH,MAAM,GAAGspH,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEzD,IAAMxmI,MAAM,GAAG+qD,OAAO,GAAG,CAAC;EAC1B,IAAMkD,WAAW,GAAG,IAAI/sD,KAAK,CAAClB,MAAM,CAAC;EACrC,KAAK,IAAIm+B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGn+B,MAAM,EAAE,EAAEm+B,CAAC,EAAE;IAC/B8vB,WAAW,CAAC9vB,CAAC,CAAC,GAAGysB,aAAa,GAAGh3C,IAAI,CAACsP,GAAG,CAAC,CAAC,EAAEib,CAAC,CAAC;EACjD;EACA,OAAO8vB,WAAW;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASw/E,mBAAmBA,CAACrwH,UAAU,EAAE2tC,OAAO,EAAEy7E,QAAQ,EAAErsH,MAAM,EAAE;EACzE,IAAMtD,MAAM,GAAG62H,oBAAoB,CAACtwH,UAAU,CAAC;EAC/C,OAAOuwH,eAAe,CAAC92H,MAAM,EAAEk0C,OAAO,EAAEy7E,QAAQ,EAAErsH,MAAM,CAAC;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuzH,oBAAoBA,CAACtwH,UAAU,EAAE;EAC/CA,UAAU,GAAG,IAAA4R,SAAa,EAAC5R,UAAU,CAAC;EACtC,IAAIvG,MAAM,GAAGuG,UAAU,CAACE,SAAS,CAAC,CAAC;EACnC,IAAI,CAACzG,MAAM,EAAE;IACX,IAAMm3H,IAAI,GACP,GAAG,GAAGhwH,qBAAe,CAACkH,OAAO,GAAI9H,UAAU,CAACkC,gBAAgB,CAAC,CAAC;IACjEzI,MAAM,GAAG,IAAAa,sBAAc,EAAC,CAACs2H,IAAI,EAAE,CAACA,IAAI,EAAEA,IAAI,EAAEA,IAAI,CAAC;EACnD;EACA,OAAOn3H,MAAM;AACf;;;;;;;;ACxKA,IAAAxK,OAAA,GAAAhI,sBAAA,CAAA7B,OAAA;AACA,IAAA69F,QAAA,GAAAh8F,sBAAA,CAAA7B,OAAA;AACA,IAAAo6H,UAAA,GAAAv4H,sBAAA,CAAA7B,OAAA;AACA,IAAAqrG,UAAA,GAAAxpG,sBAAA,CAAA7B,OAAA;AACA,IAAAgK,KAAA,GAAAhK,OAAA;AACA,IAAA4N,QAAA,GAAA5N,OAAA;AACA,IAAAkrB,KAAA,GAAAlrB,OAAA;AACA,IAAAm4H,UAAA,GAAAn4H,OAAA;AACA,IAAAyrI,SAAA,GAAAzrI,OAAA;AAIA,IAAAy2C,KAAA,GAAAz2C,OAAA;AAAsD,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAmzB,KAAA,eAAAxyB,OAAA,oBAAAA,OAAA,CAAAyG,GAAA,IAAA+rB,IAAA,GAAAxyB,OAAA,CAAAyG,GAAA,CAAAhG,IAAA,aAAA+xB,IAAA,YAAAA,KAAAx6B,MAAA,EAAA0F,QAAA,EAAA+0B,QAAA,QAAAC,IAAA,GAAAC,cAAA,CAAA36B,MAAA,EAAA0F,QAAA,QAAAg1B,IAAA,cAAAE,IAAA,GAAA5zB,MAAA,CAAA6zB,wBAAA,CAAAH,IAAA,EAAAh1B,QAAA,OAAAk1B,IAAA,CAAAnsB,GAAA,WAAAmsB,IAAA,CAAAnsB,GAAA,CAAA5J,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAxB,MAAA,GAAAy6B,QAAA,YAAAG,IAAA,CAAAz6B,KAAA,cAAAq6B,IAAA,CAAAx1B,KAAA,OAAAF,SAAA;AAAA,SAAA61B,eAAAl1B,MAAA,EAAAC,QAAA,YAAAsB,MAAA,CAAArC,SAAA,CAAA+J,cAAA,CAAA7J,IAAA,CAAAY,MAAA,EAAAC,QAAA,KAAAD,MAAA,GAAAoC,eAAA,CAAApC,MAAA,OAAAA,MAAA,2BAAAA,MAAA;AAAA,SAAAoC,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KAftD;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,IAQM0mI,UAAU,0BAAAvtC,OAAA;EACd;AACF;AACA;EACE,SAAAutC,WAAYp/H,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAA6vI,UAAA;IACnBvmI,KAAA,GAAAvB,UAAA,OAAA8nI,UAAA,GAAM;MACJ9xE,YAAY,EAAEttD,OAAO,CAACstD,YAAY;MAClCkhC,uBAAuB,EAAExuF,OAAO,CAACwuF,uBAAuB;MACxDlgF,UAAU,EAAEtO,OAAO,CAACsO,UAAU;MAC9BwyB,KAAK,EAAE9gC,OAAO,CAAC8gC,KAAK;MACpBzyB,KAAK,EAAErO,OAAO,CAACqO,KAAK;MACpBo5B,WAAW,EAAEznC,OAAO,CAACynC;IACvB,CAAC;;IAED;AACJ;AACA;IACI5uC,KAAA,CAAKuD,EAAE;;IAEP;AACJ;AACA;IACIvD,KAAA,CAAK6C,IAAI;;IAET;AACJ;AACA;IACI7C,KAAA,CAAK0D,EAAE;;IAEP;AACJ;AACA;AACA;IACI1D,KAAA,CAAKwmI,OAAO,GAAGr/H,OAAO,CAACs/H,MAAM,KAAKllI,SAAS,GAAG4F,OAAO,CAACs/H,MAAM,GAAG,KAAK;;IAEpE;AACJ;AACA;AACA;IACIzmI,KAAA,CAAK0mI,eAAe,GAClBv/H,OAAO,CAACs3H,cAAc,KAAKl9H,SAAS,GAAG4F,OAAO,CAACs3H,cAAc,GAAG,CAAC;;IAEnE;AACJ;AACA;IACIz+H,KAAA,CAAKkY,QAAQ,GAAG/Q,OAAO,CAAC+Q,QAAQ,KAAK3W,SAAS,GAAG4F,OAAO,CAAC+Q,QAAQ,GAAG,IAAI;IAExE,IAAM2mH,QAAQ,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;IAC3B,IAAI7+H,KAAA,CAAKkY,QAAQ,EAAE;MACjB,IAAAm5B,YAAM,EAACrxC,KAAA,CAAKkY,QAAQ,CAACqlH,WAAW,CAACv9H,KAAA,CAAKkY,QAAQ,CAAC8rC,UAAU,CAAC,CAAC,CAAC,EAAE66E,QAAQ,CAAC;IACzE;;IAEA;AACJ;AACA;AACA;IACI7+H,KAAA,CAAK2mI,SAAS,GAAG,IAAI1T,kBAAS,CAAC9rH,OAAO,CAACg8B,SAAS,IAAI,CAAC,CAAC;;IAEtD;AACJ;AACA;AACA;IACInjC,KAAA,CAAK4mI,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;IAErB;AACJ;AACA;AACA;IACI5mI,KAAA,CAAK8xH,IAAI,GAAG3qH,OAAO,CAACpQ,GAAG,IAAI,EAAE;;IAE7B;AACJ;AACA;AACA;IACIiJ,KAAA,CAAK6mI,WAAW,GAAG;MACjBvgC,UAAU,EAAEn/F,OAAO,CAACm/F,UAAU;MAC9B13D,WAAW,EAAEznC,OAAO,CAACynC;IACvB,CAAC;;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;IACI5uC,KAAA,CAAKk/H,UAAU,GAAG/3H,OAAO,CAAC+3H,UAAU,GAAG/3H,OAAO,CAAC+3H,UAAU,GAAG,CAAC;IAAC,OAAAl/H,KAAA;EAChE;;EAEA;AACF;AACA;EAFER,SAAA,CAAA+mI,UAAA,EAAAvtC,OAAA;EAAA,OAAAliG,YAAA,CAAAyvI,UAAA;IAAAxvI,GAAA;IAAAC,KAAA,EAGA,SAAA0zC,eAAA,EAAiB;MACf,OAAO,IAAI,CAACi8F,SAAS,CAACj8F,cAAc,CAAC,CAAC;IACxC;;IAEA;AACF;AACA;AACA;EAHE;IAAA3zC,GAAA;IAAAC,KAAA,EAIA,SAAA06H,YAAYj8G,UAAU,EAAEo4G,SAAS,EAAE;MACjC,IAAM8Y,SAAS,GAAG,IAAI,CAACG,yBAAyB,CAACrxH,UAAU,CAAC;MAC5D,IAAIkxH,SAAS,EAAE;QACbA,SAAS,CAACjV,WAAW,CAAC7D,SAAS,CAAC;MAClC;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAA92H,GAAA;IAAAC,KAAA,EASA,SAAAuhF,kBAAkB9iE,UAAU,EAAE+gB,CAAC,EAAE8hD,SAAS,EAAE1mE,QAAQ,EAAE;MACpD,IAAM+0H,SAAS,GAAG,IAAI,CAACG,yBAAyB,CAACrxH,UAAU,CAAC;MAC5D,IAAI,CAACkxH,SAAS,EAAE;QACd,OAAO,KAAK;MACd;MAEA,IAAIjH,OAAO,GAAG,IAAI;MAClB,IAAIvnD,IAAI,EAAEuoD,YAAY,EAAE/2F,MAAM;MAC9B,KAAK,IAAI/9B,CAAC,GAAG0sE,SAAS,CAAC7oE,IAAI,EAAE7D,CAAC,IAAI0sE,SAAS,CAAC1oE,IAAI,EAAE,EAAEhE,CAAC,EAAE;QACrD,KAAK,IAAIC,CAAC,GAAGysE,SAAS,CAAC3oE,IAAI,EAAE9D,CAAC,IAAIysE,SAAS,CAACxoE,IAAI,EAAE,EAAEjE,CAAC,EAAE;UACrD60H,YAAY,GAAG,IAAAnO,oBAAS,EAAC/7F,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,CAAC;UACjC89B,MAAM,GAAG,KAAK;UACd,IAAIg9F,SAAS,CAAChV,WAAW,CAAC+O,YAAY,CAAC,EAAE;YACvCvoD,IAAI,GAAG;YACLwuD,SAAS,CAACrhI,GAAG,CAACo7H,YAAY,CAC3B;YACD/2F,MAAM,GAAGwuC,IAAI,CAAC3vC,QAAQ,CAAC,CAAC,KAAKi+D,kBAAS,CAACrxE,MAAM;YAC7C,IAAIuU,MAAM,EAAE;cACVA,MAAM,GAAG/3B,QAAQ,CAACumE,IAAI,CAAC,KAAK,KAAK;YACnC;UACF;UACA,IAAI,CAACxuC,MAAM,EAAE;YACX+1F,OAAO,GAAG,KAAK;UACjB;QACF;MACF;MACA,OAAOA,OAAO;IAChB;;IAEA;AACF;AACA;AACA;EAHE;IAAA3oI,GAAA;IAAAC,KAAA,EAIA,SAAA8nI,uBAAuBrpH,UAAU,EAAE;MACjC,OAAO,CAAC;IACV;;IAEA;AACF;AACA;AACA;EAHE;IAAA1e,GAAA;IAAAC,KAAA,EAIA,SAAA0vG,OAAA,EAAS;MACP,OAAO,IAAI,CAACorB,IAAI;IAClB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA/6H,GAAA;IAAAC,KAAA,EAKA,SAAA+vI,OAAOhwI,GAAG,EAAE;MACV,IAAI,IAAI,CAAC+6H,IAAI,KAAK/6H,GAAG,EAAE;QACrB,IAAI,CAAC+6H,IAAI,GAAG/6H,GAAG;QACf,IAAI,CAAC8M,OAAO,CAAC,CAAC;MAChB;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA9M,GAAA;IAAAC,KAAA,EAIA,SAAAipI,UAAUxqH,UAAU,EAAE;MACpB,OAAO,IAAI,CAAC+wH,OAAO;IACrB;;IAEA;AACF;AACA;AACA;EAHE;IAAAzvI,GAAA;IAAAC,KAAA,EAIA,SAAAg3D,eAAev4C,UAAU,EAAE;MACzB,IAAMyC,QAAQ,GAAGzC,UAAU,GACvB,IAAI,CAAC+oH,wBAAwB,CAAC/oH,UAAU,CAAC,GACzC,IAAI,CAACyC,QAAQ;MACjB,IAAI,CAACA,QAAQ,EAAE;QACb,OAAO,IAAI;MACb;MACA,OAAOA,QAAQ,CAAC81C,cAAc,CAAC,CAAC;IAClC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAj3D,GAAA;IAAAC,KAAA,EASA,SAAAsnI,QAAQ9nG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAEi8B,UAAU,EAAEryB,UAAU,EAAE;MACvC,OAAO,IAAArR,cAAQ,EAAC,CAAC;IACnB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAArN,GAAA;IAAAC,KAAA,EAKA,SAAAgwI,YAAA,EAAc;MACZ,OAAO,IAAI,CAAC9uH,QAAQ;IACtB;;IAEA;AACF;AACA;AACA;EAHE;IAAAnhB,GAAA;IAAAC,KAAA,EAIA,SAAAwnI,yBAAyB/oH,UAAU,EAAE;MACnC,IAAI,CAAC,IAAI,CAACyC,QAAQ,EAAE;QAClB,OAAO,IAAAsmH,0BAAwB,EAAC/oH,UAAU,CAAC;MAC7C;MACA,OAAO,IAAI,CAACyC,QAAQ;IACtB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAnhB,GAAA;IAAAC,KAAA,EAKA,SAAA8vI,0BAA0BrxH,UAAU,EAAE;MACpC,IAAMoO,gBAAgB,GAAG,IAAI,CAACwD,aAAa,CAAC,CAAC;MAC7C,IAAA/e,eAAM,EACJub,gBAAgB,KAAK,IAAI,IAAI,IAAAH,gBAAU,EAACG,gBAAgB,EAAEpO,UAAU,CAAC,EACrE,sGACF,CAAC;MACD,OAAO,IAAI,CAACkxH,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA5vI,GAAA;IAAAC,KAAA,EAOA,SAAA0nI,kBAAkB52F,UAAU,EAAE;MAC5B,OAAO,IAAI,CAAC4+F,eAAe;IAC7B;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA3vI,GAAA;IAAAC,KAAA,EAMA,SAAAopI,iBAAiB5pG,CAAC,EAAEsR,UAAU,EAAEryB,UAAU,EAAE;MAC1C,IAAMyC,QAAQ,GAAG,IAAI,CAACsmH,wBAAwB,CAAC/oH,UAAU,CAAC;MAC1D,IAAMgpH,cAAc,GAAG,IAAI,CAACC,iBAAiB,CAAC52F,UAAU,CAAC;MACzD,IAAM+2F,QAAQ,GAAG,IAAAxtF,YAAM,EAACn5B,QAAQ,CAACqlH,WAAW,CAAC/mG,CAAC,CAAC,EAAE,IAAI,CAACowG,OAAO,CAAC;MAC9D,IAAInI,cAAc,IAAI,CAAC,EAAE;QACvB,OAAOI,QAAQ;MACjB;MACA,OAAO,IAAAoI,WAAS,EAACpI,QAAQ,EAAEJ,cAAc,EAAE,IAAI,CAACmI,OAAO,CAAC;IAC1D;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAA7vI,GAAA;IAAAC,KAAA,EASA,SAAAkwI,+BAA+B9uD,SAAS,EAAE3iE,UAAU,EAAE;MACpDA,UAAU,GAAGA,UAAU,KAAKlU,SAAS,GAAGkU,UAAU,GAAG,IAAI,CAAC4R,aAAa,CAAC,CAAC;MACzE,IAAMnP,QAAQ,GAAG,IAAI,CAACsmH,wBAAwB,CAAC/oH,UAAU,CAAC;MAC1D,IAAI,IAAI,CAAC24E,QAAQ,CAAC,CAAC,IAAI34E,UAAU,CAACqC,QAAQ,CAAC,CAAC,EAAE;QAC5CsgE,SAAS,GAAG,IAAA5iE,eAAK,EAAC0C,QAAQ,EAAEkgE,SAAS,EAAE3iE,UAAU,CAAC;MACpD;MACA,OAAO,IAAAo9G,2BAAgB,EAACz6C,SAAS,EAAElgE,QAAQ,CAAC,GAAGkgE,SAAS,GAAG,IAAI;IACjE;;IAEA;AACF;AACA;AACA;EAHE;IAAArhF,GAAA;IAAAC,KAAA,EAIA,SAAAqF,MAAA,EAAQ;MACN,IAAI,CAACsqI,SAAS,CAACtqI,KAAK,CAAC,CAAC;IACxB;EAAC;IAAAtF,GAAA;IAAAC,KAAA,EAED,SAAAm/F,QAAA,EAAU;MACR,IAAI,CAAC95F,KAAK,CAAC,CAAC;MACZg1B,IAAA,CAAA3yB,eAAA,CAAA6nI,UAAA,CAAA/qI,SAAA,oBAAAE,IAAA;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA3E,GAAA;IAAAC,KAAA,EAKA,SAAA4qI,gBAAgBH,SAAS,EAAEhsH,UAAU,EAAE;MACrC,IAAMkxH,SAAS,GAAG,IAAI,CAACG,yBAAyB,CAACrxH,UAAU,CAAC;MAC5D,IAAIgsH,SAAS,GAAGkF,SAAS,CAACtV,aAAa,EAAE;QACvCsV,SAAS,CAACtV,aAAa,GAAGoQ,SAAS;MACrC;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA1qI,GAAA;IAAAC,KAAA,EAQA,SAAA2qI,QAAQnrG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAE4J,UAAU,EAAE,CAAC;EAAC;AAAA,EAhUR8/E,gBAAM;AAmU/B;AACA;AACA;AACA;AACA;AAJA,IAKa4xC,eAAe,GAAA9vI,OAAA,CAAA8vI,eAAA,0BAAAxqI,MAAA;EAC1B;AACF;AACA;AACA;EACE,SAAAwqI,gBAAY1wI,IAAI,EAAE0hF,IAAI,EAAE;IAAA,IAAAhzE,MAAA;IAAAzO,eAAA,OAAAywI,eAAA;IACtBhiI,MAAA,GAAA1G,UAAA,OAAA0oI,eAAA,GAAM1wI,IAAI;;IAEV;AACJ;AACA;AACA;AACA;IACI0O,MAAA,CAAKgzE,IAAI,GAAGA,IAAI;IAAC,OAAAhzE,MAAA;EACnB;EAAC3F,SAAA,CAAA2nI,eAAA,EAAAxqI,MAAA;EAAA,OAAA7F,YAAA,CAAAqwI,eAAA;AAAA,EAdkCrmI,eAAK;AAAA,IAAA1J,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAiB3BivI,UAAU;;;;;;;;;;;;AC1YzB,IAAA/pH,KAAA,GAAA3hB,OAAA;AACA,IAAAm4H,UAAA,GAAAn4H,OAAA;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACO,SAASusI,kBAAkBA,CAACtpH,QAAQ,EAAE5F,QAAQ,EAAE;EACrD,IAAMmvH,MAAM,GAAG,QAAQ;EACvB,IAAMC,MAAM,GAAG,QAAQ;EACvB,IAAMC,MAAM,GAAG,QAAQ;EACvB,IAAMC,UAAU,GAAG,SAAS;EAC5B;IACE;AACJ;AACA;AACA;AACA;AACA;IACI,UAAUpvD,SAAS,EAAEtwC,UAAU,EAAEryB,UAAU,EAAE;MAC3C,IAAI,CAAC2iE,SAAS,EAAE;QACd,OAAO72E,SAAS;MAClB;MACA,OAAOuc,QAAQ,CACZjE,OAAO,CAACwtH,MAAM,EAAEjvD,SAAS,CAAC,CAAC,CAAC,CAACprE,QAAQ,CAAC,CAAC,CAAC,CACxC6M,OAAO,CAACytH,MAAM,EAAElvD,SAAS,CAAC,CAAC,CAAC,CAACprE,QAAQ,CAAC,CAAC,CAAC,CACxC6M,OAAO,CAAC0tH,MAAM,EAAEnvD,SAAS,CAAC,CAAC,CAAC,CAACprE,QAAQ,CAAC,CAAC,CAAC,CACxC6M,OAAO,CAAC2tH,UAAU,EAAE,YAAY;QAC/B,IAAMhxG,CAAC,GAAG4hD,SAAS,CAAC,CAAC,CAAC;QACtB,IAAMha,KAAK,GAAGlmD,QAAQ,CAAC46G,gBAAgB,CAACt8F,CAAC,CAAC;QAC1C,IAAI,CAAC4nC,KAAK,EAAE;UACV,MAAM,IAAI/5D,KAAK,CACb,uDACF,CAAC;QACH;QACA,IAAMwH,CAAC,GAAGuyD,KAAK,CAAC/rD,SAAS,CAAC,CAAC,GAAG+lE,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;QAC9C,OAAOvsE,CAAC,CAACmB,QAAQ,CAAC,CAAC;MACrB,CAAC,CAAC;IACN;EAAC;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASy6H,mBAAmBA,CAACC,SAAS,EAAExvH,QAAQ,EAAE;EACvD,IAAMlU,GAAG,GAAG0jI,SAAS,CAACrvI,MAAM;EAC5B,IAAMsvI,gBAAgB,GAAG,IAAIpuI,KAAK,CAACyK,GAAG,CAAC;EACvC,KAAK,IAAIlL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkL,GAAG,EAAE,EAAElL,CAAC,EAAE;IAC5B6uI,gBAAgB,CAAC7uI,CAAC,CAAC,GAAGsuI,kBAAkB,CAACM,SAAS,CAAC5uI,CAAC,CAAC,EAAEof,QAAQ,CAAC;EAClE;EACA,OAAO0vH,0BAA0B,CAACD,gBAAgB,CAAC;AACrD;;AAEA;AACA;AACA;AACA;AACO,SAASC,0BAA0BA,CAACD,gBAAgB,EAAE;EAC3D,IAAIA,gBAAgB,CAACtvI,MAAM,KAAK,CAAC,EAAE;IACjC,OAAOsvI,gBAAgB,CAAC,CAAC,CAAC;EAC5B;EACA;IACE;AACJ;AACA;AACA;AACA;AACA;IACI,UAAUvvD,SAAS,EAAEtwC,UAAU,EAAEryB,UAAU,EAAE;MAC3C,IAAI,CAAC2iE,SAAS,EAAE;QACd,OAAO72E,SAAS;MAClB;MACA,IAAM+1B,CAAC,GAAG,IAAAuwG,eAAa,EAACzvD,SAAS,CAAC;MAClC,IAAMj+E,KAAK,GAAG,IAAA+gB,YAAM,EAACoc,CAAC,EAAEqwG,gBAAgB,CAACtvI,MAAM,CAAC;MAChD,OAAOsvI,gBAAgB,CAACxtI,KAAK,CAAC,CAACi+E,SAAS,EAAEtwC,UAAU,EAAEryB,UAAU,CAAC;IACnE;EAAC;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqyH,mBAAmBA,CAAC1vD,SAAS,EAAEtwC,UAAU,EAAEryB,UAAU,EAAE;EACrE,OAAOlU,SAAS;AAClB;;AAEA;AACA;AACA;AACA;AACO,SAASwmI,SAASA,CAAC7wC,GAAG,EAAE;EAC7B,IAAM8wC,IAAI,GAAG,EAAE;EACf,IAAItmG,KAAK,GAAG,qBAAqB,CAACN,IAAI,CAAC81D,GAAG,CAAC;EAC3C,IAAIx1D,KAAK,EAAE;IACT;IACA,IAAMumG,aAAa,GAAGvmG,KAAK,CAAC,CAAC,CAAC,CAACwmG,UAAU,CAAC,CAAC,CAAC;IAC5C,IAAMC,YAAY,GAAGzmG,KAAK,CAAC,CAAC,CAAC,CAACwmG,UAAU,CAAC,CAAC,CAAC;IAC3C,IAAIE,QAAQ;IACZ,KAAKA,QAAQ,GAAGH,aAAa,EAAEG,QAAQ,IAAID,YAAY,EAAE,EAAEC,QAAQ,EAAE;MACnEJ,IAAI,CAACtnI,IAAI,CAACw2F,GAAG,CAACr9E,OAAO,CAAC6nB,KAAK,CAAC,CAAC,CAAC,EAAEnjC,MAAM,CAAC4+E,YAAY,CAACirD,QAAQ,CAAC,CAAC,CAAC;IACjE;IACA,OAAOJ,IAAI;EACb;EACAtmG,KAAK,GAAG,iBAAiB,CAACN,IAAI,CAAC81D,GAAG,CAAC;EACnC,IAAIx1D,KAAK,EAAE;IACT;IACA,IAAMw9B,IAAI,GAAG7iD,QAAQ,CAACqlB,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACnC,KAAK,IAAI5oC,CAAC,GAAGujB,QAAQ,CAACqlB,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE5oC,CAAC,IAAIomE,IAAI,EAAEpmE,CAAC,EAAE,EAAE;MACnDkvI,IAAI,CAACtnI,IAAI,CAACw2F,GAAG,CAACr9E,OAAO,CAAC6nB,KAAK,CAAC,CAAC,CAAC,EAAE5oC,CAAC,CAACkU,QAAQ,CAAC,CAAC,CAAC,CAAC;IAChD;IACA,OAAOg7H,IAAI;EACb;EACAA,IAAI,CAACtnI,IAAI,CAACw2F,GAAG,CAAC;EACd,OAAO8wC,IAAI;AACb;;;;;;;;ACzHA,IAAAK,cAAA,GAAA3rI,sBAAA,CAAA7B,OAAA;AACA,IAAAusG,KAAA,GAAAh/B,uBAAA,CAAAvtE,OAAA;AACA,IAAAqrG,UAAA,GAAAxpG,sBAAA,CAAA7B,OAAA;AACA,IAAAytI,gBAAA,GAAAztI,OAAA;AACA,IAAAm4H,UAAA,GAAAn4H,OAAA;AACA,IAAAgK,KAAA,GAAAhK,OAAA;AAAkC,SAAAytE,yBAAAjqE,CAAA,6BAAAkqE,OAAA,mBAAAnqE,CAAA,OAAAmqE,OAAA,IAAArqE,CAAA,OAAAqqE,OAAA,YAAAD,wBAAA,YAAAA,CAAAjqE,CAAA,WAAAA,CAAA,GAAAH,CAAA,GAAAE,CAAA,KAAAC,CAAA;AAAA,SAAA+pE,wBAAA/pE,CAAA,EAAAD,CAAA,SAAAA,CAAA,IAAAC,CAAA,IAAAA,CAAA,CAAAvB,UAAA,SAAAuB,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAA/G,OAAA,EAAA+G,CAAA,QAAAH,CAAA,GAAAoqE,wBAAA,CAAAlqE,CAAA,OAAAF,CAAA,IAAAA,CAAA,CAAAsqE,GAAA,CAAAnqE,CAAA,UAAAH,CAAA,CAAAoH,GAAA,CAAAjH,CAAA,OAAAxF,CAAA,KAAA0G,SAAA,UAAAhH,CAAA,GAAAsF,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAA6zB,wBAAA,WAAA9iB,CAAA,IAAAvQ,CAAA,oBAAAuQ,CAAA,OAAArJ,cAAA,CAAA7J,IAAA,CAAA2C,CAAA,EAAAuQ,CAAA,SAAA9V,CAAA,GAAAP,CAAA,GAAAsF,MAAA,CAAA6zB,wBAAA,CAAArzB,CAAA,EAAAuQ,CAAA,UAAA9V,CAAA,KAAAA,CAAA,CAAAwM,GAAA,IAAAxM,CAAA,CAAAqN,GAAA,IAAAtI,MAAA,CAAAC,cAAA,CAAAjF,CAAA,EAAA+V,CAAA,EAAA9V,CAAA,IAAAD,CAAA,CAAA+V,CAAA,IAAAvQ,CAAA,CAAAuQ,CAAA,YAAA/V,CAAA,CAAAvB,OAAA,GAAA+G,CAAA,EAAAH,CAAA,IAAAA,CAAA,CAAAiI,GAAA,CAAA9H,CAAA,EAAAxF,CAAA,GAAAA,CAAA;AAAA,SAAA6D,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAQ,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KARlC;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAMM0oI,OAAO,0BAAAC,WAAA;EACX;AACF;AACA;EACE,SAAAD,QAAYphI,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAA6xI,OAAA;IACnBvoI,KAAA,GAAAvB,UAAA,OAAA8pI,OAAA,GAAM;MACJ9zE,YAAY,EAAEttD,OAAO,CAACstD,YAAY;MAClCtxB,SAAS,EAAEh8B,OAAO,CAACg8B,SAAS;MAC5BsjG,MAAM,EAAEt/H,OAAO,CAACs/H,MAAM;MACtBhxH,UAAU,EAAEtO,OAAO,CAACsO,UAAU;MAC9BwyB,KAAK,EAAE9gC,OAAO,CAAC8gC,KAAK;MACpB/vB,QAAQ,EAAE/Q,OAAO,CAAC+Q,QAAQ;MAC1BumH,cAAc,EAAEt3H,OAAO,CAACs3H,cAAc;MACtCjpH,KAAK,EAAErO,OAAO,CAACqO,KAAK;MACpB8wF,UAAU,EAAEn/F,OAAO,CAACm/F,UAAU;MAC9B13D,WAAW,EAAEznC,OAAO,CAACynC,WAAW;MAChC73C,GAAG,EAAEoQ,OAAO,CAACpQ,GAAG;MAChB4+F,uBAAuB,EAAExuF,OAAO,CAACwuF,uBAAuB;MACxDupC,UAAU,EAAE/3H,OAAO,CAAC+3H;IACtB,CAAC;;IAED;AACJ;AACA;AACA;IACIl/H,KAAA,CAAKyoI,wBAAwB,GAC3BzoI,KAAA,CAAK0oI,eAAe,KAAKH,OAAO,CAAC/sI,SAAS,CAACktI,eAAe;;IAE5D;AACJ;AACA;AACA;IACI1oI,KAAA,CAAKqnG,gBAAgB,GAAGlgG,OAAO,CAACkgG,gBAAgB;IAEhD,IAAIlgG,OAAO,CAACuhI,eAAe,EAAE;MAC3B1oI,KAAA,CAAK0oI,eAAe,GAAGvhI,OAAO,CAACuhI,eAAe;IAChD;;IAEA;AACJ;AACA;AACA;IACI1oI,KAAA,CAAKgoI,IAAI,GAAG,IAAI;IAEhB,IAAI7gI,OAAO,CAAC6gI,IAAI,EAAE;MAChBhoI,KAAA,CAAK2oI,OAAO,CAACxhI,OAAO,CAAC6gI,IAAI,CAAC;IAC5B,CAAC,MAAM,IAAI7gI,OAAO,CAAC+vF,GAAG,EAAE;MACtBl3F,KAAA,CAAKq9F,MAAM,CAACl2F,OAAO,CAAC+vF,GAAG,CAAC;IAC1B;;IAEA;AACJ;AACA;AACA;IACIl3F,KAAA,CAAK4oI,gBAAgB,GAAG,CAAC,CAAC;IAAC,OAAA5oI,KAAA;EAC7B;;EAEA;AACF;AACA;AACA;AACA;EAJER,SAAA,CAAA+oI,OAAA,EAAAC,WAAA;EAAA,OAAA1xI,YAAA,CAAAyxI,OAAA;IAAAxxI,GAAA;IAAAC,KAAA,EAKA,SAAA6xI,oBAAA,EAAsB;MACpB,OAAO,IAAI,CAACxhC,gBAAgB;IAC9B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAtwG,GAAA;IAAAC,KAAA,EAKA,SAAA8xI,mBAAA,EAAqB;MACnB,OAAOjrI,MAAM,CAACwB,cAAc,CAAC,IAAI,CAAC,CAACqpI,eAAe,KAAK,IAAI,CAACA,eAAe,GACvE,IAAI,CAACA,eAAe,CAACppI,IAAI,CAAC,IAAI,CAAC,GAC/B,IAAI,CAACopI,eAAe;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA3xI,GAAA;IAAAC,KAAA,EAOA,SAAA+xI,QAAA,EAAU;MACR,OAAO,IAAI,CAACf,IAAI;IAClB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjxI,GAAA;IAAAC,KAAA,EAKA,SAAAm7G,iBAAiBvxG,KAAK,EAAE;MACtB,IAAMu3E,IAAI,GAAG,2CAA6Cv3E,KAAK,CAAC/J,MAAO;MACvE,IAAMi6F,GAAG,GAAG,IAAAvsF,YAAM,EAAC4zE,IAAI,CAAC;MACxB,IAAMkmD,SAAS,GAAGlmD,IAAI,CAAC3vC,QAAQ,CAAC,CAAC;MACjC,IAAI/xC,IAAI;MACR,IAAI4nI,SAAS,IAAI53B,kBAAS,CAACtxE,OAAO,EAAE;QAClC,IAAI,CAACyzG,gBAAgB,CAAC93C,GAAG,CAAC,GAAG,IAAI;QACjCr6F,IAAI,GAAGuyI,sBAAa,CAAC/G,aAAa;MACpC,CAAC,MAAM,IAAInxC,GAAG,IAAI,IAAI,CAAC83C,gBAAgB,EAAE;QACvC,OAAO,IAAI,CAACA,gBAAgB,CAAC93C,GAAG,CAAC;QACjCr6F,IAAI,GACF4nI,SAAS,IAAI53B,kBAAS,CAAC9kG,KAAK,GACxBqnI,sBAAa,CAAC7G,aAAa,GAC3B9D,SAAS,IAAI53B,kBAAS,CAACrxE,MAAM,GAC3B4zG,sBAAa,CAAC9G,WAAW,GACzB3gI,SAAS;MACnB;MACA,IAAI9K,IAAI,IAAI8K,SAAS,EAAE;QACrB,IAAI,CAACZ,aAAa,CAAC,IAAIwmI,qBAAe,CAAC1wI,IAAI,EAAE0hF,IAAI,CAAC,CAAC;MACrD;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAphF,GAAA;IAAAC,KAAA,EAKA,SAAAiyI,oBAAoB5hC,gBAAgB,EAAE;MACpC,IAAI,CAACs/B,SAAS,CAACtqI,KAAK,CAAC,CAAC;MACtB,IAAI,CAACgrG,gBAAgB,GAAGA,gBAAgB;MACxC,IAAI,CAACxjG,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA9M,GAAA;IAAAC,KAAA,EAMA,SAAAkyI,mBAAmBR,eAAe,EAAE3xI,GAAG,EAAE;MACvC,IAAI,CAAC2xI,eAAe,GAAGA,eAAe;MACtC,IAAI,CAAC/B,SAAS,CAACxT,kBAAkB,CAAC,CAAC;MACnC,IAAI,OAAOp8H,GAAG,KAAK,WAAW,EAAE;QAC9B,IAAI,CAACgwI,MAAM,CAAChwI,GAAG,CAAC;MAClB,CAAC,MAAM;QACL,IAAI,CAAC8M,OAAO,CAAC,CAAC;MAChB;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA9M,GAAA;IAAAC,KAAA,EAKA,SAAAqmG,OAAOnG,GAAG,EAAE;MACV,IAAM8wC,IAAI,GAAG,IAAAD,0BAAS,EAAC7wC,GAAG,CAAC;MAC3B,IAAI,CAAC8wC,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACW,OAAO,CAACX,IAAI,CAAC;IACpB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjxI,GAAA;IAAAC,KAAA,EAKA,SAAA2xI,QAAQX,IAAI,EAAE;MACZ,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,IAAMjxI,GAAG,GAAGixI,IAAI,CAACt6H,IAAI,CAAC,IAAI,CAAC;MAC3B,IAAI,IAAI,CAAC+6H,wBAAwB,EAAE;QACjC,IAAI,CAACS,kBAAkB,CAAC,IAAAzB,oCAAmB,EAACO,IAAI,EAAE,IAAI,CAAC9vH,QAAQ,CAAC,EAAEnhB,GAAG,CAAC;MACxE,CAAC,MAAM;QACL,IAAI,CAACgwI,MAAM,CAAChwI,GAAG,CAAC;MAClB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAA,GAAA;IAAAC,KAAA,EAMA,SAAA0xI,gBAAgBtwD,SAAS,EAAEtwC,UAAU,EAAEryB,UAAU,EAAE;MACjD,OAAOlU,SAAS;IAClB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAxK,GAAA;IAAAC,KAAA,EAMA,SAAA2qI,QAAQnrG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAE;MACf,IAAM60H,YAAY,GAAG,IAAAnO,oBAAS,EAAC/7F,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,CAAC;MACvC,IAAI,IAAI,CAAC86H,SAAS,CAAChV,WAAW,CAAC+O,YAAY,CAAC,EAAE;QAC5C,IAAI,CAACiG,SAAS,CAACrhI,GAAG,CAACo7H,YAAY,CAAC;MAClC;IACF;EAAC;AAAA,EA7LmB6F,aAAU;AAAA,IAAAnvI,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAgMjBixI,OAAO;;;;;;;;ACnOtB,IAAAplI,UAAA,GAAAzG,sBAAA,CAAA7B,OAAA;AACA,IAAAk6H,UAAA,GAAAr4H,sBAAA,CAAA7B,OAAA;AACA,IAAAusG,KAAA,GAAA1qG,sBAAA,CAAA7B,OAAA;AACA,IAAAo6H,UAAA,GAAAv4H,sBAAA,CAAA7B,OAAA;AACA,IAAAqrG,UAAA,GAAAxpG,sBAAA,CAAA7B,OAAA;AACA,IAAAsuI,SAAA,GAAAzsI,sBAAA,CAAA7B,OAAA;AACA,IAAAkrB,KAAA,GAAAlrB,OAAA;AACA,IAAAm4H,UAAA,GAAAn4H,OAAA;AACA,IAAAyrI,SAAA,GAAAzrI,OAAA;AACA,IAAAgK,KAAA,GAAAhK,OAAA;AAAkC,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAmzB,KAAA,eAAAxyB,OAAA,oBAAAA,OAAA,CAAAyG,GAAA,IAAA+rB,IAAA,GAAAxyB,OAAA,CAAAyG,GAAA,CAAAhG,IAAA,aAAA+xB,IAAA,YAAAA,KAAAx6B,MAAA,EAAA0F,QAAA,EAAA+0B,QAAA,QAAAC,IAAA,GAAAC,cAAA,CAAA36B,MAAA,EAAA0F,QAAA,QAAAg1B,IAAA,cAAAE,IAAA,GAAA5zB,MAAA,CAAA6zB,wBAAA,CAAAH,IAAA,EAAAh1B,QAAA,OAAAk1B,IAAA,CAAAnsB,GAAA,WAAAmsB,IAAA,CAAAnsB,GAAA,CAAA5J,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAxB,MAAA,GAAAy6B,QAAA,YAAAG,IAAA,CAAAz6B,KAAA,cAAAq6B,IAAA,CAAAx1B,KAAA,OAAAF,SAAA;AAAA,SAAA61B,eAAAl1B,MAAA,EAAAC,QAAA,YAAAsB,MAAA,CAAArC,SAAA,CAAA+J,cAAA,CAAA7J,IAAA,CAAAY,MAAA,EAAAC,QAAA,KAAAD,MAAA,GAAAoC,eAAA,CAAApC,MAAA,OAAAA,MAAA,2BAAAA,MAAA;AAAA,SAAAoC,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KAZlC;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAOMupI,SAAS,0BAAAC,QAAA;EACb;AACF;AACA;EACE,SAAAD,UAAYjiI,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAA0yI,SAAA;IACnBppI,KAAA,GAAAvB,UAAA,OAAA2qI,SAAA,GAAM;MACJ30E,YAAY,EAAEttD,OAAO,CAACstD,YAAY;MAClCtxB,SAAS,EAAEh8B,OAAO,CAACg8B,SAAS;MAC5BsjG,MAAM,EAAEt/H,OAAO,CAACs/H,MAAM;MACtBhxH,UAAU,EAAEtO,OAAO,CAACsO,UAAU;MAC9BwyB,KAAK,EAAE9gC,OAAO,CAAC8gC,KAAK;MACpB/vB,QAAQ,EAAE/Q,OAAO,CAAC+Q,QAAQ;MAC1BmvF,gBAAgB,EAAElgG,OAAO,CAACkgG,gBAAgB,GACtClgG,OAAO,CAACkgG,gBAAgB,GACxBiiC,uBAAuB;MAC3B7K,cAAc,EAAEt3H,OAAO,CAACs3H,cAAc;MACtCiK,eAAe,EAAEvhI,OAAO,CAACuhI,eAAe;MACxCxxC,GAAG,EAAE/vF,OAAO,CAAC+vF,GAAG;MAChB8wC,IAAI,EAAE7gI,OAAO,CAAC6gI,IAAI;MAClBxyH,KAAK,EAAErO,OAAO,CAACqO,KAAK;MACpB8wF,UAAU,EAAEn/F,OAAO,CAACm/F,UAAU;MAC9B13D,WAAW,EACTznC,OAAO,CAACynC,WAAW,KAAKrtC,SAAS,GAAG4F,OAAO,CAACynC,WAAW,GAAG,IAAI;MAChE73C,GAAG,EAAEoQ,OAAO,CAACpQ,GAAG;MAChB4+F,uBAAuB,EAAExuF,OAAO,CAACwuF,uBAAuB;MACxDupC,UAAU,EAAE/3H,OAAO,CAAC+3H;IACtB,CAAC;;IAED;AACJ;AACA;AACA;IACIl/H,KAAA,CAAK6qC,WAAW,GACd1jC,OAAO,CAAC0jC,WAAW,KAAKtpC,SAAS,GAAG4F,OAAO,CAAC0jC,WAAW,GAAG,IAAI;;IAEhE;AACJ;AACA;AACA;IACI7qC,KAAA,CAAKupI,SAAS,GACZpiI,OAAO,CAACoiI,SAAS,KAAKhoI,SAAS,GAAG4F,OAAO,CAACoiI,SAAS,GAAGpiC,kBAAS;;IAEjE;AACJ;AACA;AACA;IACInnG,KAAA,CAAKwpI,sBAAsB,GAAG,CAAC,CAAC;;IAEhC;AACJ;AACA;AACA;IACIxpI,KAAA,CAAKypI,qBAAqB,GAAG,CAAC,CAAC;;IAE/B;AACJ;AACA;AACA;IACIzpI,KAAA,CAAK0pI,2BAA2B,GAAGviI,OAAO,CAACwiI,0BAA0B;;IAErE;AACJ;AACA;AACA;IACI3pI,KAAA,CAAK4pI,wBAAwB,GAAG,KAAK;IAAC,OAAA5pI,KAAA;EACxC;;EAEA;AACF;AACA;EAFER,SAAA,CAAA4pI,SAAA,EAAAC,QAAA;EAAA,OAAAvyI,YAAA,CAAAsyI,SAAA;IAAAryI,GAAA;IAAAC,KAAA,EAGA,SAAA0zC,eAAA,EAAiB;MACf,IAAI,IAAI,CAACi8F,SAAS,CAACj8F,cAAc,CAAC,CAAC,EAAE;QACnC,OAAO,IAAI;MACb;MACA,KAAK,IAAM3zC,GAAG,IAAI,IAAI,CAACyyI,sBAAsB,EAAE;QAC7C,IAAI,IAAI,CAACA,sBAAsB,CAACzyI,GAAG,CAAC,CAAC2zC,cAAc,CAAC,CAAC,EAAE;UACrD,OAAO,IAAI;QACb;MACF;MAEA,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;EAHE;IAAA3zC,GAAA;IAAAC,KAAA,EAIA,SAAA06H,YAAYj8G,UAAU,EAAEo4G,SAAS,EAAE;MACjC,IAAMgc,aAAa,GAAG,IAAI,CAAC/C,yBAAyB,CAACrxH,UAAU,CAAC;MAEhE,IAAI,CAACkxH,SAAS,CAACjV,WAAW,CACxB,IAAI,CAACiV,SAAS,IAAIkD,aAAa,GAAGhc,SAAS,GAAG,CAAC,CACjD,CAAC;MACD,KAAK,IAAM3jH,EAAE,IAAI,IAAI,CAACs/H,sBAAsB,EAAE;QAC5C,IAAM7C,SAAS,GAAG,IAAI,CAAC6C,sBAAsB,CAACt/H,EAAE,CAAC;QACjDy8H,SAAS,CAACjV,WAAW,CAACiV,SAAS,IAAIkD,aAAa,GAAGhc,SAAS,GAAG,CAAC,CAAC,CAAC;MACpE;IACF;;IAEA;AACF;AACA;AACA;EAHE;IAAA92H,GAAA;IAAAC,KAAA,EAIA,SAAA8nI,uBAAuBrpH,UAAU,EAAE;MACjC,IACE,IAAI,CAAC4R,aAAa,CAAC,CAAC,IACpB5R,UAAU,IACV,CAAC,IAAAiO,gBAAU,EAAC,IAAI,CAAC2D,aAAa,CAAC,CAAC,EAAE5R,UAAU,CAAC,EAC7C;QACA,OAAO,CAAC;MACV;MACA,OAAO,IAAI,CAACq0H,SAAS,CAAC,CAAC;IACzB;;IAEA;AACF;AACA;EAFE;IAAA/yI,GAAA;IAAAC,KAAA,EAGA,SAAA8yI,UAAA,EAAY;MACV,OAAO,CAAC;IACV;;IAEA;AACF;AACA;AACA;EAHE;IAAA/yI,GAAA;IAAAC,KAAA,EAIA,SAAA0vG,OAAA,EAAS;MACP,IAAI3vG,GAAG,GAAAs6B,IAAA,CAAA3yB,eAAA,CAAA0qI,SAAA,CAAA5tI,SAAA,mBAAAE,IAAA,MAAiB;MACxB,IAAI,CAAC,IAAI,CAACw6F,cAAc,CAAC,CAAC,EAAE;QAC1Bn/F,GAAG,IAAI,wBAAwB;MACjC;MACA,OAAOA,GAAG;IACZ;;IAEA;AACF;AACA;AACA;EAHE;IAAAA,GAAA;IAAAC,KAAA,EAIA,SAAAipI,UAAUxqH,UAAU,EAAE;MACpB,IACE,IAAI,CAAC4R,aAAa,CAAC,CAAC,IACpB5R,UAAU,IACV,CAAC,IAAAiO,gBAAU,EAAC,IAAI,CAAC2D,aAAa,CAAC,CAAC,EAAE5R,UAAU,CAAC,EAC7C;QACA,OAAO,KAAK;MACd;MACA,OAAA4b,IAAA,CAAA3yB,eAAA,CAAA0qI,SAAA,CAAA5tI,SAAA,sBAAAE,IAAA,OAAuB+Z,UAAU;IACnC;;IAEA;AACF;AACA;AACA;EAHE;IAAA1e,GAAA;IAAAC,KAAA,EAIA,SAAAwnI,yBAAyB/oH,UAAU,EAAE;MACnC,IAAMs0H,QAAQ,GAAG,IAAI,CAAC1iH,aAAa,CAAC,CAAC;MACrC,IAAI,IAAI,CAACnP,QAAQ,KAAK,CAAC6xH,QAAQ,IAAI,IAAArmH,gBAAU,EAACqmH,QAAQ,EAAEt0H,UAAU,CAAC,CAAC,EAAE;QACpE,OAAO,IAAI,CAACyC,QAAQ;MACtB;MACA,IAAM8xH,OAAO,GAAG,IAAAzlI,YAAM,EAACkR,UAAU,CAAC;MAClC,IAAI,EAAEu0H,OAAO,IAAI,IAAI,CAACP,qBAAqB,CAAC,EAAE;QAC5C,IAAI,CAACA,qBAAqB,CAACO,OAAO,CAAC,GACjC,IAAAxL,0BAAwB,EAAC/oH,UAAU,CAAC;MACxC;MACA,OAAO,IAAI,CAACg0H,qBAAqB,CAACO,OAAO,CAAC;IAC5C;;IAEA;AACF;AACA;AACA;EAHE;IAAAjzI,GAAA;IAAAC,KAAA,EAIA,SAAA8vI,0BAA0BrxH,UAAU,EAAE;MACpC,IAAMs0H,QAAQ,GAAG,IAAI,CAAC1iH,aAAa,CAAC,CAAC;MACrC,IAAI,CAAC0iH,QAAQ,IAAI,IAAArmH,gBAAU,EAACqmH,QAAQ,EAAEt0H,UAAU,CAAC,EAAE;QACjD,OAAO,IAAI,CAACkxH,SAAS;MACvB;MACA,IAAMqD,OAAO,GAAG,IAAAzlI,YAAM,EAACkR,UAAU,CAAC;MAClC,IAAI,EAAEu0H,OAAO,IAAI,IAAI,CAACR,sBAAsB,CAAC,EAAE;QAC7C,IAAI,CAACA,sBAAsB,CAACQ,OAAO,CAAC,GAAG,IAAI/W,kBAAS,CAClD,IAAI,CAAC0T,SAAS,CAACtV,aACjB,CAAC;MACH;MACA,OAAO,IAAI,CAACmY,sBAAsB,CAACQ,OAAO,CAAC;IAC7C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAjzI,GAAA;IAAAC,KAAA,EAUA,SAAAizI,YAAYzzG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAEi8B,UAAU,EAAEryB,UAAU,EAAE1e,GAAG,EAAE;MAChD,IAAMqhF,SAAS,GAAG,CAAC5hD,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,CAAC;MAC3B,IAAM0nH,YAAY,GAAG,IAAI,CAAC2T,8BAA8B,CACtD9uD,SAAS,EACT3iE,UACF,CAAC;MACD,IAAMy0H,OAAO,GAAG3W,YAAY,GACxB,IAAI,CAACmV,eAAe,CAACnV,YAAY,EAAEzrF,UAAU,EAAEryB,UAAU,CAAC,GAC1DlU,SAAS;MACb,IAAM42E,IAAI,GAAG,IAAI,IAAI,CAACoxD,SAAS,CAC7BnxD,SAAS,EACT8xD,OAAO,KAAK3oI,SAAS,GAAGklG,kBAAS,CAACvxE,IAAI,GAAGuxE,kBAAS,CAACpxE,KAAK,EACxD60G,OAAO,KAAK3oI,SAAS,GAAG2oI,OAAO,GAAG,EAAE,EACpC,IAAI,CAACr/F,WAAW,EAChB,IAAI,CAACw8D,gBAAgB,EACrB,IAAI,CAACw/B,WACP,CAAC;MACD1uD,IAAI,CAACphF,GAAG,GAAGA,GAAG;MACdohF,IAAI,CAAC93E,gBAAgB,CAACyD,kBAAS,CAACpC,MAAM,EAAE,IAAI,CAACywG,gBAAgB,CAAC7yG,IAAI,CAAC,IAAI,CAAC,CAAC;MACzE,OAAO64E,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAphF,GAAA;IAAAC,KAAA,EAQA,SAAAsnI,QAAQ9nG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAEi8B,UAAU,EAAEryB,UAAU,EAAE;MAAA,IAAAtQ,MAAA;MACvC,IAAM0e,gBAAgB,GAAG,IAAI,CAACwD,aAAa,CAAC,CAAC;MAC7C,IACE,CAACxD,gBAAgB,IACjB,CAACpO,UAAU,IACX,IAAAiO,gBAAU,EAACG,gBAAgB,EAAEpO,UAAU,CAAC,EACxC;QACA,OAAO,IAAI,CAAC00H,eAAe,CACzB3zG,CAAC,EACD5qB,CAAC,EACDC,CAAC,EACDi8B,UAAU,EACVjkB,gBAAgB,IAAIpO,UACtB,CAAC;MACH;MACA,IAAMmE,KAAK,GAAG,IAAI,CAACktH,yBAAyB,CAACrxH,UAAU,CAAC;MACxD,IAAM2iE,SAAS,GAAG,CAAC5hD,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,CAAC;MAC3B,IAAIssE,IAAI;MACR,IAAMuoD,YAAY,GAAG,IAAAh6B,iBAAM,EAACtuB,SAAS,CAAC;MACtC,IAAIx+D,KAAK,CAAC+3G,WAAW,CAAC+O,YAAY,CAAC,EAAE;QACnCvoD,IAAI,GAAGv+D,KAAK,CAACtU,GAAG,CAACo7H,YAAY,CAAC;MAChC;MACA,IAAM3pI,GAAG,GAAG,IAAI,CAAC2vG,MAAM,CAAC,CAAC;MACzB,IAAIvuB,IAAI,IAAIA,IAAI,CAACphF,GAAG,IAAIA,GAAG,EAAE;QAC3B,OAAOohF,IAAI;MACb;MACA,IAAMgkD,cAAc,GAAG,IAAI,CAACqC,wBAAwB,CAAC36G,gBAAgB,CAAC;MACtE,IAAMu4G,cAAc,GAAG,IAAI,CAACoC,wBAAwB,CAAC/oH,UAAU,CAAC;MAChE,IAAMs+G,gBAAgB,GAAG,IAAI,CAACmT,8BAA8B,CAC1D9uD,SAAS,EACT3iE,UACF,CAAC;MACD,IAAM20H,OAAO,GAAG,IAAIlO,aAAU,CAC5Br4G,gBAAgB,EAChBs4G,cAAc,EACd1mH,UAAU,EACV2mH,cAAc,EACdhkD,SAAS,EACT27C,gBAAgB,EAChB,IAAI,CAAC2K,iBAAiB,CAAC52F,UAAU,CAAC,EAClC,IAAI,CAACgiG,SAAS,CAAC,CAAC,EAChB,UAACtzG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAEi8B,UAAU;QAAA,OAClB3iC,MAAI,CAACglI,eAAe,CAAC3zG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAEi8B,UAAU,EAAEjkB,gBAAgB,CAAC;MAAA,GAC7D,IAAI,CAAC6lH,2BAA2B,EAChC,IAAI,CAACE,wBAAwB,EAC7B,IAAI,CAAC/C,WACP,CAAC;MACDuD,OAAO,CAACrzI,GAAG,GAAGA,GAAG;MAEjB,IAAIohF,IAAI,EAAE;QACRiyD,OAAO,CAAChkC,WAAW,GAAGjuB,IAAI;QAC1BiyD,OAAO,CAACxjC,mBAAmB,CAAC,CAAC;QAC7BhtF,KAAK,CAACC,OAAO,CAAC6mH,YAAY,EAAE0J,OAAO,CAAC;MACtC,CAAC,MAAM;QACLxwH,KAAK,CAACzT,GAAG,CAACu6H,YAAY,EAAE0J,OAAO,CAAC;MAClC;MACA,OAAOA,OAAO;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAArzI,GAAA;IAAAC,KAAA,EASA,SAAAmzI,gBAAgB3zG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAEi8B,UAAU,EAAEryB,UAAU,EAAE;MAC/C,IAAI0iE,IAAI,GAAG,IAAI;MACf,IAAMuoD,YAAY,GAAG,IAAAnO,oBAAS,EAAC/7F,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,CAAC;MACvC,IAAM9U,GAAG,GAAG,IAAI,CAAC2vG,MAAM,CAAC,CAAC;MACzB,IAAI,CAAC,IAAI,CAACigC,SAAS,CAAChV,WAAW,CAAC+O,YAAY,CAAC,EAAE;QAC7CvoD,IAAI,GAAG,IAAI,CAAC8xD,WAAW,CAACzzG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAEi8B,UAAU,EAAEryB,UAAU,EAAE1e,GAAG,CAAC;QAC7D,IAAI,CAAC4vI,SAAS,CAACxgI,GAAG,CAACu6H,YAAY,EAAEvoD,IAAI,CAAC;MACxC,CAAC,MAAM;QACLA,IAAI,GAAG,IAAI,CAACwuD,SAAS,CAACrhI,GAAG,CAACo7H,YAAY,CAAC;QACvC,IAAIvoD,IAAI,CAACphF,GAAG,IAAIA,GAAG,EAAE;UACnB;UACA;UACA;UACA,IAAMqvG,WAAW,GAAGjuB,IAAI;UACxBA,IAAI,GAAG,IAAI,CAAC8xD,WAAW,CAACzzG,CAAC,EAAE5qB,CAAC,EAAEC,CAAC,EAAEi8B,UAAU,EAAEryB,UAAU,EAAE1e,GAAG,CAAC;;UAE7D;UACA,IAAIqvG,WAAW,CAAC59D,QAAQ,CAAC,CAAC,IAAIi+D,kBAAS,CAACvxE,IAAI,EAAE;YAC5C;YACAijD,IAAI,CAACiuB,WAAW,GAAGA,WAAW,CAACA,WAAW;UAC5C,CAAC,MAAM;YACLjuB,IAAI,CAACiuB,WAAW,GAAGA,WAAW;UAChC;UACAjuB,IAAI,CAACyuB,mBAAmB,CAAC,CAAC;UAC1B,IAAI,CAAC+/B,SAAS,CAAC9sH,OAAO,CAAC6mH,YAAY,EAAEvoD,IAAI,CAAC;QAC5C;MACF;MACA,OAAOA,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAphF,GAAA;IAAAC,KAAA,EAKA,SAAAqzI,2BAA2B/vF,MAAM,EAAE;MACjC,IAAI,IAAI,CAACsvF,wBAAwB,IAAItvF,MAAM,EAAE;QAC3C;MACF;MACA,IAAI,CAACsvF,wBAAwB,GAAGtvF,MAAM;MACtC,KAAK,IAAMpwC,EAAE,IAAI,IAAI,CAACs/H,sBAAsB,EAAE;QAC5C,IAAI,CAACA,sBAAsB,CAACt/H,EAAE,CAAC,CAAC7N,KAAK,CAAC,CAAC;MACzC;MACA,IAAI,CAACwH,OAAO,CAAC,CAAC;IAChB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAXE;IAAA9M,GAAA;IAAAC,KAAA,EAYA,SAAAszI,yBAAyB70H,UAAU,EAAE80H,QAAQ,EAAE;MAC7C,IAAMC,IAAI,GAAG,IAAAnjH,SAAa,EAAC5R,UAAU,CAAC;MACtC,IAAI+0H,IAAI,EAAE;QACR,IAAMR,OAAO,GAAG,IAAAzlI,YAAM,EAACimI,IAAI,CAAC;QAC5B,IAAI,EAAER,OAAO,IAAI,IAAI,CAACP,qBAAqB,CAAC,EAAE;UAC5C,IAAI,CAACA,qBAAqB,CAACO,OAAO,CAAC,GAAGO,QAAQ;QAChD;MACF;IACF;EAAC;IAAAxzI,GAAA;IAAAC,KAAA,EAED,SAAAqF,MAAA,EAAQ;MACNg1B,IAAA,CAAA3yB,eAAA,CAAA0qI,SAAA,CAAA5tI,SAAA,kBAAAE,IAAA;MACA,KAAK,IAAMwO,EAAE,IAAI,IAAI,CAACs/H,sBAAsB,EAAE;QAC5C,IAAI,CAACA,sBAAsB,CAACt/H,EAAE,CAAC,CAAC7N,KAAK,CAAC,CAAC;MACzC;IACF;EAAC;AAAA,EA5WqBksI,iBAAO;AA+W/B;AACA;AACA;AACA;AACA,SAASe,uBAAuBA,CAACmB,SAAS,EAAE5gG,GAAG,EAAE;EAC/C,gDAAkD4gG,SAAS,CAACpiG,QAAQ,CAAC,CAAC,CAAEwB,GAAG,GACzEA,GAAG;AACP;AAAC,IAAAzyC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc8xI,SAAS;;;;;;;;ACtbxB,IAAAsB,WAAA,GAAAhuI,sBAAA,CAAA7B,OAAA;AACA,IAAAyrI,SAAA,GAAAzrI,OAAA;AAA+D,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAQ,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KAL/D;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA,IAiBM8qI,GAAG,0BAAAC,UAAA;EACP;AACF;AACA;EACE,SAAAD,IAAYxjI,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAAi0I,GAAA;IACnBxjI,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IAEvB,IAAMsO,UAAU,GACdtO,OAAO,CAACsO,UAAU,KAAKlU,SAAS,GAAG4F,OAAO,CAACsO,UAAU,GAAG,WAAW;IAErE,IAAMyC,QAAQ,GACZ/Q,OAAO,CAAC+Q,QAAQ,KAAK3W,SAAS,GAC1B4F,OAAO,CAAC+Q,QAAQ,GAChB,IAAAguH,mBAAS,EAAC;MACRh3H,MAAM,EAAE,IAAA62H,8BAAoB,EAACtwH,UAAU,CAAC;MACxCwtC,aAAa,EAAE97C,OAAO,CAAC87C,aAAa;MACpCG,OAAO,EAAEj8C,OAAO,CAACi8C,OAAO;MACxBD,OAAO,EAAEh8C,OAAO,CAACg8C,OAAO;MACxB07E,QAAQ,EAAE13H,OAAO,CAAC03H;IACpB,CAAC,CAAC;IAER7+H,KAAA,GAAAvB,UAAA,OAAAksI,GAAA,GAAM;MACJl2E,YAAY,EAAEttD,OAAO,CAACstD,YAAY;MAClCtxB,SAAS,EAAEh8B,OAAO,CAACg8B,SAAS;MAC5B0H,WAAW,EAAE1jC,OAAO,CAAC0jC,WAAW;MAChC+D,WAAW,EAAEznC,OAAO,CAACynC,WAAW;MAChC63F,MAAM,EAAEt/H,OAAO,CAACs/H,MAAM;MACtBhxH,UAAU,EAAEA,UAAU;MACtBk0H,0BAA0B,EAAExiI,OAAO,CAACwiI,0BAA0B;MAC9DzxH,QAAQ,EAAEA,QAAQ;MAClBmvF,gBAAgB,EAAElgG,OAAO,CAACkgG,gBAAgB;MAC1Co3B,cAAc,EAAEt3H,OAAO,CAACs3H,cAAc;MACtCiK,eAAe,EAAEvhI,OAAO,CAACuhI,eAAe;MACxCxxC,GAAG,EAAE/vF,OAAO,CAAC+vF,GAAG;MAChB8wC,IAAI,EAAE7gI,OAAO,CAAC6gI,IAAI;MAClBxyH,KAAK,EAAErO,OAAO,CAACqO,KAAK,KAAKjU,SAAS,GAAG4F,OAAO,CAACqO,KAAK,GAAG,IAAI;MACzD8wF,UAAU,EAAEn/F,OAAO,CAACm/F,UAAU;MAC9B3Q,uBAAuB,EAAExuF,OAAO,CAACwuF,uBAAuB;MACxDupC,UAAU,EAAE/3H,OAAO,CAAC+3H;IACtB,CAAC;;IAED;AACJ;AACA;AACA;IACIl/H,KAAA,CAAKu8H,OAAO,GAAGp1H,OAAO,CAACsoF,MAAM,KAAKluF,SAAS,GAAG4F,OAAO,CAACsoF,MAAM,GAAG,CAAC;IAAC,OAAAzvF,KAAA;EACnE;;EAEA;AACF;AACA;EAFER,SAAA,CAAAmrI,GAAA,EAAAC,UAAA;EAAA,OAAA9zI,YAAA,CAAA6zI,GAAA;IAAA5zI,GAAA;IAAAC,KAAA,EAGA,SAAA8yI,UAAA,EAAY;MACV,OAAO,IAAI,CAACvN,OAAO;IACrB;EAAC;AAAA,EArDe6M,mBAAS;AAAA,IAAAhyI,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAwDZqzI,GAAG;;;;;;;;AC5HlB,IAAAE,KAAA,GAAAnuI,sBAAA,CAAA7B,OAAA;AAA2B,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAO,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAxH,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAmB,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAQ,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KAJ3B;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMirI,WAAW,GAAAzzI,OAAA,CAAAyzI,WAAA,GACtB,SAAS,GACT,sFAAsF,GACtF,eAAe;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKMC,GAAG,0BAAAC,IAAA;EACP;AACF;AACA;EACE,SAAAD,IAAY5jI,OAAO,EAAE;IAAAzQ,eAAA,OAAAq0I,GAAA;IACnB5jI,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IAEvB,IAAIstD,YAAY;IAChB,IAAIttD,OAAO,CAACstD,YAAY,KAAKlzD,SAAS,EAAE;MACtCkzD,YAAY,GAAGttD,OAAO,CAACstD,YAAY;IACrC,CAAC,MAAM;MACLA,YAAY,GAAG,CAACq2E,WAAW,CAAC;IAC9B;IAEA,IAAMjgG,WAAW,GACf1jC,OAAO,CAAC0jC,WAAW,KAAKtpC,SAAS,GAAG4F,OAAO,CAAC0jC,WAAW,GAAG,WAAW;IAEvE,IAAMqsD,GAAG,GACP/vF,OAAO,CAAC+vF,GAAG,KAAK31F,SAAS,GACrB4F,OAAO,CAAC+vF,GAAG,GACX,gDAAgD;IAAC,OAAAz4F,UAAA,OAAAssI,GAAA,GAEjD;MACJt2E,YAAY,EAAEA,YAAY;MAC1BkhC,uBAAuB,EAAE,KAAK;MAC9BxyD,SAAS,EAAEh8B,OAAO,CAACg8B,SAAS;MAC5B0H,WAAW,EAAEA,WAAW;MACxB+D,WAAW,EAAEznC,OAAO,CAACynC,WAAW;MAChCwU,OAAO,EAAEj8C,OAAO,CAACi8C,OAAO,KAAK7hD,SAAS,GAAG4F,OAAO,CAACi8C,OAAO,GAAG,EAAE;MAC7DqjF,MAAM,EAAEt/H,OAAO,CAACs/H,MAAM,KAAKllI,SAAS,GAAG4F,OAAO,CAACs/H,MAAM,GAAG,IAAI;MAC5DkD,0BAA0B,EAAExiI,OAAO,CAACwiI,0BAA0B;MAC9DtiC,gBAAgB,EAAElgG,OAAO,CAACkgG,gBAAgB;MAC1Cf,UAAU,EAAEn/F,OAAO,CAACm/F,UAAU;MAC9BpP,GAAG,EAAEA,GAAG;MACR1hF,KAAK,EAAErO,OAAO,CAACqO,KAAK;MACpB0pH,UAAU,EAAE/3H,OAAO,CAAC+3H;IACtB,CAAC;EACH;EAAC1/H,SAAA,CAAAurI,GAAA,EAAAC,IAAA;EAAA,OAAAl0I,YAAA,CAAAi0I,GAAA;AAAA,EArCeJ,aAAG;AAAA,IAAAvzI,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAwCNyzI,GAAG;;;;;;;;ACzFlB,IAAAn3B,SAAA,GAAAl3G,sBAAA,CAAA7B,OAAA;AACA,IAAAsI,UAAA,GAAAzG,sBAAA,CAAA7B,OAAA;AACA,IAAAksH,YAAA,GAAArqH,sBAAA,CAAA7B,OAAA;AACA,IAAA45C,IAAA,GAAA55C,OAAA;AACA,IAAAuI,OAAA,GAAAvI,OAAA;AACA,IAAAuvC,IAAA,GAAAvvC,OAAA;AAAsC,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAg6D,mBAAAr+D,GAAA,WAAAs+D,kBAAA,CAAAt+D,GAAA,KAAAu+D,gBAAA,CAAAv+D,GAAA,KAAA0V,2BAAA,CAAA1V,GAAA,KAAAw+D,kBAAA;AAAA,SAAAA,mBAAA,cAAA75D,SAAA;AAAA,SAAA+Q,4BAAArR,CAAA,EAAAuR,MAAA,SAAAvR,CAAA,qBAAAA,CAAA,sBAAAwR,iBAAA,CAAAxR,CAAA,EAAAuR,MAAA,OAAA1V,CAAA,GAAAgF,MAAA,CAAArC,SAAA,CAAAwR,QAAA,CAAAtR,IAAA,CAAAsB,CAAA,EAAAvB,KAAA,aAAA5C,CAAA,iBAAAmE,CAAA,CAAAG,WAAA,EAAAtE,CAAA,GAAAmE,CAAA,CAAAG,WAAA,CAAAgN,IAAA,MAAAtR,CAAA,cAAAA,CAAA,mBAAAU,KAAA,CAAAkV,IAAA,CAAAzR,CAAA,OAAAnE,CAAA,+DAAA6V,IAAA,CAAA7V,CAAA,UAAA2V,iBAAA,CAAAxR,CAAA,EAAAuR,MAAA;AAAA,SAAA2oD,iBAAAE,IAAA,eAAAn6D,MAAA,oBAAAm6D,IAAA,CAAAn6D,MAAA,CAAAC,QAAA,aAAAk6D,IAAA,+BAAA79D,KAAA,CAAAkV,IAAA,CAAA2oD,IAAA;AAAA,SAAAH,mBAAAt+D,GAAA,QAAAY,KAAA,CAAAC,OAAA,CAAAb,GAAA,UAAA6V,iBAAA,CAAA7V,GAAA;AAAA,SAAA6V,kBAAA7V,GAAA,EAAAqL,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAArL,GAAA,CAAAN,MAAA,EAAA2L,GAAA,GAAArL,GAAA,CAAAN,MAAA,WAAAS,CAAA,MAAAiB,IAAA,OAAAR,KAAA,CAAAyK,GAAA,GAAAlL,CAAA,GAAAkL,GAAA,EAAAlL,CAAA,IAAAiB,IAAA,CAAAjB,CAAA,IAAAH,GAAA,CAAAG,CAAA,UAAAiB,IAAA;AAAA,SAAArD,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAmzB,KAAA,eAAAxyB,OAAA,oBAAAA,OAAA,CAAAyG,GAAA,IAAA+rB,IAAA,GAAAxyB,OAAA,CAAAyG,GAAA,CAAAhG,IAAA,aAAA+xB,IAAA,YAAAA,KAAAx6B,MAAA,EAAA0F,QAAA,EAAA+0B,QAAA,QAAAC,IAAA,GAAAC,cAAA,CAAA36B,MAAA,EAAA0F,QAAA,QAAAg1B,IAAA,cAAAE,IAAA,GAAA5zB,MAAA,CAAA6zB,wBAAA,CAAAH,IAAA,EAAAh1B,QAAA,OAAAk1B,IAAA,CAAAnsB,GAAA,WAAAmsB,IAAA,CAAAnsB,GAAA,CAAA5J,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAxB,MAAA,GAAAy6B,QAAA,YAAAG,IAAA,CAAAz6B,KAAA,cAAAq6B,IAAA,CAAAx1B,KAAA,OAAAF,SAAA;AAAA,SAAA61B,eAAAl1B,MAAA,EAAAC,QAAA,YAAAsB,MAAA,CAAArC,SAAA,CAAA+J,cAAA,CAAA7J,IAAA,CAAAY,MAAA,EAAAC,QAAA,KAAAD,MAAA,GAAAoC,eAAA,CAAApC,MAAA,OAAAA,MAAA,2BAAAA,MAAA;AAAA,SAAAoC,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KARtC;AACA;AACA;AAQA,IAAMorI,MAAM,GAAG,CACb,kBAAkB,EAClB,wBAAwB,EACxB,oBAAoB,CACrB;;AAED;AACA;AACA;AACA,IAAMC,mBAAmB,GAAG;EAC1B;AACF;AACA;AACA;AACA;EACEC,eAAe,EAAE,iBAAiB;EAElC;AACF;AACA;AACA;AACA;EACEC,eAAe,EAAE;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA,IAeMC,UAAU,0BAAAv0B,QAAA;EACd;AACF;AACA;EACE,SAAAu0B,WAAYlkI,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAA20I,UAAA;IACnBlkI,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhCnH,KAAA,GAAAvB,UAAA,OAAA4sI,UAAA,GAAM;MACJtkI,OAAO,EAAEy+B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACtC5uC,MAAM,EAAEsQ,OAAO,CAACtQ;IAClB,CAAC;;IAED;AACJ;AACA;IACImJ,KAAA,CAAKuD,EAAE;;IAEP;AACJ;AACA;IACIvD,KAAA,CAAK6C,IAAI;;IAET;AACJ;AACA;IACI7C,KAAA,CAAK0D,EAAE;;IAEP;AACJ;AACA;AACA;IACI1D,KAAA,CAAKsrI,KAAK,GAAGnkI,OAAO,CAAC1F,IAAI,KAAKF,SAAS,GAAG4F,OAAO,CAAC1F,IAAI,GAAG,KAAK;;IAE9D;AACJ;AACA;AACA;IACIzB,KAAA,CAAKurI,OAAO,GAAGpkI,OAAO,CAACb,MAAM;;IAE7B;AACJ;AACA;AACA;IACItG,KAAA,CAAKwrI,eAAe,GAAG,KAAK;;IAE5B;AACJ;AACA;IACIxrI,KAAA,CAAKyrI,2BAA2B,GAAGzrI,KAAA,CAAK0rI,sBAAsB,CAACpsI,IAAI,CAAAU,KAAK,CAAC;;IAEzE;AACJ;AACA;AACA;IACIA,KAAA,CAAK2rI,aAAa,GAChBxkI,OAAO,CAACm8C,SAAS,KAAK/hD,SAAS,GAAG4F,OAAO,CAACm8C,SAAS,GAAG,gBAAgB;;IAExE;AACJ;AACA;AACA;IACItjD,KAAA,CAAK4rI,kBAAkB,GAAG,EAAE;;IAE5B;AACJ;AACA;AACA;IACI5rI,KAAA,CAAK6rI,gBAAgB,GACnB1kI,OAAO,CAAC2kI,eAAe,KAAKvqI,SAAS,GACjC4F,OAAO,CAAC2kI,eAAe,CAAC5vH,KAAK,CAAC,GAAG,CAAC,GAClC,CAAClc,KAAA,CAAK2rI,aAAa,GAAG,OAAO,CAAC;;IAEpC;AACJ;AACA;AACA;IACI3rI,KAAA,CAAK+rI,kBAAkB,GACrB5kI,OAAO,CAAC6kI,iBAAiB,KAAKzqI,SAAS,GACnC4F,OAAO,CAAC6kI,iBAAiB,CAAC9vH,KAAK,CAAC,GAAG,CAAC,GACpC,CAAClc,KAAA,CAAK2rI,aAAa,GAAG,QAAQ,CAAC;IAErC,IAAMxyF,KAAK,GAAGhyC,OAAO,CAACgyC,KAAK,KAAK53C,SAAS,GAAG4F,OAAO,CAACgyC,KAAK,GAAG,QAAQ;;IAEpE;AACJ;AACA;AACA;IACIn5C,KAAA,CAAKisI,UAAU,GACb,OAAO9yF,KAAK,KAAK,QAAQ,GAAG3T,QAAQ,CAAC80E,cAAc,CAACnhE,KAAK,CAAC,GAAGA,KAAK;IAEpE,IAAM+yF,WAAW,GACf/kI,OAAO,CAAC+kI,WAAW,KAAK3qI,SAAS,GAAG4F,OAAO,CAAC+kI,WAAW,GAAG,MAAQ;;IAEpE;AACJ;AACA;AACA;IACIlsI,KAAA,CAAKmsI,gBAAgB,GACnB,OAAOD,WAAW,KAAK,QAAQ,GAC3B1mG,QAAQ,CAAC80E,cAAc,CAAC4xB,WAAW,CAAC,GACpCA,WAAW;IAEjB,IAAM50B,QAAQ,GAAGnwG,OAAO,CAACmwG,QAAQ,GAAGnwG,OAAO,CAACmwG,QAAQ,GAAG,oBAAoB;;IAE3E;AACJ;AACA;AACA;IACIt3G,KAAA,CAAKosI,OAAO,GAAG5mG,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CzlC,KAAA,CAAKosI,OAAO,CAACp0B,KAAK,GAAGV,QAAQ;IAC7Bt3G,KAAA,CAAKosI,OAAO,CAACr0B,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;IAC3C/3G,KAAA,CAAKosI,OAAO,CAAC1kG,WAAW,CAAC1nC,KAAA,CAAKisI,UAAU,CAAC;IACzCjsI,KAAA,CAAKosI,OAAO,CAAC/rI,gBAAgB,CAC3ByD,kBAAS,CAAC/B,KAAK,EACf/B,KAAA,CAAKi4G,YAAY,CAAC34G,IAAI,CAAAU,KAAK,CAAC,EAC5B,KACF,CAAC;IACDA,KAAA,CAAKqsI,aAAa,CAACrsI,KAAA,CAAKosI,OAAO,EAAEpsI,KAAA,CAAKwrI,eAAe,CAAC;IAEtDxrI,KAAA,CAAK+G,OAAO,CAACu8C,SAAS,MAAAv9C,MAAA,CAAM/F,KAAA,CAAK2rI,aAAa,OAAA5lI,MAAA,CAAI4tC,uBAAkB,OAAA5tC,MAAA,CAAI8tC,kBAAa,CAAE;IACvF7zC,KAAA,CAAK+G,OAAO,CAAC2gC,WAAW,CAAC1nC,KAAA,CAAKosI,OAAO,CAAC;IAAC,OAAApsI,KAAA;EACzC;;EAEA;AACF;AACA;AACA;EAHER,SAAA,CAAA6rI,UAAA,EAAAv0B,QAAA;EAAA,OAAAhgH,YAAA,CAAAu0I,UAAA;IAAAt0I,GAAA;IAAAC,KAAA,EAIA,SAAAihH,aAAar3G,KAAK,EAAE;MAClBA,KAAK,CAAC3J,cAAc,CAAC,CAAC;MACtB,IAAI,CAACq1I,iBAAiB,CAAC,CAAC;IAC1B;;IAEA;AACF;AACA;EAFE;IAAAv1I,GAAA;IAAAC,KAAA,EAGA,SAAAs1I,kBAAA,EAAoB;MAClB,IAAM9+H,GAAG,GAAG,IAAI,CAAC47F,MAAM,CAAC,CAAC;MACzB,IAAI,CAAC57F,GAAG,EAAE;QACR;MACF;MACA,IAAMuhG,GAAG,GAAGvhG,GAAG,CAACwhG,gBAAgB,CAAC,CAAC;MAClC,IAAI,CAACu9B,qBAAqB,CAACx9B,GAAG,CAAC,EAAE;QAC/B;MACF;MACA,IAAIy9B,YAAY,CAACz9B,GAAG,CAAC,EAAE;QACrB09B,cAAc,CAAC19B,GAAG,CAAC;MACrB,CAAC,MAAM;QACL,IAAIhoG,OAAO;QACX,IAAI,IAAI,CAACwkI,OAAO,EAAE;UAChBxkI,OAAO,GACL,OAAO,IAAI,CAACwkI,OAAO,KAAK,QAAQ,GAC5Bx8B,GAAG,CAAC4E,cAAc,CAAC,IAAI,CAAC43B,OAAO,CAAC,GAChC,IAAI,CAACA,OAAO;QACpB,CAAC,MAAM;UACLxkI,OAAO,GAAGyG,GAAG,CAACowG,gBAAgB,CAAC,CAAC;QAClC;QACA,IAAI,IAAI,CAAC0tB,KAAK,EAAE;UACdoB,yBAAyB,CAAC3lI,OAAO,CAAC;QACpC,CAAC,MAAM;UACL4lI,iBAAiB,CAAC5lI,OAAO,CAAC;QAC5B;MACF;IACF;;IAEA;AACF;AACA;EAFE;IAAAhQ,GAAA;IAAAC,KAAA,EAGA,SAAA41I,wBAAA,EAA0B;MACxB,IAAMp/H,GAAG,GAAG,IAAI,CAAC47F,MAAM,CAAC,CAAC;MACzB,IAAI,CAAC57F,GAAG,EAAE;QACR;MACF;MACA,IAAMq/H,eAAe,GAAG,IAAI,CAACrB,eAAe;MAC5C,IAAI,CAACA,eAAe,GAAGgB,YAAY,CAACh/H,GAAG,CAACwhG,gBAAgB,CAAC,CAAC,CAAC;MAC3D,IAAI69B,eAAe,KAAK,IAAI,CAACrB,eAAe,EAAE;QAC5C,IAAI,CAACa,aAAa,CAAC,IAAI,CAACD,OAAO,EAAE,IAAI,CAACZ,eAAe,CAAC;QACtD,IAAI,IAAI,CAACA,eAAe,EAAE;UACxB,IAAA/kG,gBAAW,EAAC,IAAI,CAAC0lG,gBAAgB,EAAE,IAAI,CAACF,UAAU,CAAC;UACnD,IAAI,CAACtrI,aAAa,CAACuqI,mBAAmB,CAACC,eAAe,CAAC;QACzD,CAAC,MAAM;UACL,IAAA1kG,gBAAW,EAAC,IAAI,CAACwlG,UAAU,EAAE,IAAI,CAACE,gBAAgB,CAAC;UACnD,IAAI,CAACxrI,aAAa,CAACuqI,mBAAmB,CAACE,eAAe,CAAC;QACzD;QACA59H,GAAG,CAAC47G,UAAU,CAAC,CAAC;MAClB;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAryH,GAAA;IAAAC,KAAA,EAKA,SAAAq1I,cAActlI,OAAO,EAAE+lI,UAAU,EAAE;MACjC,IAAIA,UAAU,EAAE;QAAA,IAAAC,kBAAA,EAAAC,mBAAA;QACd,CAAAD,kBAAA,GAAAhmI,OAAO,CAACkyG,SAAS,EAACx/G,MAAM,CAAAoC,KAAA,CAAAkxI,kBAAA,EAAA/1E,kBAAA,CAAI,IAAI,CAAC+0E,kBAAkB,EAAC;QACpD,CAAAiB,mBAAA,GAAAjmI,OAAO,CAACkyG,SAAS,EAACn/F,GAAG,CAAAje,KAAA,CAAAmxI,mBAAA,EAAAh2E,kBAAA,CAAI,IAAI,CAAC60E,gBAAgB,EAAC;MACjD,CAAC,MAAM;QAAA,IAAAoB,mBAAA,EAAAC,mBAAA;QACL,CAAAD,mBAAA,GAAAlmI,OAAO,CAACkyG,SAAS,EAACx/G,MAAM,CAAAoC,KAAA,CAAAoxI,mBAAA,EAAAj2E,kBAAA,CAAI,IAAI,CAAC60E,gBAAgB,EAAC;QAClD,CAAAqB,mBAAA,GAAAnmI,OAAO,CAACkyG,SAAS,EAACn/F,GAAG,CAAAje,KAAA,CAAAqxI,mBAAA,EAAAl2E,kBAAA,CAAI,IAAI,CAAC+0E,kBAAkB,EAAC;MACnD;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAh1I,GAAA;IAAAC,KAAA,EAQA,SAAAo8D,OAAO5lD,GAAG,EAAE;MACV,IAAM2/H,MAAM,GAAG,IAAI,CAAC/jC,MAAM,CAAC,CAAC;MAC5B,IAAI+jC,MAAM,EAAE;QACVA,MAAM,CAACjnI,oBAAoB,CACzB2jH,oBAAW,CAACha,MAAM,EAClB,IAAI,CAAC47B,2BACP,CAAC;MACH;MAEAp6G,IAAA,CAAA3yB,eAAA,CAAA2sI,UAAA,CAAA7vI,SAAA,mBAAAE,IAAA,OAAa8R,GAAG;MAEhB,IAAI,CAACk+H,sBAAsB,CAAC,CAAC;MAC7B,IAAIl+H,GAAG,EAAE;QACPA,GAAG,CAACvH,iBAAiB,CACnB4jH,oBAAW,CAACha,MAAM,EAClB,IAAI,CAAC47B,2BACP,CAAC;MACH;IACF;;IAEA;AACF;AACA;EAFE;IAAA10I,GAAA;IAAAC,KAAA,EAGA,SAAA00I,uBAAA,EAAyB;MACvB,IAAMnrI,SAAS,GAAG,IAAI,CAACqrI,kBAAkB;MACzC,KAAK,IAAI9yI,CAAC,GAAG,CAAC,EAAEoI,EAAE,GAAGX,SAAS,CAAClI,MAAM,EAAES,CAAC,GAAGoI,EAAE,EAAE,EAAEpI,CAAC,EAAE;QAClD,IAAAmK,qBAAa,EAAC1C,SAAS,CAACzH,CAAC,CAAC,CAAC;MAC7B;MACAyH,SAAS,CAAClI,MAAM,GAAG,CAAC;MAEpB,IAAMmV,GAAG,GAAG,IAAI,CAAC47F,MAAM,CAAC,CAAC;MACzB,IAAI57F,GAAG,EAAE;QACP,IAAMuhG,GAAG,GAAGvhG,GAAG,CAACwhG,gBAAgB,CAAC,CAAC;QAClC,IAAIu9B,qBAAqB,CAACx9B,GAAG,CAAC,EAAE;UAC9B,IAAI,CAAChoG,OAAO,CAACkyG,SAAS,CAACx/G,MAAM,CAACm6C,sBAAiB,CAAC;QAClD,CAAC,MAAM;UACL,IAAI,CAAC7sC,OAAO,CAACkyG,SAAS,CAACn/F,GAAG,CAAC85B,sBAAiB,CAAC;QAC/C;QAEA,KAAK,IAAI96C,EAAC,GAAG,CAAC,EAAEoI,GAAE,GAAG+pI,MAAM,CAAC5yI,MAAM,EAAES,EAAC,GAAGoI,GAAE,EAAE,EAAEpI,EAAC,EAAE;UAC/CyH,SAAS,CAACG,IAAI,CACZ,IAAAiC,cAAM,EAACosG,GAAG,EAAEk8B,MAAM,CAACnyI,EAAC,CAAC,EAAE,IAAI,CAAC8zI,uBAAuB,EAAE,IAAI,CAC3D,CAAC;QACH;QACA,IAAI,CAACA,uBAAuB,CAAC,CAAC;MAChC;IACF;EAAC;AAAA,EAhQsBx5B,iBAAO;AAmQhC;AACA;AACA;AACA;AACA,SAASm5B,qBAAqBA,CAACx9B,GAAG,EAAE;EAClC,IAAMt3D,IAAI,GAAGs3D,GAAG,CAACt3D,IAAI;EACrB,OAAO,CAAC,EACNA,IAAI,CAAC,yBAAyB,CAAC,IAC9BA,IAAI,CAAC21F,iBAAiB,IAAIr+B,GAAG,CAACs+B,iBAAkB,CAClD;AACH;;AAEA;AACA;AACA;AACA;AACA,SAASb,YAAYA,CAACz9B,GAAG,EAAE;EACzB,OAAO,CAAC,EAAEA,GAAG,CAAC,oBAAoB,CAAC,IAAIA,GAAG,CAACu+B,iBAAiB,CAAC;AAC/D;;AAEA;AACA;AACA;AACA;AACA,SAASX,iBAAiBA,CAAC5lI,OAAO,EAAE;EAClC,IAAIA,OAAO,CAACqmI,iBAAiB,EAAE;IAC7BrmI,OAAO,CAACqmI,iBAAiB,CAAC,CAAC;EAC7B,CAAC,MAAM,IAAIrmI,OAAO,CAAC,yBAAyB,CAAC,EAAE;IAC7CA,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC;EACtC;AACF;;AAEA;AACA;AACA;AACA;AACA,SAAS2lI,yBAAyBA,CAAC3lI,OAAO,EAAE;EAC1C,IAAIA,OAAO,CAAC,yBAAyB,CAAC,EAAE;IACtCA,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC;EACtC,CAAC,MAAM;IACL4lI,iBAAiB,CAAC5lI,OAAO,CAAC;EAC5B;AACF;;AAEA;AACA;AACA;AACA;AACA,SAAS0lI,cAAcA,CAAC19B,GAAG,EAAE;EAC3B,IAAIA,GAAG,CAACw+B,cAAc,EAAE;IACtBx+B,GAAG,CAACw+B,cAAc,CAAC,CAAC;EACtB,CAAC,MAAM,IAAIx+B,GAAG,CAAC,sBAAsB,CAAC,EAAE;IACtCA,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC;EAC/B;AACF;AAAC,IAAA33G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc+zI,UAAU;;;;;;;;ACvYzB,IAAAz3B,SAAA,GAAAl3G,sBAAA,CAAA7B,OAAA;AACA,IAAAsI,UAAA,GAAAzG,sBAAA,CAAA7B,OAAA;AACA,IAAAkrB,KAAA,GAAAlrB,OAAA;AAMA,IAAAuI,OAAA,GAAAvI,OAAA;AACA,IAAAkmB,WAAA,GAAAlmB,OAAA;AAAuC,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAmzB,KAAA,eAAAxyB,OAAA,oBAAAA,OAAA,CAAAyG,GAAA,IAAA+rB,IAAA,GAAAxyB,OAAA,CAAAyG,GAAA,CAAAhG,IAAA,aAAA+xB,IAAA,YAAAA,KAAAx6B,MAAA,EAAA0F,QAAA,EAAA+0B,QAAA,QAAAC,IAAA,GAAAC,cAAA,CAAA36B,MAAA,EAAA0F,QAAA,QAAAg1B,IAAA,cAAAE,IAAA,GAAA5zB,MAAA,CAAA6zB,wBAAA,CAAAH,IAAA,EAAAh1B,QAAA,OAAAk1B,IAAA,CAAAnsB,GAAA,WAAAmsB,IAAA,CAAAnsB,GAAA,CAAA5J,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAxB,MAAA,GAAAy6B,QAAA,YAAAG,IAAA,CAAAz6B,KAAA,cAAAq6B,IAAA,CAAAx1B,KAAA,OAAAF,SAAA;AAAA,SAAA61B,eAAAl1B,MAAA,EAAAC,QAAA,YAAAsB,MAAA,CAAArC,SAAA,CAAA+J,cAAA,CAAA7J,IAAA,CAAAY,MAAA,EAAAC,QAAA,KAAAD,MAAA,GAAAoC,eAAA,CAAApC,MAAA,OAAAA,MAAA,2BAAAA,MAAA;AAAA,SAAAoC,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KAbvC;AACA;AACA;AAaA;AACA;AACA;AACA,IAAMoyB,UAAU,GAAG,YAAY;;AAE/B;AACA;AACA;AACA,IAAMu7G,iBAAiB,GAAG,kBAAkB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,IAYMC,aAAa,0BAAA32B,QAAA;EACjB;AACF;AACA;EACE,SAAA22B,cAAYtmI,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAA+2I,aAAA;IACnBtmI,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhC,IAAMJ,OAAO,GAAGy+B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC7C1+B,OAAO,CAACu8C,SAAS,GACfn8C,OAAO,CAACm8C,SAAS,KAAK/hD,SAAS,GAAG4F,OAAO,CAACm8C,SAAS,GAAG,mBAAmB;IAE3EtjD,KAAA,GAAAvB,UAAA,OAAAgvI,aAAA,GAAM;MACJ1mI,OAAO,EAAEA,OAAO;MAChBuzC,MAAM,EAAEnzC,OAAO,CAACmzC,MAAM;MACtBzjD,MAAM,EAAEsQ,OAAO,CAACtQ;IAClB,CAAC;;IAED;AACJ;AACA;IACImJ,KAAA,CAAKuD,EAAE;;IAEP;AACJ;AACA;IACIvD,KAAA,CAAK6C,IAAI;;IAET;AACJ;AACA;IACI7C,KAAA,CAAK0D,EAAE;IAEP1D,KAAA,CAAKiG,iBAAiB,CAACgsB,UAAU,EAAEjyB,KAAA,CAAK6yB,wBAAwB,CAAC;IAEjE,IAAI1rB,OAAO,CAACumI,gBAAgB,EAAE;MAC5B1tI,KAAA,CAAK2tI,mBAAmB,CAACxmI,OAAO,CAACumI,gBAAgB,CAAC;IACpD;IACA,IAAIvmI,OAAO,CAACsO,UAAU,EAAE;MACtBzV,KAAA,CAAK+yB,aAAa,CAAC5rB,OAAO,CAACsO,UAAU,CAAC;IACxC;;IAEA;AACJ;AACA;AACA;IACIzV,KAAA,CAAK4tI,iBAAiB,GAAGzmI,OAAO,CAAC0mI,WAAW,KAAKtsI,SAAS;;IAE1D;AACJ;AACA;AACA;IACIvB,KAAA,CAAK8tI,YAAY,GAAG9tI,KAAA,CAAK4tI,iBAAiB,GAAGzmI,OAAO,CAAC0mI,WAAW,GAAG,QAAQ;;IAE3E;AACJ;AACA;AACA;IACI7tI,KAAA,CAAK+tI,aAAa,GAAGhnI,OAAO,CAACmwC,SAAS;;IAEtC;AACJ;AACA;AACA;IACIl3C,KAAA,CAAKguI,cAAc,GAAG,IAAI;;IAE1B;AACJ;AACA;AACA;IACIhuI,KAAA,CAAK2yB,UAAU,GAAG,IAAI;;IAEtB;AACJ;AACA;AACA;IACI3yB,KAAA,CAAK41F,MAAM,GAAGzuF,OAAO,CAACqO,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,IAAI;IAAC,OAAAxV,KAAA;EACvD;;EAEA;AACF;AACA;EAFER,SAAA,CAAAiuI,aAAA,EAAA32B,QAAA;EAAA,OAAAhgH,YAAA,CAAA22I,aAAA;IAAA12I,GAAA;IAAAC,KAAA,EAGA,SAAA67B,yBAAA,EAA2B;MACzB,IAAI,CAACF,UAAU,GAAG,IAAI;IACxB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA57B,GAAA;IAAAC,KAAA,EAQA,SAAAi3I,oBAAA,EAAsB;MACpB,OAAO;QACL,IAAI,CAAC3oI,GAAG,CAACkoI,iBAAiB;MAAC;IAE/B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAz2I,GAAA;IAAAC,KAAA,EAOA,SAAAqwB,cAAA,EAAgB;MACd,OAAO;QACL,IAAI,CAAC/hB,GAAG,CAAC2sB,UAAU;MAAC;IAExB;;IAEA;AACF;AACA;AACA;EAHE;IAAAl7B,GAAA;IAAAC,KAAA,EAIA,SAAAk3I,gBAAgBttI,KAAK,EAAE;MACrB,IAAM4M,GAAG,GAAG,IAAI,CAAC47F,MAAM,CAAC,CAAC;MACzB,IAAI,CAAC+kC,WAAW,CAAC3gI,GAAG,CAAC2+F,aAAa,CAACvrG,KAAK,CAAC,CAAC;IAC5C;;IAEA;AACF;AACA;AACA;EAHE;IAAA7J,GAAA;IAAAC,KAAA,EAIA,SAAAo3I,eAAextI,KAAK,EAAE;MACpB,IAAI,CAACutI,WAAW,CAAC,IAAI,CAAC;IACxB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAp3I,GAAA;IAAAC,KAAA,EAQA,SAAAo8D,OAAO5lD,GAAG,EAAE;MACV6jB,IAAA,CAAA3yB,eAAA,CAAA+uI,aAAA,CAAAjyI,SAAA,mBAAAE,IAAA,OAAa8R,GAAG;MAChB,IAAIA,GAAG,EAAE;QACP,IAAMg+G,QAAQ,GAAGh+G,GAAG,CAACs8F,WAAW,CAAC,CAAC;QAClC,IAAI,CAAClgE,YAAY,CAAClpC,IAAI,CACpB,IAAAiC,cAAM,EAAC6oH,QAAQ,EAAE1nH,kBAAS,CAACyoG,WAAW,EAAE,IAAI,CAAC2hC,eAAe,EAAE,IAAI,CACpE,CAAC;QACD,IAAI,IAAI,CAACN,iBAAiB,EAAE;UAC1B,IAAI,CAAChkG,YAAY,CAAClpC,IAAI,CACpB,IAAAiC,cAAM,EAAC6oH,QAAQ,EAAE1nH,kBAAS,CAAC6oG,UAAU,EAAE,IAAI,CAACyhC,cAAc,EAAE,IAAI,CAClE,CAAC;QACH;QACA,IAAI,CAACD,WAAW,CAAC,IAAI,CAAC;MACxB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAp3I,GAAA;IAAAC,KAAA,EAOA,SAAA22I,oBAAoB9vH,MAAM,EAAE;MAC1B,IAAI,CAAC1X,GAAG,CAACqnI,iBAAiB,EAAE3vH,MAAM,CAAC;IACrC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA9mB,GAAA;IAAAC,KAAA,EAOA,SAAA+7B,cAActd,UAAU,EAAE;MACxB,IAAI,CAACtP,GAAG,CAAC8rB,UAAU,EAAE,IAAA5K,SAAa,EAAC5R,UAAU,CAAC,CAAC;IACjD;;IAEA;AACF;AACA;AACA;EAHE;IAAA1e,GAAA;IAAAC,KAAA,EAIA,SAAAm3I,YAAYx6E,KAAK,EAAE;MACjB,IAAI06E,IAAI,GAAG,IAAI,CAACP,YAAY;MAC5B,IAAIn6E,KAAK,IAAI,IAAI,CAACq6E,cAAc,EAAE;QAChC,IAAI,CAAC,IAAI,CAACr7G,UAAU,EAAE;UACpB,IAAMld,UAAU,GAAG,IAAI,CAAC4R,aAAa,CAAC,CAAC;UACvC,IAAI5R,UAAU,EAAE;YACd,IAAI,CAACkd,UAAU,GAAG,IAAA3Q,iCAA2B,EAC3C,IAAI,CAACgsH,cAAc,EACnBv4H,UACF,CAAC;UACH,CAAC,MAAM;YACL,IAAI,CAACkd,UAAU,GAAGrR,uBAAiB;UACrC;QACF;QACA,IAAM9T,GAAG,GAAG,IAAI,CAAC47F,MAAM,CAAC,CAAC;QACzB,IAAMz9F,UAAU,GAAG6B,GAAG,CAAC4yG,8BAA8B,CAACzsD,KAAK,CAAC;QAC5D,IAAIhoD,UAAU,EAAE;UACd,IAAMwY,cAAc,GAAG,IAAAG,uBAAiB,EAAC,CAAC;UAC1C,IAAIH,cAAc,EAAE;YAClB,IAAI,CAACwO,UAAU,GAAG,IAAA3Q,iCAA2B,EAC3C,IAAI,CAACgsH,cAAc,EACnB7pH,cACF,CAAC;UACH;UACA,IAAI,CAACwO,UAAU,CAAChnB,UAAU,EAAEA,UAAU,CAAC;UACvC,IAAI,IAAI,CAACiqF,MAAM,EAAE;YACf,IAAMngF,WAAU,GACd0O,cAAc,IAAI,IAAI,CAACkD,aAAa,CAAC,CAAC,IAAI,IAAI,CAAC2mH,cAAc;YAC/D,IAAAx4H,iBAAK,EAAC7J,UAAU,EAAE8J,WAAU,CAAC;UAC/B;UACA,IAAMi4H,gBAAgB,GAAG,IAAI,CAACO,mBAAmB,CAAC,CAAC;UACnD,IAAIP,gBAAgB,EAAE;YACpBW,IAAI,GAAGX,gBAAgB,CAAC/hI,UAAU,CAAC;UACrC,CAAC,MAAM;YACL0iI,IAAI,GAAG1iI,UAAU,CAACqB,QAAQ,CAAC,CAAC;UAC9B;QACF;MACF;MACA,IAAI,CAAC,IAAI,CAAC+gI,aAAa,IAAIM,IAAI,KAAK,IAAI,CAACN,aAAa,EAAE;QACtD,IAAI,CAAChnI,OAAO,CAACmwC,SAAS,GAAGm3F,IAAI;QAC7B,IAAI,CAACN,aAAa,GAAGM,IAAI;MAC3B;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAt3I,GAAA;IAAAC,KAAA,EAMA,SAAAsjD,OAAOo5D,QAAQ,EAAE;MACf,IAAM3/C,UAAU,GAAG2/C,QAAQ,CAAC3/C,UAAU;MACtC,IAAI,CAACA,UAAU,EAAE;QACf,IAAI,CAACi6E,cAAc,GAAG,IAAI;MAC5B,CAAC,MAAM;QACL,IAAI,IAAI,CAACA,cAAc,IAAIj6E,UAAU,CAAClF,SAAS,CAACp5C,UAAU,EAAE;UAC1D,IAAI,CAACu4H,cAAc,GAAGj6E,UAAU,CAAClF,SAAS,CAACp5C,UAAU;UACrD,IAAI,CAACkd,UAAU,GAAG,IAAI;QACxB;MACF;IACF;EAAC;AAAA,EA/OyBygF,iBAAO;AAAA,IAAAh8G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAkPpBm2I,aAAa;;;;;;;;AChT5B,IAAAj1C,WAAA,GAAA97F,sBAAA,CAAA7B,OAAA;AACA,IAAA+4G,SAAA,GAAAl3G,sBAAA,CAAA7B,OAAA;AACA,IAAAsI,UAAA,GAAAzG,sBAAA,CAAA7B,OAAA;AACA,IAAA2uG,IAAA,GAAA9sG,sBAAA,CAAA7B,OAAA;AACA,IAAAs4G,aAAA,GAAAz2G,sBAAA,CAAA7B,OAAA;AACA,IAAAksH,YAAA,GAAArqH,sBAAA,CAAA7B,OAAA;AACA,IAAA8J,gBAAA,GAAAjI,sBAAA,CAAA7B,OAAA;AACA,IAAAm6H,QAAA,GAAAt4H,sBAAA,CAAA7B,OAAA;AACA,IAAA83D,KAAA,GAAAj2D,sBAAA,CAAA7B,OAAA;AACA,IAAA4sD,aAAA,GAAA/qD,sBAAA,CAAA7B,OAAA;AACA,IAAA45C,IAAA,GAAA55C,OAAA;AACA,IAAA0hB,OAAA,GAAA1hB,OAAA;AAOA,IAAAuI,OAAA,GAAAvI,OAAA;AACA,IAAAu2B,QAAA,GAAAv2B,OAAA;AACA,IAAAuvC,IAAA,GAAAvvC,OAAA;AAAsC,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAmzB,KAAA,eAAAxyB,OAAA,oBAAAA,OAAA,CAAAyG,GAAA,IAAA+rB,IAAA,GAAAxyB,OAAA,CAAAyG,GAAA,CAAAhG,IAAA,aAAA+xB,IAAA,YAAAA,KAAAx6B,MAAA,EAAA0F,QAAA,EAAA+0B,QAAA,QAAAC,IAAA,GAAAC,cAAA,CAAA36B,MAAA,EAAA0F,QAAA,QAAAg1B,IAAA,cAAAE,IAAA,GAAA5zB,MAAA,CAAA6zB,wBAAA,CAAAH,IAAA,EAAAh1B,QAAA,OAAAk1B,IAAA,CAAAnsB,GAAA,WAAAmsB,IAAA,CAAAnsB,GAAA,CAAA5J,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAxB,MAAA,GAAAy6B,QAAA,YAAAG,IAAA,CAAAz6B,KAAA,cAAAq6B,IAAA,CAAAx1B,KAAA,OAAAF,SAAA;AAAA,SAAA61B,eAAAl1B,MAAA,EAAAC,QAAA,YAAAsB,MAAA,CAAArC,SAAA,CAAA+J,cAAA,CAAA7J,IAAA,CAAAY,MAAA,EAAAC,QAAA,KAAAD,MAAA,GAAAoC,eAAA,CAAApC,MAAA,OAAAA,MAAA,2BAAAA,MAAA;AAAA,SAAAoC,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KAvBtC;AACA;AACA;AAuBA;AACA;AACA;AACA;AACA;AACA,IAAMyuI,SAAS,GAAG,IAAI;;AAEtB;AACA;AACA;AACA;AACA;AACA,IAAMC,SAAS,GAAG,GAAG;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMC,WAAW,0BAAA13B,QAAA;EACf;AACF;AACA;EACE,SAAA03B,YAAYrnI,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAA83I,WAAA;IACnBrnI,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhCnH,KAAA,GAAAvB,UAAA,OAAA+vI,WAAA,GAAM;MACJznI,OAAO,EAAEy+B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACtC6U,MAAM,EAAEnzC,OAAO,CAACmzC,MAAM;MACtBzjD,MAAM,EAAEsQ,OAAO,CAACtQ;IAClB,CAAC;;IAED;AACJ;AACA;IACImJ,KAAA,CAAKyuI,2BAA2B,GAAGzuI,KAAA,CAAK0uI,sBAAsB,CAACpvI,IAAI,CAAAU,KAAK,CAAC;;IAEzE;AACJ;AACA;AACA;IACIA,KAAA,CAAKg3G,UAAU,GACb7vG,OAAO,CAAC8vG,SAAS,KAAK11G,SAAS,GAAG4F,OAAO,CAAC8vG,SAAS,GAAG,IAAI;;IAE5D;AACJ;AACA;AACA;IACIj3G,KAAA,CAAKq3G,YAAY,GACflwG,OAAO,CAACiwG,WAAW,KAAK71G,SAAS,GAAG4F,OAAO,CAACiwG,WAAW,GAAG,IAAI;IAEhE,IAAI,CAACp3G,KAAA,CAAKq3G,YAAY,EAAE;MACtBr3G,KAAA,CAAKg3G,UAAU,GAAG,KAAK;IACzB;;IAEA;AACJ;AACA;AACA;IACIh3G,KAAA,CAAK0xC,eAAe,GAClBvqC,OAAO,CAACwqC,cAAc,KAAKpwC,SAAS,GAAG4F,OAAO,CAACwqC,cAAc,GAAG,KAAK;;IAEvE;AACJ;AACA;AACA;IACI3xC,KAAA,CAAK2uI,WAAW,GAAGptI,SAAS;IAE5B,IAAM+hD,SAAS,GACbn8C,OAAO,CAACm8C,SAAS,KAAK/hD,SAAS,GAAG4F,OAAO,CAACm8C,SAAS,GAAG,gBAAgB;IAExE,IAAMg0D,QAAQ,GACZnwG,OAAO,CAACmwG,QAAQ,KAAK/1G,SAAS,GAAG4F,OAAO,CAACmwG,QAAQ,GAAG,cAAc;IAEpE,IAAME,aAAa,GACjBrwG,OAAO,CAACqwG,aAAa,KAAKj2G,SAAS,GAAG4F,OAAO,CAACqwG,aAAa,GAAG,QAAQ;IAExE,IAAI,OAAOA,aAAa,KAAK,QAAQ,EAAE;MACrC;AACN;AACA;AACA;MACMx3G,KAAA,CAAK03G,cAAc,GAAGlyE,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;MACpDzlC,KAAA,CAAK03G,cAAc,CAACC,WAAW,GAAGH,aAAa;IACjD,CAAC,MAAM;MACLx3G,KAAA,CAAK03G,cAAc,GAAGF,aAAa;IACrC;IAEA,IAAMr+D,KAAK,GAAGhyC,OAAO,CAACgyC,KAAK,KAAK53C,SAAS,GAAG4F,OAAO,CAACgyC,KAAK,GAAG,QAAQ;IAEpE,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7B;AACN;AACA;AACA;MACMn5C,KAAA,CAAK43G,MAAM,GAAGpyE,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;MAC5CzlC,KAAA,CAAK43G,MAAM,CAACD,WAAW,GAAGx+D,KAAK;IACjC,CAAC,MAAM;MACLn5C,KAAA,CAAK43G,MAAM,GAAGz+D,KAAK;IACrB;IAEA,IAAM0+D,WAAW,GACf73G,KAAA,CAAKq3G,YAAY,IAAI,CAACr3G,KAAA,CAAKg3G,UAAU,GAAGh3G,KAAA,CAAK03G,cAAc,GAAG13G,KAAA,CAAK43G,MAAM;IAC3E,IAAM/I,MAAM,GAAGrpE,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CopE,MAAM,CAACkJ,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;IACrClJ,MAAM,CAACmJ,KAAK,GAAGV,QAAQ;IACvBzI,MAAM,CAACnnE,WAAW,CAACmwE,WAAW,CAAC;IAE/BhJ,MAAM,CAACxuG,gBAAgB,CACrByD,kBAAS,CAAC/B,KAAK,EACf/B,KAAA,CAAKi4G,YAAY,CAAC34G,IAAI,CAAAU,KAAK,CAAC,EAC5B,KACF,CAAC;;IAED;AACJ;AACA;AACA;IACIA,KAAA,CAAK4uI,SAAS,GAAGppG,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC9CzlC,KAAA,CAAK4uI,SAAS,CAACtrF,SAAS,GAAG,oBAAoB;;IAE/C;AACJ;AACA;AACA;AACA;IACItjD,KAAA,CAAK6uI,KAAK,GAAG1nI,OAAO,CAAC2sD,IAAI;IAEzB,IAAMg7E,KAAK,GAAG,IAAIxnB,YAAG,CAAC;MACpBxzD,IAAI,EAAE3sD,OAAO,CAAC2sD,IAAI;MAClBinD,QAAQ,EAAE,IAAI/zG,mBAAU,CAAC,CAAC;MAC1Bi/G,YAAY,EAAE,IAAIj/G,mBAAU,CAAC;IAC/B,CAAC,CAAC;;IAEF;AACJ;AACA;AACA;IACIhH,KAAA,CAAK+uI,MAAM,GAAGD,KAAK;IAEnB,IAAI3nI,OAAO,CAACqjG,MAAM,EAAE;MAClBrjG,OAAO,CAACqjG,MAAM,CAAC7iG,OAAO,CAAC,UAAUi8C,KAAK,EAAE;QACtCkrF,KAAK,CAACnkB,QAAQ,CAAC/mE,KAAK,CAAC;MACvB,CAAC,CAAC;IACJ;IAEA,IAAMw8B,GAAG,GAAG56C,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACzC26C,GAAG,CAAC98B,SAAS,GAAG,oBAAoB;IACpC88B,GAAG,CAAC12E,KAAK,CAACslI,SAAS,GAAG,YAAY;;IAElC;AACJ;AACA;AACA;IACIhvI,KAAA,CAAKivI,WAAW,GAAG,IAAIrgB,gBAAO,CAAC;MAC7Bh7F,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAChB47F,WAAW,EAAE,eAAe;MAC5BzoH,OAAO,EAAEq5E;IACX,CAAC,CAAC;IACFpgF,KAAA,CAAK+uI,MAAM,CAAClkB,UAAU,CAAC7qH,KAAA,CAAKivI,WAAW,CAAC;IAExC,IAAM/2B,UAAU,GACd50D,SAAS,GACT,GAAG,GACH3P,uBAAkB,GAClB,GAAG,GACHE,kBAAa,IACZ7zC,KAAA,CAAKg3G,UAAU,IAAIh3G,KAAA,CAAKq3G,YAAY,GAAG,GAAG,GAAGvjE,oBAAe,GAAG,EAAE,CAAC,IAClE9zC,KAAA,CAAKq3G,YAAY,GAAG,EAAE,GAAG,mBAAmB,CAAC;IAChD,IAAMtwG,OAAO,GAAG/G,KAAA,CAAK+G,OAAO;IAC5BA,OAAO,CAACu8C,SAAS,GAAG40D,UAAU;IAC9BnxG,OAAO,CAAC2gC,WAAW,CAAC1nC,KAAA,CAAK4uI,SAAS,CAAC;IACnC7nI,OAAO,CAAC2gC,WAAW,CAACmnE,MAAM,CAAC;;IAE3B;;IAEA,IAAMqgC,KAAK,GAAAlvI,KAAO;IAElB,IAAM8qH,OAAO,GAAG9qH,KAAA,CAAKivI,WAAW;IAChC,IAAME,UAAU,GAAGnvI,KAAA,CAAKivI,WAAW,CAACvf,UAAU,CAAC,CAAC;;IAEhD;;IAEA,IAAM0f,2BAA2B,GAAG,SAA9BA,2BAA2BA,CAAaC,aAAa,EAAE;MAC3D,OAAO;QACLhgC,OAAO,EAAEggC,aAAa,CAAChgC,OAAO;QAC9BC,OAAO,EAAE+/B,aAAa,CAAC//B;MACzB,CAAC;IACH,CAAC;IAED,IAAMggC,IAAI,GAAG,SAAPA,IAAIA,CAAa1uI,KAAK,EAAE;MAC5B,IAAMgzB,QAAQ,GAAG,gBAAkBw7G,2BAA2B,CAACxuI,KAAK,CAAE;MACtE,IAAMqO,WAAW,GAAG6/H,KAAK,CAACvjB,0BAA0B,EAClD,yBAA2B33F,QAC7B,CAAC;MAEDk3F,OAAO,CAAC2E,WAAW,CAACxgH,WAAW,CAAC;IAClC,CAAC;IAED,IAAMsgI,SAAS,GAAG,SAAZA,SAASA,CAAa3uI,KAAK,EAAE;MACjC,IAAMqO,WAAW,GAAG6/H,KAAK,CAACvjB,0BAA0B,CAAC3qH,KAAK,CAAC;MAE3DsuI,KAAK,CAAC9lC,MAAM,CAAC,CAAC,CAACn1C,OAAO,CAAC,CAAC,CAACnK,iBAAiB,CAAC76C,WAAW,CAAC;MAEvDi2B,MAAM,CAAC7jC,mBAAmB,CAAC,WAAW,EAAEiuI,IAAI,CAAC;MAC7CpqG,MAAM,CAAC7jC,mBAAmB,CAAC,SAAS,EAAEkuI,SAAS,CAAC;IAClD,CAAC;;IAED;;IAEAJ,UAAU,CAAC9uI,gBAAgB,CAAC,WAAW,EAAE,YAAY;MACnD6kC,MAAM,CAAC7kC,gBAAgB,CAAC,WAAW,EAAEivI,IAAI,CAAC;MAC1CpqG,MAAM,CAAC7kC,gBAAgB,CAAC,SAAS,EAAEkvI,SAAS,CAAC;IAC/C,CAAC,CAAC;IAAC,OAAAvvI,KAAA;EACL;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPER,SAAA,CAAAgvI,WAAA,EAAA13B,QAAA;EAAA,OAAAhgH,YAAA,CAAA03I,WAAA;IAAAz3I,GAAA;IAAAC,KAAA,EAQA,SAAAo8D,OAAO5lD,GAAG,EAAE;MACV,IAAM2/H,MAAM,GAAG,IAAI,CAAC/jC,MAAM,CAAC,CAAC;MAC5B,IAAI57F,GAAG,KAAK2/H,MAAM,EAAE;QAClB;MACF;MACA,IAAIA,MAAM,EAAE;QACV,IAAMqC,OAAO,GAAGrC,MAAM,CAACl5E,OAAO,CAAC,CAAC;QAChC,IAAIu7E,OAAO,EAAE;UACX,IAAI,CAACC,WAAW,CAACD,OAAO,CAAC;QAC3B;QACA,IAAI,CAACT,MAAM,CAACx7B,SAAS,CAAC,IAAI,CAAC;MAC7B;MACAliF,IAAA,CAAA3yB,eAAA,CAAA8vI,WAAA,CAAAhzI,SAAA,mBAAAE,IAAA,OAAa8R,GAAG;MAEhB,IAAIA,GAAG,EAAE;QACP,IAAI,CAACuhI,MAAM,CAACx7B,SAAS,CAAC,IAAI,CAACq7B,SAAS,CAAC;QACrC,IAAI,CAAChlG,YAAY,CAAClpC,IAAI,CACpB,IAAAiC,cAAM,EACJ6K,GAAG,EACHxH,wBAAe,CAACzO,cAAc,EAC9B,IAAI,CAACm4I,wBAAwB,EAC7B,IACF,CACF,CAAC;QAED,IAAM57E,IAAI,GAAGtmD,GAAG,CAACymD,OAAO,CAAC,CAAC;QAC1B,IAAIH,IAAI,EAAE;UACR,IAAI,CAAC67E,SAAS,CAAC77E,IAAI,CAAC;UACpB,IAAIA,IAAI,CAACrJ,KAAK,CAAC,CAAC,EAAE;YAChB,IAAI,CAACskF,MAAM,CAAC3lB,UAAU,CAAC,CAAC;YACxB,IAAI,CAACwmB,YAAY,CAAC,CAAC;UACrB;QACF;QAEA,IAAI,CAAC,IAAI,CAACb,MAAM,CAAC1hB,UAAU,CAAC,CAAC,EAAE;UAC7B,IAAI,CAACwiB,8BAA8B,CAAC,CAAC;QACvC;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA94I,GAAA;IAAAC,KAAA,EAKA,SAAA04I,yBAAyB9uI,KAAK,EAAE;MAC9B,IAAIA,KAAK,CAAC7J,GAAG,KAAK8yH,oBAAW,CAAC/Z,IAAI,EAAE;QAClC,IAAM0/B,OAAO,GAAG;QACd5uI,KAAK,CAACmE,QACP;QACD,IAAIyqI,OAAO,EAAE;UACX,IAAI,CAACC,WAAW,CAACD,OAAO,CAAC;QAC3B;QACA,IAAMM,OAAO,GAAG,IAAI,CAAC1mC,MAAM,CAAC,CAAC,CAACn1C,OAAO,CAAC,CAAC;QACvC,IAAI,CAAC07E,SAAS,CAACG,OAAO,CAAC;MACzB,CAAC,MAAM,IACL,CAAC,IAAI,CAACf,MAAM,CAAC1hB,UAAU,CAAC,CAAC,KACxBzsH,KAAK,CAAC7J,GAAG,KAAK8yH,oBAAW,CAACha,MAAM,IAAIjvG,KAAK,CAAC7J,GAAG,KAAK8yH,oBAAW,CAACja,IAAI,CAAC,EACpE;QACA,IAAI,CAACm/B,MAAM,CAAC3lB,UAAU,CAAC,CAAC;MAC1B;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAryH,GAAA;IAAAC,KAAA,EAKA,SAAA24I,UAAU77E,IAAI,EAAE;MACd,IAAI,CAAC,IAAI,CAAC+6E,KAAK,EAAE;QACf;QACA,IAAMiB,OAAO,GAAG,IAAI9nF,aAAI,CAAC;UACvBvyC,UAAU,EAAEq+C,IAAI,CAACzsC,aAAa,CAAC;QACjC,CAAC,CAAC;QACF,IAAI,CAAC0nH,MAAM,CAAC5kB,OAAO,CAAC2lB,OAAO,CAAC;MAC9B;MAEAh8E,IAAI,CAAC7tD,iBAAiB,CACpB6iD,qBAAY,CAAC7D,QAAQ,EACrB,IAAI,CAACwpF,2BACP,CAAC;MACD;MACA,IAAI,CAACC,sBAAsB,CAAC,CAAC;IAC/B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA33I,GAAA;IAAAC,KAAA,EAKA,SAAAy4I,YAAY37E,IAAI,EAAE;MAChBA,IAAI,CAAC5tD,oBAAoB,CACvB4iD,qBAAY,CAAC7D,QAAQ,EACrB,IAAI,CAACwpF,2BACP,CAAC;IACH;;IAEA;AACF;AACA;AACA;EAHE;IAAA13I,GAAA;IAAAC,KAAA,EAIA,SAAA03I,uBAAA,EAAyB;MACvB,IAAI,IAAI,CAACh9F,eAAe,EAAE;QACxB,IAAI,CAACq9F,MAAM,CAAC96E,OAAO,CAAC,CAAC,CAACjhB,WAAW,CAAC,IAAI,CAACo2D,MAAM,CAAC,CAAC,CAACn1C,OAAO,CAAC,CAAC,CAAC5hB,WAAW,CAAC,CAAC,CAAC;MAC1E;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVE;IAAAt7C,GAAA;IAAAC,KAAA,EAWA,SAAA+4I,gBAAA,EAAkB;MAChB,IAAMviI,GAAG,GAAG,IAAI,CAAC47F,MAAM,CAAC,CAAC;MACzB,IAAM0lC,KAAK,GAAG,IAAI,CAACC,MAAM;MAEzB,IAAI,CAACvhI,GAAG,CAAC6/G,UAAU,CAAC,CAAC,IAAI,CAACyhB,KAAK,CAACzhB,UAAU,CAAC,CAAC,EAAE;QAC5C;MACF;MAEA,IAAM0D,OAAO,GAAG,wCAA0CvjH,GAAG,CAAC6G,OAAO,CAAC,CAAE;MAExE,IAAMy/C,IAAI,GAAGtmD,GAAG,CAACymD,OAAO,CAAC,CAAC;MAC1B,IAAM/kD,MAAM,GAAG4kD,IAAI,CAACpG,uBAAuB,CAACqjE,OAAO,CAAC;MAEpD,IAAI,IAAI,CAAC4d,WAAW,IAAI,IAAAzgB,cAAY,EAACh/G,MAAM,EAAE,IAAI,CAACy/H,WAAW,CAAC,EAAE;QAC9D;QACA;MACF;MACA,IAAI,CAACA,WAAW,GAAGz/H,MAAM;MAEzB,IAAM8gI,SAAS,GAAG;MAChBlB,KAAK,CAACz6H,OAAO,CAAC,CACf;MAED,IAAM47H,MAAM,GAAGnB,KAAK,CAAC76E,OAAO,CAAC,CAAC;MAC9B,IAAMi8E,QAAQ,GAAGD,MAAM,CAACviF,uBAAuB,CAACsiF,SAAS,CAAC;MAE1D,IAAMG,YAAY,GAAGrB,KAAK,CAAC3uB,8BAA8B,CACvD,IAAAluG,kBAAU,EAAC/C,MAAM,CACnB,CAAC;MACD,IAAMkhI,gBAAgB,GAAGtB,KAAK,CAAC3uB,8BAA8B,CAC3D,IAAApuG,sBAAc,EAAC7C,MAAM,CACvB,CAAC;MAED,IAAMmhI,QAAQ,GAAGpkI,IAAI,CAACwF,GAAG,CAAC0+H,YAAY,CAAC,CAAC,CAAC,GAAGC,gBAAgB,CAAC,CAAC,CAAC,CAAC;MAChE,IAAME,SAAS,GAAGrkI,IAAI,CAACwF,GAAG,CAAC0+H,YAAY,CAAC,CAAC,CAAC,GAAGC,gBAAgB,CAAC,CAAC,CAAC,CAAC;MAEjE,IAAMG,UAAU,GAAGP,SAAS,CAAC,CAAC,CAAC;MAC/B,IAAMQ,WAAW,GAAGR,SAAS,CAAC,CAAC,CAAC;MAEhC,IACEK,QAAQ,GAAGE,UAAU,GAAGhC,SAAS,IACjC+B,SAAS,GAAGE,WAAW,GAAGjC,SAAS,IACnC8B,QAAQ,GAAGE,UAAU,GAAGjC,SAAS,IACjCgC,SAAS,GAAGE,WAAW,GAAGlC,SAAS,EACnC;QACA,IAAI,CAACsB,YAAY,CAAC,CAAC;MACrB,CAAC,MAAM,IAAI,CAAC,IAAAx/H,sBAAc,EAAC8/H,QAAQ,EAAEhhI,MAAM,CAAC,EAAE;QAC5C,IAAI,CAACuhI,SAAS,CAAC,CAAC;MAClB;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA15I,GAAA;IAAAC,KAAA,EAKA,SAAA44I,aAAA,EAAe;MACb,IAAItB,SAAS,KAAK,CAAC,IAAIC,SAAS,KAAK,CAAC,EAAE;QACtC;MACF;MAEA,IAAM/gI,GAAG,GAAG,IAAI,CAAC47F,MAAM,CAAC,CAAC;MACzB,IAAM0lC,KAAK,GAAG,IAAI,CAACC,MAAM;MAEzB,IAAMhe,OAAO,GAAG,wCAA0CvjH,GAAG,CAAC6G,OAAO,CAAC,CAAE;MAExE,IAAMy/C,IAAI,GAAGtmD,GAAG,CAACymD,OAAO,CAAC,CAAC;MAC1B,IAAM/kD,MAAM,GAAG4kD,IAAI,CAACpG,uBAAuB,CAACqjE,OAAO,CAAC;MAEpD,IAAMkf,MAAM,GAAGnB,KAAK,CAAC76E,OAAO,CAAC,CAAC;;MAE9B;MACA;MACA;MACA,IAAM4nE,KAAK,GAAG5vH,IAAI,CAAC4M,GAAG,CAACy1H,SAAS,GAAGC,SAAS,CAAC,GAAGtiI,IAAI,CAACykI,GAAG;MACxD,IAAMt/F,KAAK,GAAG,CAAC,IAAInlC,IAAI,CAACsP,GAAG,CAAC,CAAC,EAAEsgH,KAAK,GAAG,CAAC,CAAC,GAAG0S,SAAS,CAAC;MACtD,IAAAh6H,uBAAe,EAACrF,MAAM,EAAEkiC,KAAK,CAAC;MAC9B6+F,MAAM,CAAC9gF,WAAW,CAAC,IAAAD,mBAAiB,EAAChgD,MAAM,CAAC,CAAC;IAC/C;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAnY,GAAA;IAAAC,KAAA,EAKA,SAAAy5I,UAAA,EAAY;MACV,IAAMjjI,GAAG,GAAG,IAAI,CAAC47F,MAAM,CAAC,CAAC;MACzB,IAAM0lC,KAAK,GAAG,IAAI,CAACC,MAAM;MAEzB,IAAMj7E,IAAI,GAAGtmD,GAAG,CAACymD,OAAO,CAAC,CAAC;MAE1B,IAAMg8E,MAAM,GAAGnB,KAAK,CAAC76E,OAAO,CAAC,CAAC;MAE9Bg8E,MAAM,CAACnmF,iBAAiB,CAACgK,IAAI,CAAC5J,iBAAiB,CAAC,CAAC,CAAC;IACpD;;IAEA;AACF;AACA;AACA;EAHE;IAAAnzD,GAAA;IAAAC,KAAA,EAIA,SAAA25I,WAAA,EAAa;MACX,IAAMnjI,GAAG,GAAG,IAAI,CAAC47F,MAAM,CAAC,CAAC;MACzB,IAAM0lC,KAAK,GAAG,IAAI,CAACC,MAAM;MAEzB,IAAI,CAACvhI,GAAG,CAAC6/G,UAAU,CAAC,CAAC,IAAI,CAACyhB,KAAK,CAACzhB,UAAU,CAAC,CAAC,EAAE;QAC5C;MACF;MAEA,IAAM0D,OAAO,GAAG,wCAA0CvjH,GAAG,CAAC6G,OAAO,CAAC,CAAE;MAExE,IAAMy/C,IAAI,GAAGtmD,GAAG,CAACymD,OAAO,CAAC,CAAC;MAE1B,IAAMg8E,MAAM,GAAGnB,KAAK,CAAC76E,OAAO,CAAC,CAAC;MAE9B,IAAMphD,QAAQ,GAAG,IAAI,CAAC6+B,eAAe,GAAG,CAAC,GAAG,CAACoiB,IAAI,CAACzhB,WAAW,CAAC,CAAC;MAE/D,IAAMy4E,OAAO,GAAG,IAAI,CAACmkB,WAAW;MAChC,IAAM7uD,GAAG,GAAG,IAAI,CAAC6uD,WAAW,CAACvf,UAAU,CAAC,CAAC;MACzC,IAAM/8G,MAAM,GAAGmhD,IAAI,CAAC5J,iBAAiB,CAAC,CAAC;MACvC,IAAMt3C,UAAU,GAAGkhD,IAAI,CAACvrB,aAAa,CAAC,CAAC;MACvC,IAAMqoG,YAAY,GAAGX,MAAM,CAAC1nG,aAAa,CAAC,CAAC;MAC3C,IAAMjzB,KAAK,GAAIy7G,OAAO,CAAC,CAAC,CAAC,GAAGn+G,UAAU,GAAIg+H,YAAY;MACtD,IAAMr7H,MAAM,GAAIw7G,OAAO,CAAC,CAAC,CAAC,GAAGn+G,UAAU,GAAIg+H,YAAY;;MAEvD;MACA9lB,OAAO,CAAC2E,WAAW,CAAC98G,MAAM,CAAC;;MAE3B;MACA,IAAIytE,GAAG,EAAE;QACPA,GAAG,CAAC12E,KAAK,CAAC4L,KAAK,GAAGA,KAAK,GAAG,IAAI;QAC9B8qE,GAAG,CAAC12E,KAAK,CAAC6L,MAAM,GAAGA,MAAM,GAAG,IAAI;QAChC,IAAM/K,SAAS,GAAG,SAAS,GAAGqI,QAAQ,GAAG,MAAM;QAC/CutE,GAAG,CAAC12E,KAAK,CAACc,SAAS,GAAGA,SAAS;MACjC;IACF;;IAEA;AACF;AACA;EAFE;IAAAzT,GAAA;IAAAC,KAAA,EAGA,SAAA64I,+BAAA,EAAiC;MAC/B,IAAI,IAAI,CAACgB,mBAAmB,EAAE;QAC5B;MACF;MACA,IAAI,CAACA,mBAAmB,GAAG,IAAA7tI,kBAAU,EACnC,IAAI,CAAC+rI,MAAM,EACXt7B,qBAAY,CAAC3+E,UAAU,EACvB,UAAUl0B,KAAK,EAAE;QACf,OAAO,IAAI,CAACiwI,mBAAmB;QAC/B,IAAI,CAACF,UAAU,CAAC,CAAC;MACnB,CAAC,EACD,IACF,CAAC;IACH;;IAEA;AACF;AACA;AACA;EAHE;IAAA55I,GAAA;IAAAC,KAAA,EAIA,SAAAihH,aAAar3G,KAAK,EAAE;MAClBA,KAAK,CAAC3J,cAAc,CAAC,CAAC;MACtB,IAAI,CAAC+hH,aAAa,CAAC,CAAC;IACtB;;IAEA;AACF;AACA;EAFE;IAAAjiH,GAAA;IAAAC,KAAA,EAGA,SAAAgiH,cAAA,EAAgB;MACd,IAAI,CAACjyG,OAAO,CAACkyG,SAAS,CAACC,MAAM,CAACplE,oBAAe,CAAC;MAC9C,IAAI,IAAI,CAACkjE,UAAU,EAAE;QACnB,IAAAvwE,gBAAW,EAAC,IAAI,CAACixE,cAAc,EAAE,IAAI,CAACE,MAAM,CAAC;MAC/C,CAAC,MAAM;QACL,IAAAnxE,gBAAW,EAAC,IAAI,CAACmxE,MAAM,EAAE,IAAI,CAACF,cAAc,CAAC;MAC/C;MACA,IAAI,CAACV,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;;MAElC;MACA;MACA,IAAM83B,KAAK,GAAG,IAAI,CAACC,MAAM;MACzB,IAAI,CAAC,IAAI,CAAC/3B,UAAU,EAAE;QACpB,IAAI83B,KAAK,CAACzhB,UAAU,CAAC,CAAC,EAAE;UACtB,IAAI,CAACshB,WAAW,GAAGptI,SAAS;UAC5ButI,KAAK,CAACx0F,MAAM,CAAC,CAAC;UACd;QACF;QACAw0F,KAAK,CAAC1lB,UAAU,CAAC,CAAC;QAClB,IAAI,CAACwmB,YAAY,CAAC,CAAC;QACnB,IAAI,CAACC,8BAA8B,CAAC,CAAC;MACvC;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA94I,GAAA;IAAAC,KAAA,EAKA,SAAAmiH,eAAA,EAAiB;MACf,OAAO,IAAI,CAAC9B,YAAY;IAC1B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAtgH,GAAA;IAAAC,KAAA,EAKA,SAAAwhH,eAAepB,WAAW,EAAE;MAC1B,IAAI,IAAI,CAACC,YAAY,KAAKD,WAAW,EAAE;QACrC;MACF;MACA,IAAI,CAACC,YAAY,GAAGD,WAAW;MAC/B,IAAI,CAACrwG,OAAO,CAACkyG,SAAS,CAACC,MAAM,CAAC,kBAAkB,CAAC;MACjD,IAAI,CAAC9B,WAAW,IAAI,IAAI,CAACJ,UAAU,EAAE;QACnC,IAAI,CAACgC,aAAa,CAAC,CAAC;MACtB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAjiH,GAAA;IAAAC,KAAA,EAOA,SAAAoiH,aAAanC,SAAS,EAAE;MACtB,IAAI,CAAC,IAAI,CAACI,YAAY,IAAI,IAAI,CAACL,UAAU,KAAKC,SAAS,EAAE;QACvD;MACF;MACA,IAAI,CAAC+B,aAAa,CAAC,CAAC;IACtB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjiH,GAAA;IAAAC,KAAA,EAKA,SAAAqiH,aAAA,EAAe;MACb,OAAO,IAAI,CAACrC,UAAU;IACxB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAjgH,GAAA;IAAAC,KAAA,EAKA,SAAAs7C,kBAAA,EAAoB;MAClB,OAAO,IAAI,CAACZ,eAAe;IAC7B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA36C,GAAA;IAAAC,KAAA,EAKA,SAAA+7C,kBAAkBpB,cAAc,EAAE;MAChC,IAAI,IAAI,CAACD,eAAe,KAAKC,cAAc,EAAE;QAC3C;MACF;MACA,IAAI,CAACD,eAAe,GAAGC,cAAc;MACrC,IAAI,IAAI,CAACy3D,MAAM,CAAC,CAAC,CAACn1C,OAAO,CAAC,CAAC,CAAC5hB,WAAW,CAAC,CAAC,KAAK,CAAC,EAAE;QAC/C,IAAI,IAAI,CAACX,eAAe,EAAE;UACxB,IAAI,CAACg9F,sBAAsB,CAAC,CAAC;QAC/B,CAAC,MAAM;UACL,IAAI,CAACK,MAAM,CAAC96E,OAAO,CAAC,CAAC,CAACjhB,WAAW,CAAC,CAAC,CAAC;QACtC;QACA,IAAI,CAAC27F,WAAW,GAAGptI,SAAS;QAC5B,IAAI,CAACwuI,eAAe,CAAC,CAAC;QACtB,IAAI,CAACY,UAAU,CAAC,CAAC;MACnB;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA55I,GAAA;IAAAC,KAAA,EAKA,SAAA85I,eAAA,EAAiB;MACf,OAAO,IAAI,CAAC/B,MAAM;IACpB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAh4I,GAAA;IAAAC,KAAA,EAKA,SAAAsjD,OAAOo5D,QAAQ,EAAE;MACf,IAAI,CAACq8B,eAAe,CAAC,CAAC;MACtB,IAAI,CAACY,UAAU,CAAC,CAAC;IACnB;EAAC;AAAA,EAjmBuBv9B,iBAAO;AAAA,IAAAh8G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAomBlBk3I,WAAW;;;;;;;;ACnqB1B,IAAA56B,SAAA,GAAAl3G,sBAAA,CAAA7B,OAAA;AACA,IAAA45C,IAAA,GAAA55C,OAAA;AACA,IAAAkrB,KAAA,GAAAlrB,OAAA;AAA+D,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAQ,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KAL/D;AACA;AACA;AAKA;AACA;AACA;AACA,IAAMkxI,UAAU,GAAG,OAAO;;AAE1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAMC,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;AAEhC;AACA;AACA;AACA;AACA,IAAMC,WAAW,GAAG,IAAI,GAAG,IAAI;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA,IAiBMC,SAAS,0BAAAp6B,QAAA;EACb;AACF;AACA;EACE,SAAAo6B,UAAY/pI,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAAw6I,SAAA;IACnB/pI,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhC,IAAMJ,OAAO,GAAGy+B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC7C1+B,OAAO,CAAC2C,KAAK,CAAC2pG,aAAa,GAAG,MAAM;IAEpCrzG,KAAA,GAAAvB,UAAA,OAAAyyI,SAAA,GAAM;MACJnqI,OAAO,EAAEA,OAAO;MAChBuzC,MAAM,EAAEnzC,OAAO,CAACmzC,MAAM;MACtBzjD,MAAM,EAAEsQ,OAAO,CAACtQ;IAClB,CAAC;;IAED;AACJ;AACA;IACImJ,KAAA,CAAKuD,EAAE;;IAEP;AACJ;AACA;IACIvD,KAAA,CAAK6C,IAAI;;IAET;AACJ;AACA;IACI7C,KAAA,CAAK0D,EAAE;IAEP,IAAM4/C,SAAS,GACbn8C,OAAO,CAACm8C,SAAS,KAAK/hD,SAAS,GAC3B4F,OAAO,CAACm8C,SAAS,GACjBn8C,OAAO,CAACgqI,GAAG,GACT,cAAc,GACd,eAAe;;IAEvB;AACJ;AACA;AACA;IACInxI,KAAA,CAAKoxI,aAAa,GAAG5rG,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAClDzlC,KAAA,CAAKoxI,aAAa,CAAC9tF,SAAS,GAAGA,SAAS,GAAG,QAAQ;IAEnDtjD,KAAA,CAAK+G,OAAO,CAACu8C,SAAS,GAAGA,SAAS,GAAG,GAAG,GAAG3P,uBAAkB;IAC7D3zC,KAAA,CAAK+G,OAAO,CAAC2gC,WAAW,CAAC1nC,KAAA,CAAKoxI,aAAa,CAAC;;IAE5C;AACJ;AACA;AACA;IACIpxI,KAAA,CAAKqxI,UAAU,GAAG,IAAI;;IAEtB;AACJ;AACA;AACA;IACIrxI,KAAA,CAAKsxI,SAAS,GAAGnqI,OAAO,CAACoqI,QAAQ,KAAKhwI,SAAS,GAAG4F,OAAO,CAACoqI,QAAQ,GAAG,EAAE;;IAEvE;AACJ;AACA;AACA;IACIvxI,KAAA,CAAKwxI,SAAS,GAAGrqI,OAAO,CAACsqI,QAAQ;;IAEjC;AACJ;AACA;AACA;IACIzxI,KAAA,CAAKiqG,gBAAgB,GAAG,KAAK;;IAE7B;AACJ;AACA;AACA;IACIjqG,KAAA,CAAK0xI,cAAc,GAAGnwI,SAAS;;IAE/B;AACJ;AACA;AACA;IACIvB,KAAA,CAAK+tI,aAAa,GAAG,EAAE;IAEvB/tI,KAAA,CAAKiG,iBAAiB,CAAC8qI,UAAU,EAAE/wI,KAAA,CAAK2xI,mBAAmB,CAAC;IAE5D3xI,KAAA,CAAK4xI,QAAQ,CAACzqI,OAAO,CAACwP,KAAK,IAAI,QAAQ,CAAC;;IAExC;AACJ;AACA;AACA;IACI3W,KAAA,CAAK6xI,SAAS,GAAG1qI,OAAO,CAACgqI,GAAG,IAAI,KAAK;;IAErC;AACJ;AACA;AACA;IACInxI,KAAA,CAAK8xI,cAAc,GAAG3qI,OAAO,CAAC00H,KAAK,IAAI,CAAC;;IAExC;AACJ;AACA;AACA;IACI77H,KAAA,CAAK+xI,aAAa,GAAG5qI,OAAO,CAAC0uC,IAAI,IAAI,KAAK;;IAE1C;AACJ;AACA;AACA;IACI71C,KAAA,CAAKgyI,IAAI,GAAG7qI,OAAO,CAAC8qI,GAAG,IAAI1wI,SAAS;IAAC,OAAAvB,KAAA;EACvC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANER,SAAA,CAAA0xI,SAAA,EAAAp6B,QAAA;EAAA,OAAAhgH,YAAA,CAAAo6I,SAAA;IAAAn6I,GAAA;IAAAC,KAAA,EAOA,SAAA0gB,SAAA,EAAW;MACT,OAAO,IAAI,CAACpS,GAAG,CAACyrI,UAAU,CAAC;IAC7B;;IAEA;AACF;AACA;EAFE;IAAAh6I,GAAA;IAAAC,KAAA,EAGA,SAAA26I,oBAAA,EAAsB;MACpB,IAAI,CAAC74B,cAAc,CAAC,CAAC;IACvB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/hH,GAAA;IAAAC,KAAA,EAMA,SAAA46I,SAASj7H,KAAK,EAAE;MACd,IAAI,CAACxQ,GAAG,CAAC4qI,UAAU,EAAEp6H,KAAK,CAAC;IAC7B;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA5f,GAAA;IAAAC,KAAA,EAKA,SAAAk7I,OAAOD,GAAG,EAAE;MACV,IAAI,CAACD,IAAI,GAAGC,GAAG;IACjB;;IAEA;AACF;AACA;EAFE;IAAAl7I,GAAA;IAAAC,KAAA,EAGA,SAAA8hH,eAAA,EAAiB;MACf,IAAMjqD,SAAS,GAAG,IAAI,CAACwiF,UAAU;MAEjC,IAAI,CAACxiF,SAAS,EAAE;QACd,IAAI,IAAI,CAACo7C,gBAAgB,EAAE;UACzB,IAAI,CAACljG,OAAO,CAAC2C,KAAK,CAAC6tC,OAAO,GAAG,MAAM;UACnC,IAAI,CAAC0yD,gBAAgB,GAAG,KAAK;QAC/B;QACA;MACF;MAEA,IAAMt3F,MAAM,GAAGk8C,SAAS,CAACl8C,MAAM;MAC/B,IAAM8C,UAAU,GAAGo5C,SAAS,CAACp5C,UAAU;MACvC,IAAMkB,KAAK,GAAG,IAAI,CAACe,QAAQ,CAAC,CAAC;MAC7B,IAAMy6H,oBAAoB,GAAGx7H,KAAK,IAAI,SAAS,GAAG,SAAS,GAAG,GAAG;MACjE,IAAImL,eAAe,GAAG,IAAAzK,wBAAkB,EACtC5B,UAAU,EACVo5C,SAAS,CAACj8C,UAAU,EACpBD,MAAM,EACNw/H,oBACF,CAAC;MAED,IAAMZ,QAAQ,GACX,IAAI,CAACD,SAAS,IAAI,IAAI,CAACU,IAAI,IAAIf,WAAW,CAAC,GAAIA,WAAW;MAE7D,IAAMQ,QAAQ,GACZ,IAAI,CAACD,SAAS,KAAKjwI,SAAS,GACvB,IAAI,CAACiwI,SAAS,IAAI,IAAI,CAACQ,IAAI,IAAIf,WAAW,CAAC,GAAIA,WAAW,GAC3D1vI,SAAS;MAEf,IAAI6wI,YAAY,GAAGb,QAAQ,GAAGzvH,eAAe;MAC7C,IAAIuwH,MAAM,GAAG,EAAE;MACf,IAAI17H,KAAK,IAAI,SAAS,EAAE;QACtB,IAAM27H,eAAe,GAAGj8H,qBAAe,CAACkH,OAAO;QAC/C60H,YAAY,IAAIE,eAAe;QAC/B,IAAIF,YAAY,GAAGE,eAAe,GAAG,EAAE,EAAE;UACvCD,MAAM,GAAG,QAAQ,CAAC,CAAC;UACnBvwH,eAAe,IAAI,IAAI;QACzB,CAAC,MAAM,IAAIswH,YAAY,GAAGE,eAAe,EAAE;UACzCD,MAAM,GAAG,QAAQ,CAAC,CAAC;UACnBvwH,eAAe,IAAI,EAAE;QACvB,CAAC,MAAM;UACLuwH,MAAM,GAAG,MAAQ,CAAC,CAAC;QACrB;MACF,CAAC,MAAM,IAAI17H,KAAK,IAAI,UAAU,EAAE;QAC9B,IAAIy7H,YAAY,GAAG,MAAM,EAAE;UACzBC,MAAM,GAAG,IAAI;UACbvwH,eAAe,IAAI,MAAM;QAC3B,CAAC,MAAM,IAAIswH,YAAY,GAAG,QAAQ,EAAE;UAClCC,MAAM,GAAG,IAAI;UACbvwH,eAAe,IAAI,MAAM;QAC3B,CAAC,MAAM;UACLuwH,MAAM,GAAG,IAAI;UACbvwH,eAAe,IAAI,QAAQ;QAC7B;MACF,CAAC,MAAM,IAAInL,KAAK,IAAI,UAAU,EAAE;QAC9BmL,eAAe,IAAI,IAAI;QACvBuwH,MAAM,GAAG,IAAI;MACf,CAAC,MAAM,IAAI17H,KAAK,IAAI,QAAQ,EAAE;QAC5B,IAAIy7H,YAAY,GAAG,IAAI,EAAE;UACvBC,MAAM,GAAG,IAAI;UACbvwH,eAAe,IAAI,GAAG;QACxB,CAAC,MAAM,IAAIswH,YAAY,GAAG,KAAK,EAAE;UAC/BC,MAAM,GAAG,IAAI;UACbvwH,eAAe,IAAI,OAAO;QAC5B,CAAC,MAAM,IAAIswH,YAAY,GAAG,CAAC,EAAE;UAC3BC,MAAM,GAAG,IAAI;UACbvwH,eAAe,IAAI,IAAI;QACzB,CAAC,MAAM,IAAIswH,YAAY,GAAG,IAAI,EAAE;UAC9BC,MAAM,GAAG,GAAG;QACd,CAAC,MAAM;UACLA,MAAM,GAAG,IAAI;UACbvwH,eAAe,IAAI,IAAI;QACzB;MACF,CAAC,MAAM,IAAInL,KAAK,IAAI,IAAI,EAAE;QACxB,IAAIy7H,YAAY,GAAG,MAAM,EAAE;UACzBC,MAAM,GAAG,IAAI;UACbvwH,eAAe,IAAI,KAAK;QAC1B,CAAC,MAAM,IAAIswH,YAAY,GAAG,QAAQ,EAAE;UAClCC,MAAM,GAAG,IAAI;UACbvwH,eAAe,IAAI,UAAU;QAC/B,CAAC,MAAM;UACLuwH,MAAM,GAAG,IAAI;UACbvwH,eAAe,IAAI,SAAS;QAC9B;MACF,CAAC,MAAM;QACL,MAAM,IAAIzd,KAAK,CAAC,eAAe,CAAC;MAClC;MAEA,IAAIvL,CAAC,GAAG,CAAC,GAAGmT,IAAI,CAAC8J,KAAK,CAAC9J,IAAI,CAAC4M,GAAG,CAAC04H,QAAQ,GAAGzvH,eAAe,CAAC,GAAG7V,IAAI,CAAC4M,GAAG,CAAC,EAAE,CAAC,CAAC;MAC3E,IAAIy4F,KAAK,EAAEh8F,KAAK,EAAEi9H,YAAY;MAC9B,IAAIC,aAAa,EAAEC,aAAa,EAAEC,oBAAoB;MACtD,OAAO,IAAI,EAAE;QACXH,YAAY,GAAGtmI,IAAI,CAAC8J,KAAK,CAACjd,CAAC,GAAG,CAAC,CAAC;QAChC,IAAM+iB,OAAO,GAAG5P,IAAI,CAACsP,GAAG,CAAC,EAAE,EAAEg3H,YAAY,CAAC;QAC1CjhC,KAAK,GAAG0/B,cAAc,CAAC,CAAEl4I,CAAC,GAAG,CAAC,GAAI,CAAC,IAAI,CAAC,CAAC,GAAG+iB,OAAO;QACnDvG,KAAK,GAAGrJ,IAAI,CAACwB,KAAK,CAAC6jG,KAAK,GAAGxvF,eAAe,CAAC;QAC3C,IAAIoF,KAAK,CAAC5R,KAAK,CAAC,EAAE;UAChB,IAAI,CAACvO,OAAO,CAAC2C,KAAK,CAAC6tC,OAAO,GAAG,MAAM;UACnC,IAAI,CAAC0yD,gBAAgB,GAAG,KAAK;UAC7B;QACF;QACA,IAAIwnC,QAAQ,KAAKlwI,SAAS,IAAI+T,KAAK,IAAIm8H,QAAQ,EAAE;UAC/CngC,KAAK,GAAGkhC,aAAa;UACrBl9H,KAAK,GAAGm9H,aAAa;UACrBF,YAAY,GAAGG,oBAAoB;UACnC;QACF,CAAC,MAAM,IAAIp9H,KAAK,IAAIi8H,QAAQ,EAAE;UAC5B;QACF;QACAiB,aAAa,GAAGlhC,KAAK;QACrBmhC,aAAa,GAAGn9H,KAAK;QACrBo9H,oBAAoB,GAAGH,YAAY;QACnC,EAAEz5I,CAAC;MACL;MACA,IAAMu1I,IAAI,GAAG,IAAI,CAACwD,SAAS,GACvB,IAAI,CAACc,cAAc,CAACr9H,KAAK,EAAEg8F,KAAK,EAAE+gC,MAAM,CAAC,GACzC/gC,KAAK,CAACl2F,OAAO,CAACm3H,YAAY,GAAG,CAAC,GAAG,CAACA,YAAY,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGF,MAAM;MAEtE,IAAI,IAAI,CAACtE,aAAa,IAAIM,IAAI,EAAE;QAC9B,IAAI,CAAC+C,aAAa,CAACl6F,SAAS,GAAGm3F,IAAI;QACnC,IAAI,CAACN,aAAa,GAAGM,IAAI;MAC3B;MAEA,IAAI,IAAI,CAACqD,cAAc,IAAIp8H,KAAK,EAAE;QAChC,IAAI,CAAC87H,aAAa,CAAC1nI,KAAK,CAAC4L,KAAK,GAAGA,KAAK,GAAG,IAAI;QAC7C,IAAI,CAACo8H,cAAc,GAAGp8H,KAAK;MAC7B;MAEA,IAAI,CAAC,IAAI,CAAC20F,gBAAgB,EAAE;QAC1B,IAAI,CAACljG,OAAO,CAAC2C,KAAK,CAAC6tC,OAAO,GAAG,EAAE;QAC/B,IAAI,CAAC0yD,gBAAgB,GAAG,IAAI;MAC9B;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAlzG,GAAA;IAAAC,KAAA,EAOA,SAAA27I,eAAer9H,KAAK,EAAEnJ,KAAK,EAAEkmI,MAAM,EAAE;MACnC,IAAMO,eAAe,GAAG,IAAI,CAACC,qBAAqB,CAAC,CAAC;MACpD,IAAMC,QAAQ,GACZF,eAAe,GAAG,CAAC,GACf3mI,IAAI,CAACwB,KAAK,CAAC,CAAC,GAAGmlI,eAAe,CAAC,CAACG,cAAc,CAAC,CAAC,GAAG,MAAM,GACzD,MAAM,GAAG9mI,IAAI,CAACwB,KAAK,CAACmlI,eAAe,CAAC,CAACG,cAAc,CAAC,CAAC;MAC3D,IAAMlX,KAAK,GAAG,IAAI,CAACiW,cAAc;MACjC,IAAMkB,SAAS,GAAG19H,KAAK,GAAGumH,KAAK;MAC/B,IAAMoX,UAAU,GAAG,CAAC,IAAI,CAACC,YAAY,CAAC,UAAU,CAAC,CAAC;MAClD,KAAK,IAAIp6I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+iI,KAAK,EAAE,EAAE/iI,CAAC,EAAE;QAC9B,IAAMq6I,GAAG,GACPr6I,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,wBAAwB,GAAG,yBAAyB;QACpEm6I,UAAU,CAACvyI,IAAI,CACb,OAAO,GACL,OAAO,iCAAAqF,MAAA,CACsBotI,GAAG,QAAI,qBAAAptI,MAAA,CACnBitI,SAAS,UAAM,GAChC,GAAG,GACH,QAAQ,GACR,IAAI,CAACE,YAAY,CAAC,UAAU,CAAC;QAC7B;QACCp6I,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI+iI,KAAK,KAAK,CAAC,GACvB,IAAI,CAACuX,cAAc,CAACt6I,CAAC,EAAEwc,KAAK,EAAE,KAAK,EAAEnJ,KAAK,EAAEkmI,MAAM,CAAC,GACnD,EAAE,CAAC,GACP,QACJ,CAAC;MACH;MACA;MACAY,UAAU,CAACvyI,IAAI,CAAC,IAAI,CAAC0yI,cAAc,CAACvX,KAAK,EAAEvmH,KAAK,EAAE,IAAI,EAAEnJ,KAAK,EAAEkmI,MAAM,CAAC,CAAC;MAEvE,IAAMgB,YAAY,GAAG,IAAI,CAACtB,aAAa,GACnC,+CAAAhsI,MAAA,CAA4CuP,KAAK,cACjDw9H,QAAQ,GACR,QAAQ,GACR,EAAE;MACN,OAAOO,YAAY,GAAGJ,UAAU,CAACvlI,IAAI,CAAC,EAAE,CAAC;IAC3C;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA3W,GAAA;IAAAC,KAAA,EAKA,SAAAk8I,aAAat/G,QAAQ,EAAE;MACrB,IAAMsxE,GAAG,GAAGtxE,QAAQ,KAAK,UAAU,GAAG,CAAC,GAAG,CAAC,EAAE;MAC7C,OACE,OAAO,GACP,+BAA+B,wBAAA7tB,MAAA,CACX6tB,QAAQ,aAAA7tB,MAAA,CAAUm/F,GAAG,UAAM,GAC/C,SAAS;IAEb;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAnuG,GAAA;IAAAC,KAAA,EASA,SAAAo8I,eAAet6I,CAAC,EAAEwc,KAAK,EAAEg+H,MAAM,EAAEnnI,KAAK,EAAEkmI,MAAM,EAAE;MAC9C,IAAMh6I,MAAM,GACVS,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGmT,IAAI,CAACwB,KAAK,CAAEtB,KAAK,GAAG,IAAI,CAAC2lI,cAAc,GAAIh5I,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;MACzE,IAAMy6I,YAAY,GAAGl7I,MAAM,IAAIS,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,GAAGu5I,MAAM,CAAC;MAC3D,IAAMhiB,MAAM,GAAGv3H,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAIwc,KAAK,GAAG,IAAI,CAACw8H,cAAc,GAAI,CAAC,CAAC;MAChE,IAAMP,QAAQ,GAAGz4I,CAAC,KAAK,CAAC,GAAG,CAAC,GAAIwc,KAAK,GAAG,IAAI,CAACw8H,cAAc,GAAI,CAAC;MAChE,OACE,OAAO,GACP,6BAA6B,GAC7B,SAAS,mBAAA/rI,MAAA,CACOsqH,MAAM,QAAK,kBAAAtqH,MAAA,CACZjN,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG,QAAQ,MAAG,iBAAAiN,MAAA,CAC/BwrI,QAAQ,QAAK,YAAAxrI,MAAA,CAClButI,MAAM,GAAGh+H,KAAK,GAAG,IAAI,GAAG,OAAO,MAAG,GAC3C,IAAI,GACJi+H,YAAY,GACZ,QAAQ;IAEZ;;IAEA;AACF;AACA;AACA;EAHE;IAAAx8I,GAAA;IAAAC,KAAA,EAIA,SAAA67I,sBAAA,EAAwB;MACtB,IAAMjgI,UAAU,GAAG,IAAAyE,wBAAkB,EACnC,IAAI,CAACg6H,UAAU,CAAC57H,UAAU,EAC1B,IAAI,CAAC47H,UAAU,CAACz+H,UAAU,EAC1B,IAAI,CAACy+H,UAAU,CAAC1+H,MAAM,EACtB,GACF,CAAC;MACD,IAAMs/H,GAAG,GAAG,IAAI,CAACD,IAAI,IAAIf,WAAW;MACpC,IAAMuC,cAAc,GAAG,IAAI,GAAG,IAAI;MAClC,OAAO5gI,UAAU,GAAG4gI,cAAc,GAAGvB,GAAG;IAC1C;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAl7I,GAAA;IAAAC,KAAA,EAKA,SAAAsjD,OAAOo5D,QAAQ,EAAE;MACf,IAAM3/C,UAAU,GAAG2/C,QAAQ,CAAC3/C,UAAU;MACtC,IAAI,CAACA,UAAU,EAAE;QACf,IAAI,CAACs9E,UAAU,GAAG,IAAI;MACxB,CAAC,MAAM;QACL,IAAI,CAACA,UAAU,GAAGt9E,UAAU,CAAClF,SAAS;MACxC;MACA,IAAI,CAACiqD,cAAc,CAAC,CAAC;IACvB;EAAC;AAAA,EAtZqB1F,iBAAO;AAAA,IAAAh8G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAyZhB45I,SAAS;;;;;;;;AClexB,IAAAt9B,SAAA,GAAAl3G,sBAAA,CAAA7B,OAAA;AACA,IAAAsI,UAAA,GAAAzG,sBAAA,CAAA7B,OAAA;AACA,IAAA63D,WAAA,GAAAh2D,sBAAA,CAAA7B,OAAA;AACA,IAAA45C,IAAA,GAAA55C,OAAA;AACA,IAAA2hB,KAAA,GAAA3hB,OAAA;AACA,IAAAitD,OAAA,GAAAjtD,OAAA;AACA,IAAAuI,OAAA,GAAAvI,OAAA;AACA,IAAA8B,MAAA,GAAA9B,OAAA;AAAmD,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAmzB,KAAA,eAAAxyB,OAAA,oBAAAA,OAAA,CAAAyG,GAAA,IAAA+rB,IAAA,GAAAxyB,OAAA,CAAAyG,GAAA,CAAAhG,IAAA,aAAA+xB,IAAA,YAAAA,KAAAx6B,MAAA,EAAA0F,QAAA,EAAA+0B,QAAA,QAAAC,IAAA,GAAAC,cAAA,CAAA36B,MAAA,EAAA0F,QAAA,QAAAg1B,IAAA,cAAAE,IAAA,GAAA5zB,MAAA,CAAA6zB,wBAAA,CAAAH,IAAA,EAAAh1B,QAAA,OAAAk1B,IAAA,CAAAnsB,GAAA,WAAAmsB,IAAA,CAAAnsB,GAAA,CAAA5J,IAAA,CAAAC,SAAA,CAAAtD,MAAA,OAAAxB,MAAA,GAAAy6B,QAAA,YAAAG,IAAA,CAAAz6B,KAAA,cAAAq6B,IAAA,CAAAx1B,KAAA,OAAAF,SAAA;AAAA,SAAA61B,eAAAl1B,MAAA,EAAAC,QAAA,YAAAsB,MAAA,CAAArC,SAAA,CAAA+J,cAAA,CAAA7J,IAAA,CAAAY,MAAA,EAAAC,QAAA,KAAAD,MAAA,GAAAoC,eAAA,CAAApC,MAAA,OAAAA,MAAA,2BAAAA,MAAA;AAAA,SAAAoC,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KAXnD;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA,IAAM4zI,SAAS,GAAG;EAChBC,QAAQ,EAAE,CAAC;EACXC,UAAU,EAAE;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,IAUMC,UAAU,0BAAA98B,QAAA;EACd;AACF;AACA;EACE,SAAA88B,WAAYzsI,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAAk9I,UAAA;IACnBzsI,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhCnH,KAAA,GAAAvB,UAAA,OAAAm1I,UAAA,GAAM;MACJ/8I,MAAM,EAAEsQ,OAAO,CAACtQ,MAAM;MACtBkQ,OAAO,EAAEy+B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACtC6U,MAAM,EAAEnzC,OAAO,CAACmzC;IAClB,CAAC;;IAED;AACJ;AACA;AACA;IACIt6C,KAAA,CAAKutG,iBAAiB,GAAG,EAAE;;IAE3B;AACJ;AACA;AACA;AACA;AACA;IACIvtG,KAAA,CAAK6zI,kBAAkB,GAAGtyI,SAAS;;IAEnC;AACJ;AACA;AACA;AACA;AACA;AACA;IACIvB,KAAA,CAAK8zI,UAAU,GAAGL,SAAS,CAACC,QAAQ;;IAEpC;AACJ;AACA;AACA;IACI1zI,KAAA,CAAKstG,SAAS;;IAEd;AACJ;AACA;AACA;IACIttG,KAAA,CAAK+zI,YAAY,GAAG,CAAC;;IAErB;AACJ;AACA;AACA;IACI/zI,KAAA,CAAKg0I,WAAW,GAAG,CAAC;;IAEpB;AACJ;AACA;AACA;IACIh0I,KAAA,CAAKi0I,OAAO;;IAEZ;AACJ;AACA;AACA;IACIj0I,KAAA,CAAKk0I,OAAO;;IAEZ;AACJ;AACA;AACA;AACA;AACA;IACIl0I,KAAA,CAAKm0I,UAAU,GAAG,IAAI;;IAEtB;AACJ;AACA;AACA;AACA;IACIn0I,KAAA,CAAKo0I,kBAAkB,GAAG,KAAK;;IAE/B;AACJ;AACA;AACA;IACIp0I,KAAA,CAAK05G,SAAS,GAAGvyG,OAAO,CAACikD,QAAQ,KAAK7pD,SAAS,GAAG4F,OAAO,CAACikD,QAAQ,GAAG,GAAG;IAExE,IAAM9H,SAAS,GACbn8C,OAAO,CAACm8C,SAAS,KAAK/hD,SAAS,GAAG4F,OAAO,CAACm8C,SAAS,GAAG,eAAe;IACvE,IAAM+wF,YAAY,GAAG7uG,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IACrD4uG,YAAY,CAACt8B,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;IAC3Cs8B,YAAY,CAAC/wF,SAAS,GAAGA,SAAS,GAAG,SAAS,GAAG3P,uBAAkB;IACnE,IAAM2gG,gBAAgB,GAAGt0I,KAAA,CAAK+G,OAAO;IACrCutI,gBAAgB,CAAChxF,SAAS,GACxBA,SAAS,GAAG,GAAG,GAAG3P,uBAAkB,GAAG,GAAG,GAAGE,kBAAa;IAC5DygG,gBAAgB,CAAC5sG,WAAW,CAAC2sG,YAAY,CAAC;IAE1CC,gBAAgB,CAACj0I,gBAAgB,CAC/BwtG,mBAAgB,CAACrB,WAAW,EAC5BxsG,KAAA,CAAKu0I,mBAAmB,CAACj1I,IAAI,CAAAU,KAAK,CAAC,EACnC,KACF,CAAC;IACDs0I,gBAAgB,CAACj0I,gBAAgB,CAC/BwtG,mBAAgB,CAACtB,WAAW,EAC5BvsG,KAAA,CAAKw0I,kBAAkB,CAACl1I,IAAI,CAAAU,KAAK,CAAC,EAClC,KACF,CAAC;IACDs0I,gBAAgB,CAACj0I,gBAAgB,CAC/BwtG,mBAAgB,CAACpB,SAAS,EAC1BzsG,KAAA,CAAKy0I,iBAAiB,CAACn1I,IAAI,CAAAU,KAAK,CAAC,EACjC,KACF,CAAC;IAEDs0I,gBAAgB,CAACj0I,gBAAgB,CAC/ByD,kBAAS,CAAC/B,KAAK,EACf/B,KAAA,CAAK00I,qBAAqB,CAACp1I,IAAI,CAAAU,KAAK,CAAC,EACrC,KACF,CAAC;IACDq0I,YAAY,CAACh0I,gBAAgB,CAACyD,kBAAS,CAAC/B,KAAK,EAAE7K,sBAAe,EAAE,KAAK,CAAC;IAAC,OAAA8I,KAAA;EACzE;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPER,SAAA,CAAAo0I,UAAA,EAAA98B,QAAA;EAAA,OAAAhgH,YAAA,CAAA88I,UAAA;IAAA78I,GAAA;IAAAC,KAAA,EAQA,SAAAo8D,OAAO5lD,GAAG,EAAE;MACV6jB,IAAA,CAAA3yB,eAAA,CAAAk1I,UAAA,CAAAp4I,SAAA,mBAAAE,IAAA,OAAa8R,GAAG;MAChB,IAAIA,GAAG,EAAE;QACPA,GAAG,CAAC8sC,MAAM,CAAC,CAAC;MACd;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAvjD,GAAA;IAAAC,KAAA,EAQA,SAAA29I,YAAA,EAAc;MACZ,IAAM56D,SAAS,GAAG,IAAI,CAAChzE,OAAO;MAC9B,IAAI6tI,cAAc,GAAG76D,SAAS,CAAC9zC,WAAW;MAC1C,IAAI4uG,eAAe,GAAG96D,SAAS,CAACzzC,YAAY;MAC5C,IAAIsuG,cAAc,KAAK,CAAC,IAAIC,eAAe,KAAK,CAAC,EAAE;QACjD,OAAQ,IAAI,CAACT,kBAAkB,GAAG,KAAK;MACzC;MAEA,IAAMU,cAAc,GAAG5uG,gBAAgB,CAAC6zC,SAAS,CAAC;MAClD66D,cAAc,IACZpzG,UAAU,CAACszG,cAAc,CAAC,cAAc,CAAC,CAAC,GAC1CtzG,UAAU,CAACszG,cAAc,CAAC,aAAa,CAAC,CAAC;MAC3CD,eAAe,IACbrzG,UAAU,CAACszG,cAAc,CAAC,YAAY,CAAC,CAAC,GACxCtzG,UAAU,CAACszG,cAAc,CAAC,eAAe,CAAC,CAAC;MAC7C,IAAMC,KAAK,GAAG,0BAA4Bh7D,SAAS,CAACY,iBAAkB;MACtE,IAAMq6D,UAAU,GAAG9uG,gBAAgB,CAAC6uG,KAAK,CAAC;MAC1C,IAAME,UAAU,GACdF,KAAK,CAAC9uG,WAAW,GACjBzE,UAAU,CAACwzG,UAAU,CAAC,aAAa,CAAC,CAAC,GACrCxzG,UAAU,CAACwzG,UAAU,CAAC,YAAY,CAAC,CAAC;MACtC,IAAME,WAAW,GACfH,KAAK,CAACzuG,YAAY,GAClB9E,UAAU,CAACwzG,UAAU,CAAC,WAAW,CAAC,CAAC,GACnCxzG,UAAU,CAACwzG,UAAU,CAAC,cAAc,CAAC,CAAC;MACxC,IAAI,CAACb,UAAU,GAAG,CAACc,UAAU,EAAEC,WAAW,CAAC;MAE3C,IAAIN,cAAc,GAAGC,eAAe,EAAE;QACpC,IAAI,CAACf,UAAU,GAAGL,SAAS,CAACE,UAAU;QACtC,IAAI,CAACK,WAAW,GAAGY,cAAc,GAAGK,UAAU;MAChD,CAAC,MAAM;QACL,IAAI,CAACnB,UAAU,GAAGL,SAAS,CAACC,QAAQ;QACpC,IAAI,CAACK,YAAY,GAAGc,eAAe,GAAGK,WAAW;MACnD;MACA,OAAQ,IAAI,CAACd,kBAAkB,GAAG,IAAI;IACxC;;IAEA;AACF;AACA;AACA;EAHE;IAAAr9I,GAAA;IAAAC,KAAA,EAIA,SAAA09I,sBAAsB9zI,KAAK,EAAE;MAC3B,IAAMkzD,IAAI,GAAG,IAAI,CAACs1C,MAAM,CAAC,CAAC,CAACn1C,OAAO,CAAC,CAAC;MAEpC,IAAMkhF,gBAAgB,GAAG,IAAI,CAACC,oBAAoB,CAChDx0I,KAAK,CAAC23C,OAAO,GAAG,IAAI,CAAC47F,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EACtCvzI,KAAK,CAAC43C,OAAO,GAAG,IAAI,CAAC27F,UAAU,CAAC,CAAC,CAAC,GAAG,CACvC,CAAC;MAED,IAAMvhI,UAAU,GAAG,IAAI,CAACyiI,yBAAyB,CAACF,gBAAgB,CAAC;MACnE,IAAMprF,IAAI,GAAG+J,IAAI,CAACxC,kBAAkB,CAACwC,IAAI,CAAClG,oBAAoB,CAACh7C,UAAU,CAAC,CAAC;MAE3EkhD,IAAI,CAACjJ,eAAe,CAAC;QACnBd,IAAI,EAAEA,IAAI;QACVqB,QAAQ,EAAE,IAAI,CAACsuD,SAAS;QACxBruD,MAAM,EAAEjE;MACV,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAArwD,GAAA;IAAAC,KAAA,EAKA,SAAAu9I,oBAAoB3zI,KAAK,EAAE;MACzB,IAAI,CAAC,IAAI,CAAC0sG,SAAS,IAAI1sG,KAAK,CAAC/J,MAAM,KAAK,IAAI,CAACkQ,OAAO,CAAC4zE,iBAAiB,EAAE;QACtE,IAAM5zE,OAAO,GAAG;QACd,IAAI,CAACA,OAAO,CAAC4zE,iBACd;QACD,IAAI,CAACyuB,MAAM,CAAC,CAAC,CAACn1C,OAAO,CAAC,CAAC,CAAC9C,gBAAgB,CAAC,CAAC;QAC1C,IAAI,CAAC8iF,OAAO,GAAGrzI,KAAK,CAACyuG,OAAO,GAAG7tE,UAAU,CAACz6B,OAAO,CAAC2C,KAAK,CAAC8tC,IAAI,CAAC;QAC7D,IAAI,CAAC08F,OAAO,GAAGtzI,KAAK,CAAC0uG,OAAO,GAAG9tE,UAAU,CAACz6B,OAAO,CAAC2C,KAAK,CAACw7F,GAAG,CAAC;QAC5D,IAAI,CAACoI,SAAS,GAAG,IAAI;QAErB,IAAI,IAAI,CAACC,iBAAiB,CAACl1G,MAAM,KAAK,CAAC,EAAE;UACvC,IAAMi9I,IAAI,GAAG,IAAI,CAACd,kBAAkB;UACpC,IAAMt7I,GAAG,GAAG,IAAI,CAACu7I,iBAAiB;UAClC,IAAM1lC,GAAG,GAAG,IAAI,CAAC3F,MAAM,CAAC,CAAC,CAAC4F,gBAAgB,CAAC,CAAC;UAC5C,IAAI,CAACzB,iBAAiB,CAAC7sG,IAAI,CACzB,IAAAiC,cAAM,EAACosG,GAAG,EAAElB,mBAAgB,CAACtB,WAAW,EAAE+oC,IAAI,EAAE,IAAI,CAAC,EACrD,IAAA3yI,cAAM,EAACosG,GAAG,EAAElB,mBAAgB,CAACpB,SAAS,EAAEvzG,GAAG,EAAE,IAAI,CACnD,CAAC;QACH;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAnC,GAAA;IAAAC,KAAA,EAMA,SAAAw9I,mBAAmB5zI,KAAK,EAAE;MACxB,IAAI,IAAI,CAAC0sG,SAAS,EAAE;QAClB,IAAM94F,MAAM,GAAG5T,KAAK,CAACyuG,OAAO,GAAG,IAAI,CAAC4kC,OAAO;QAC3C,IAAMx/H,MAAM,GAAG7T,KAAK,CAAC0uG,OAAO,GAAG,IAAI,CAAC4kC,OAAO;QAC3C,IAAMiB,gBAAgB,GAAG,IAAI,CAACC,oBAAoB,CAAC5gI,MAAM,EAAEC,MAAM,CAAC;QAClE,IAAI,CAACo/H,kBAAkB,GACrB,IAAI,CAACwB,yBAAyB,CAACF,gBAAgB,CAAC;QAClD,IAAI,CAAC/rC,MAAM,CAAC,CAAC,CAACn1C,OAAO,CAAC,CAAC,CAAC7qB,aAAa,CAAC,IAAI,CAACyqG,kBAAkB,CAAC;MAChE;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA98I,GAAA;IAAAC,KAAA,EAKA,SAAAy9I,kBAAkB7zI,KAAK,EAAE;MACvB,IAAI,IAAI,CAAC0sG,SAAS,EAAE;QAClB,IAAMx5C,IAAI,GAAG,IAAI,CAACs1C,MAAM,CAAC,CAAC,CAACn1C,OAAO,CAAC,CAAC;QACpCH,IAAI,CAAC1C,cAAc,CAAC,CAAC;QAErB,IAAI,CAACk8C,SAAS,GAAG,KAAK;QACtB,IAAI,CAAC2mC,OAAO,GAAG1yI,SAAS;QACxB,IAAI,CAAC2yI,OAAO,GAAG3yI,SAAS;QACxB,IAAI,CAACgsG,iBAAiB,CAAC5lG,OAAO,CAAC1E,qBAAa,CAAC;QAC7C,IAAI,CAACsqG,iBAAiB,CAACl1G,MAAM,GAAG,CAAC;MACnC;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAtB,GAAA;IAAAC,KAAA,EAMA,SAAAu+I,kBAAkB56I,GAAG,EAAE;MACrB,IAAMi5B,QAAQ,GAAG,IAAI,CAAC4hH,yBAAyB,CAAC76I,GAAG,CAAC;MACpD,IAAMo6I,KAAK,GAAG,0BAA4B,IAAI,CAAChuI,OAAO,CAAC4zE,iBAAkB;MAEzE,IAAI,IAAI,CAACm5D,UAAU,IAAIL,SAAS,CAACE,UAAU,EAAE;QAC3CoB,KAAK,CAACrrI,KAAK,CAAC8tC,IAAI,GAAG,IAAI,CAACw8F,WAAW,GAAGpgH,QAAQ,GAAG,IAAI;MACvD,CAAC,MAAM;QACLmhH,KAAK,CAACrrI,KAAK,CAACw7F,GAAG,GAAG,IAAI,CAAC6uC,YAAY,GAAGngH,QAAQ,GAAG,IAAI;MACvD;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAA78B,GAAA;IAAAC,KAAA,EAUA,SAAAo+I,qBAAqBxpI,CAAC,EAAEC,CAAC,EAAE;MACzB,IAAI4pI,MAAM;MACV,IAAI,IAAI,CAAC3B,UAAU,KAAKL,SAAS,CAACE,UAAU,EAAE;QAC5C8B,MAAM,GAAG7pI,CAAC,GAAG,IAAI,CAACooI,WAAW;MAC/B,CAAC,MAAM;QACLyB,MAAM,GAAG5pI,CAAC,GAAG,IAAI,CAACkoI,YAAY;MAChC;MACA,OAAO,IAAA55H,WAAK,EAACs7H,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA1+I,GAAA;IAAAC,KAAA,EAQA,SAAAq+I,0BAA0BzhH,QAAQ,EAAE;MAClC,IAAM14B,EAAE,GAAG,IAAI,CAACkuG,MAAM,CAAC,CAAC,CAACn1C,OAAO,CAAC,CAAC,CAAC9F,6BAA6B,CAAC,CAAC;MAClE,OAAOjzD,EAAE,CAAC,CAAC,GAAG04B,QAAQ,CAAC;IACzB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAA78B,GAAA;IAAAC,KAAA,EASA,SAAAw+I,0BAA0B76I,GAAG,EAAE;MAC7B,IAAMO,EAAE,GAAG,IAAI,CAACkuG,MAAM,CAAC,CAAC,CAACn1C,OAAO,CAAC,CAAC,CAAC5F,6BAA6B,CAAC,CAAC;MAClE,OAAO,IAAAl0C,WAAK,EAAC,CAAC,GAAGjf,EAAE,CAACP,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA5D,GAAA;IAAAC,KAAA,EAKA,SAAAsjD,OAAOo5D,QAAQ,EAAE;MACf,IAAI,CAACA,QAAQ,CAAC3/C,UAAU,EAAE;QACxB;MACF;MACA,IAAI,CAAC,IAAI,CAACqgF,kBAAkB,IAAI,CAAC,IAAI,CAACO,WAAW,CAAC,CAAC,EAAE;QACnD;MACF;MACA,IAAMh6I,GAAG,GAAG+4G,QAAQ,CAAC3/C,UAAU,CAAClF,SAAS,CAACj8C,UAAU;MACpD,IAAI,CAACihI,kBAAkB,GAAGl5I,GAAG;MAC7B,IAAI,CAAC46I,iBAAiB,CAAC56I,GAAG,CAAC;IAC7B;EAAC;AAAA,EAxVsBy4G,iBAAO;AAAA,IAAAh8G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GA2VjBs8I,UAAU;;;;;;;;ACnYzB,IAAAhgC,SAAA,GAAAl3G,sBAAA,CAAA7B,OAAA;AACA,IAAAsI,UAAA,GAAAzG,sBAAA,CAAA7B,OAAA;AACA,IAAA45C,IAAA,GAAA55C,OAAA;AACA,IAAAkrB,KAAA,GAAAlrB,OAAA;AACA,IAAAu2B,QAAA,GAAAv2B,OAAA;AAAmE,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AAAA,SAAAqD,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAzB,SAAA,qBAAAwB,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAtG,gBAAA0G,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA1G,MAAA,EAAA2G,KAAA,aAAA1E,CAAA,MAAAA,CAAA,GAAA0E,KAAA,CAAAnF,MAAA,EAAAS,CAAA,UAAA2E,UAAA,GAAAD,KAAA,CAAA1E,CAAA,GAAA2E,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAjH,MAAA,EAAAkH,cAAA,CAAAN,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AAAA,SAAA3G,aAAAuG,WAAA,EAAAW,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAT,iBAAA,CAAAF,WAAA,CAAA7B,SAAA,EAAAwC,UAAA,OAAAC,WAAA,EAAAV,iBAAA,CAAAF,WAAA,EAAAY,WAAA,GAAAJ,MAAA,CAAAC,cAAA,CAAAT,WAAA,iBAAAO,QAAA,mBAAAP,WAAA;AAAA,SAAAU,eAAAG,CAAA,QAAApF,CAAA,GAAAqF,YAAA,CAAAD,CAAA,gCAAAnB,OAAA,CAAAjE,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAqF,aAAAD,CAAA,EAAAE,CAAA,oBAAArB,OAAA,CAAAmB,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAG,CAAA,GAAAH,CAAA,CAAAjB,MAAA,CAAAqB,WAAA,kBAAAD,CAAA,QAAAvF,CAAA,GAAAuF,CAAA,CAAA3C,IAAA,CAAAwC,CAAA,EAAAE,CAAA,gCAAArB,OAAA,CAAAjE,CAAA,UAAAA,CAAA,YAAAwE,SAAA,yEAAAc,CAAA,GAAAG,MAAA,GAAAC,MAAA,EAAAN,CAAA;AAAA,SAAAO,WAAAP,CAAA,EAAAlB,CAAA,EAAAqB,CAAA,WAAArB,CAAA,GAAA0B,eAAA,CAAA1B,CAAA,GAAA2B,0BAAA,CAAAT,CAAA,EAAAU,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA9B,CAAA,EAAAqB,CAAA,QAAAK,eAAA,CAAAR,CAAA,EAAAf,WAAA,IAAAH,CAAA,CAAAnB,KAAA,CAAAqC,CAAA,EAAAG,CAAA;AAAA,SAAAM,2BAAAI,IAAA,EAAArD,IAAA,QAAAA,IAAA,KAAAqB,OAAA,CAAArB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA4B,SAAA,uEAAA0B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAH,0BAAA,cAAAV,CAAA,IAAAgB,OAAA,CAAA1D,SAAA,CAAA2D,OAAA,CAAAzD,IAAA,CAAAmD,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAhB,CAAA,aAAAU,yBAAA,YAAAA,0BAAA,aAAAV,CAAA;AAAA,SAAAQ,gBAAA1B,CAAA,IAAA0B,eAAA,GAAAb,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAwB,cAAA,CAAAC,IAAA,cAAAZ,gBAAA1B,CAAA,WAAAA,CAAA,CAAAuC,SAAA,IAAA1B,MAAA,CAAAwB,cAAA,CAAArC,CAAA,aAAA0B,eAAA,CAAA1B,CAAA;AAAA,SAAAwC,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAApC,SAAA,0DAAAmC,QAAA,CAAAjE,SAAA,GAAAqC,MAAA,CAAA8B,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAlE,SAAA,IAAA2B,WAAA,IAAAnG,KAAA,EAAAyI,QAAA,EAAA7B,QAAA,QAAAD,YAAA,aAAAE,MAAA,CAAAC,cAAA,CAAA2B,QAAA,iBAAA7B,QAAA,gBAAA8B,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AAAA,SAAAE,gBAAA5C,CAAA,EAAA6C,CAAA,IAAAD,eAAA,GAAA/B,MAAA,CAAAuB,cAAA,GAAAvB,MAAA,CAAAuB,cAAA,CAAAE,IAAA,cAAAM,gBAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,CAAAuC,SAAA,GAAAM,CAAA,SAAA7C,CAAA,YAAA4C,eAAA,CAAA5C,CAAA,EAAA6C,CAAA,KAPnE;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAOM61I,YAAY,0BAAA5+B,QAAA;EAChB;AACF;AACA;EACE,SAAA4+B,aAAYvuI,OAAO,EAAE;IAAA,IAAAnH,KAAA;IAAAtJ,eAAA,OAAAg/I,YAAA;IACnBvuI,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;IAEhCnH,KAAA,GAAAvB,UAAA,OAAAi3I,YAAA,GAAM;MACJ3uI,OAAO,EAAEy+B,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACtC5uC,MAAM,EAAEsQ,OAAO,CAACtQ;IAClB,CAAC;;IAED;AACJ;AACA;AACA;IACImJ,KAAA,CAAKkP,MAAM,GAAG/H,OAAO,CAAC+H,MAAM,GAAG/H,OAAO,CAAC+H,MAAM,GAAG,IAAI;IAEpD,IAAMo0C,SAAS,GACbn8C,OAAO,CAACm8C,SAAS,KAAK/hD,SAAS,GAAG4F,OAAO,CAACm8C,SAAS,GAAG,gBAAgB;IAExE,IAAMnK,KAAK,GAAGhyC,OAAO,CAACgyC,KAAK,KAAK53C,SAAS,GAAG4F,OAAO,CAACgyC,KAAK,GAAG,GAAG;IAC/D,IAAMm+D,QAAQ,GACZnwG,OAAO,CAACmwG,QAAQ,KAAK/1G,SAAS,GAAG4F,OAAO,CAACmwG,QAAQ,GAAG,eAAe;IACrE,IAAMzI,MAAM,GAAGrpE,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CopE,MAAM,CAACkJ,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;IACrClJ,MAAM,CAACmJ,KAAK,GAAGV,QAAQ;IACvBzI,MAAM,CAACnnE,WAAW,CAChB,OAAOyR,KAAK,KAAK,QAAQ,GAAG3T,QAAQ,CAAC80E,cAAc,CAACnhE,KAAK,CAAC,GAAGA,KAC/D,CAAC;IAED01D,MAAM,CAACxuG,gBAAgB,CACrByD,kBAAS,CAAC/B,KAAK,EACf/B,KAAA,CAAKi4G,YAAY,CAAC34G,IAAI,CAAAU,KAAK,CAAC,EAC5B,KACF,CAAC;IAED,IAAMk4G,UAAU,GACd50D,SAAS,GAAG,GAAG,GAAG3P,uBAAkB,GAAG,GAAG,GAAGE,kBAAa;IAC5D,IAAM9sC,OAAO,GAAG/G,KAAA,CAAK+G,OAAO;IAC5BA,OAAO,CAACu8C,SAAS,GAAG40D,UAAU;IAC9BnxG,OAAO,CAAC2gC,WAAW,CAACmnE,MAAM,CAAC;IAAC,OAAA7uG,KAAA;EAC9B;;EAEA;AACF;AACA;AACA;EAHER,SAAA,CAAAk2I,YAAA,EAAA5+B,QAAA;EAAA,OAAAhgH,YAAA,CAAA4+I,YAAA;IAAA3+I,GAAA;IAAAC,KAAA,EAIA,SAAAihH,aAAar3G,KAAK,EAAE;MAClBA,KAAK,CAAC3J,cAAc,CAAC,CAAC;MACtB,IAAI,CAAC0+I,kBAAkB,CAAC,CAAC;IAC3B;;IAEA;AACF;AACA;EAFE;IAAA5+I,GAAA;IAAAC,KAAA,EAGA,SAAA2+I,mBAAA,EAAqB;MACnB,IAAMnoI,GAAG,GAAG,IAAI,CAAC47F,MAAM,CAAC,CAAC;MACzB,IAAMt1C,IAAI,GAAGtmD,GAAG,CAACymD,OAAO,CAAC,CAAC;MAC1B,IAAM/kD,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM,GACvB4kD,IAAI,CAACzsC,aAAa,CAAC,CAAC,CAAC1R,SAAS,CAAC,CAAC,GAChC,IAAAiP,oBAAc,EAAC,IAAI,CAAC1V,MAAM,EAAE4kD,IAAI,CAACzsC,aAAa,CAAC,CAAC,CAAC;MACrDysC,IAAI,CAAC3E,WAAW,CAAC,IAAAD,mBAAiB,EAAChgD,MAAM,CAAC,CAAC;IAC7C;EAAC;AAAA,EA/DwBkkG,iBAAO;AAAA,IAAAh8G,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAkEnBo+I,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3F3B,IAAA/6B,YAAA,GAAAj+G,sBAAA,CAAA7B,OAAA;AACA,IAAAi8G,QAAA,GAAAp6G,sBAAA,CAAA7B,OAAA;AACA,IAAA+6I,WAAA,GAAAl5I,sBAAA,CAAA7B,OAAA;AACA,IAAAg7I,cAAA,GAAAn5I,sBAAA,CAAA7B,OAAA;AACA,IAAAi7I,YAAA,GAAAp5I,sBAAA,CAAA7B,OAAA;AACA,IAAA+/G,OAAA,GAAAl+G,sBAAA,CAAA7B,OAAA;AACA,IAAAk7I,UAAA,GAAAr5I,sBAAA,CAAA7B,OAAA;AACA,IAAAggH,KAAA,GAAAn+G,sBAAA,CAAA7B,OAAA;AACA,IAAAm7I,WAAA,GAAAt5I,sBAAA,CAAA7B,OAAA;AACA,IAAAo7I,aAAA,GAAAv5I,sBAAA,CAAA7B,OAAA;AACA,IAAAqsH,SAAA,GAAArsH,OAAA;AAA+C,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;;;;ACZ/CmB,OAAA;AACA,IAAAq7I,IAAA,GAAAr7I,OAAA;AACA,IAAAusG,KAAA,GAAA1qG,sBAAA,CAAA7B,OAAA;AACA,IAAAs7I,IAAA,GAAAz5I,sBAAA,CAAA7B,OAAA;AACA,IAAAu7I,QAAA,GAAAv7I,OAAA;AAAsE,SAAA6B,uBAAAhD,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAoD,UAAA,GAAApD,GAAA,KAAApC,OAAA,EAAAoC,GAAA;AALtE;;AAOA;AACA,IAAI28I,eAAe,GAAG;EACnB;EACA/yF,SAAS,EAAE,sCAAsC;EAEjD;EACA;EACAknD,MAAM,EAAE,CACP,IAAIu3B,aAAS,CAAC;IACZz7H,MAAM,EAAE,IAAIykI,YAAG,CAAC;MAChB,KAAK,EAAE;IACP,CAAC;EACH,CAAC,CAAC,CACD;EAEH;EACA9zB,SAAS,EAAE,KAAK;EAEhB;EACAK,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA,IAAI9pG,GAAG,GAAG,IAAI85G,QAAG,CAAC;EAChBzwH,MAAM,EAAE,KAAK;EACb2zG,MAAM,EAAE,CACN,IAAIu3B,aAAS,CAAC;IACZz7H,MAAM,EAAE,IAAIykI,YAAG,CAAC;EAClB,CAAC,CAAC,CACH;EACDj3E,IAAI,EAAE,IAAI9L,SAAI,CAAC;IACbr1C,MAAM,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;IACzBo3C,IAAI,EAAE;EACR,CAAC,CAAC;EACF;EACCgxD,QAAQ,EAAE,IAAAsO,iBAAe,EAAC,CAAC,CAACjwH,MAAM,CAAC,CAChC,IAAIo1I,oBAAW,CAAC6H,eAAe,CAAC,CAClC;AACJ,CAAC,CAAC;;;AG7CF,IAAIiB,UAAU,GAAG,4BAA4B;AAE7C,IAAIC,SAAS,GAAGF,MAAM,CAACX,MAAM,CAACc,MAAM;AAEpC,SAASA,MAAMA,CAACC,UAAU,EAAE;EAC1BF,SAAS,CAAC77I,IAAI,CAAC,IAAI,EAAE+7I,UAAU,CAAC;EAChC,IAAI,CAACC,GAAG,GAAG;IACTr+I,IAAI,EAAEg+I,MAAM,CAACX,MAAM,CAACiB,OAAO;IAC3BC,gBAAgB,EAAE,EAAE;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,MAAM,EAAE,SAAAA,CAAU58I,EAAE,EAAE;MACpB,IAAI,CAAC08I,gBAAgB,CAACl3I,IAAI,CAACxF,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC;IAClD,CAAC;IACDxD,OAAO,EAAE,SAAAA,CAAUwD,EAAE,EAAE;MACrB,IAAI,CAAC28I,iBAAiB,CAACn3I,IAAI,CAACxF,EAAE,CAAC;IACjC;EACF,CAAC;EAEDm8I,MAAM,CAACX,MAAM,CAACiB,OAAO,GAAG,IAAI;AAC9B;AAEAN,MAAM,CAACX,MAAM,CAACc,MAAM,GAAGA,MAAM;AAC7B,IAAIO,aAAa,EAAEC,cAAc;AAEjC,IAAIpxG,MAAM,GAAGywG,MAAM,CAACX,MAAM,CAAC9vG,MAAM;AACjC,IAAI,CAAC,CAACA,MAAM,IAAI,CAACA,MAAM,CAACqxG,eAAe,KAAK,OAAOC,SAAS,KAAK,WAAW,EAAE;EAC5E,IAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAAQ;EAC5D,IAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAQ,KAAK,QAAQ,GAAG,KAAK,GAAG,IAAI;EAC5D,IAAIC,EAAE,GAAG,IAAIJ,SAAS,CAACG,QAAQ,GAAG,KAAK,GAAGF,QAAQ,GAAG,GAAG,UAAuB,GAAG,GAAG,CAAC;EACtFG,EAAE,CAACC,SAAS,GAAG,UAAS33I,KAAK,EAAE;IAC7Bm3I,aAAa,GAAG,CAAC,CAAC;IAClBC,cAAc,GAAG,EAAE;IAEnB,IAAI3+I,IAAI,GAAGqlE,IAAI,CAAC/9B,KAAK,CAAC//B,KAAK,CAACvH,IAAI,CAAC;IAEjC,IAAIA,IAAI,CAAC5C,IAAI,KAAK,QAAQ,EAAE;MAC1B,IAAIwmH,OAAO,GAAG,KAAK;MACnB5jH,IAAI,CAACm/I,MAAM,CAAC7wI,OAAO,CAAC,UAAS8wI,KAAK,EAAE;QAClC,IAAI,CAACA,KAAK,CAACC,KAAK,EAAE;UAChB,IAAIC,SAAS,GAAGC,cAAc,CAAC1hI,MAAM,CAAC2hI,aAAa,EAAEJ,KAAK,CAACvuI,EAAE,CAAC;UAC9D,IAAIyuI,SAAS,EAAE;YACb17B,OAAO,GAAG,IAAI;UAChB;QACF;MACF,CAAC,CAAC;;MAEF;MACAA,OAAO,GAAGA,OAAO,IAAI5jH,IAAI,CAACm/I,MAAM,CAAC/9I,KAAK,CAAC,UAASg+I,KAAK,EAAE;QACrD,OAAOA,KAAK,CAAChiJ,IAAI,KAAK,KAAK,IAAIgiJ,KAAK,CAACK,SAAS,CAACC,EAAE;MACnD,CAAC,CAAC;MAEF,IAAI97B,OAAO,EAAE;QACXz8F,OAAO,CAACnkB,KAAK,CAAC,CAAC;QAEfhD,IAAI,CAACm/I,MAAM,CAAC7wI,OAAO,CAAC,UAAU8wI,KAAK,EAAE;UACnCO,QAAQ,CAAC9hI,MAAM,CAAC2hI,aAAa,EAAEJ,KAAK,CAAC;QACvC,CAAC,CAAC;QAEFT,cAAc,CAACrwI,OAAO,CAAC,UAAUkvB,CAAC,EAAE;UAClCoiH,YAAY,CAACpiH,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIuhH,QAAQ,CAACc,MAAM,EAAE;QAAE;QAC5Bd,QAAQ,CAACc,MAAM,CAAC,CAAC;MACnB;IACF;IAEA,IAAI7/I,IAAI,CAAC5C,IAAI,KAAK,QAAQ,EAAE;MAC1B6hJ,EAAE,CAAChxD,KAAK,CAAC,CAAC;MACVgxD,EAAE,CAACa,OAAO,GAAG,YAAY;QACvBf,QAAQ,CAACc,MAAM,CAAC,CAAC;MACnB,CAAC;IACH;IAEA,IAAI7/I,IAAI,CAAC5C,IAAI,KAAK,gBAAgB,EAAE;MAClC+pB,OAAO,CAAC3H,GAAG,CAAC,2BAA2B,CAAC;MAExCugI,kBAAkB,CAAC,CAAC;IACtB;IAEA,IAAI//I,IAAI,CAAC5C,IAAI,KAAK,OAAO,EAAE;MACzB+pB,OAAO,CAACL,KAAK,CAAC,eAAe,GAAG9mB,IAAI,CAAC8mB,KAAK,CAACqS,OAAO,GAAG,IAAI,GAAGn5B,IAAI,CAAC8mB,KAAK,CAACwK,KAAK,CAAC;MAE7EyuH,kBAAkB,CAAC,CAAC;MAEpB,IAAItuB,OAAO,GAAGuuB,kBAAkB,CAAChgJ,IAAI,CAAC;MACtCmsC,QAAQ,CAACiS,IAAI,CAAC/P,WAAW,CAACojF,OAAO,CAAC;IACpC;EACF,CAAC;AACH;AAEA,SAASsuB,kBAAkBA,CAAA,EAAG;EAC5B,IAAItuB,OAAO,GAAGtlF,QAAQ,CAACmuE,cAAc,CAAC2jC,UAAU,CAAC;EACjD,IAAIxsB,OAAO,EAAE;IACXA,OAAO,CAACrxH,MAAM,CAAC,CAAC;EAClB;AACF;AAEA,SAAS4/I,kBAAkBA,CAAChgJ,IAAI,EAAE;EAChC,IAAIyxH,OAAO,GAAGtlF,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC3CqlF,OAAO,CAAC5gH,EAAE,GAAGotI,UAAU;;EAEvB;EACA,IAAI9kH,OAAO,GAAGgT,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC3C,IAAI6zG,UAAU,GAAG9zG,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC9CjT,OAAO,CAAC+mH,SAAS,GAAGlgJ,IAAI,CAAC8mB,KAAK,CAACqS,OAAO;EACtC8mH,UAAU,CAACC,SAAS,GAAGlgJ,IAAI,CAAC8mB,KAAK,CAACwK,KAAK;EAEvCmgG,OAAO,CAAC5zE,SAAS,GACf,wNAAwN,GACtN,mFAAmF,GACnF,yEAAyE,GACzE,qEAAqE,GAAG1kB,OAAO,CAAC0kB,SAAS,GAAG,QAAQ,GACpG,OAAO,GAAGoiG,UAAU,CAACpiG,SAAS,GAAG,QAAQ,GAC3C,QACD;EAED,OAAO4zE,OAAO;AAEhB;AAEA,SAAS0uB,UAAUA,CAAC9C,MAAM,EAAExsI,EAAE,EAAE;EAC9B,IAAIuvI,OAAO,GAAG/C,MAAM,CAAC+C,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,EAAE;EACX;EAEA,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAI9+H,CAAC,EAAEnP,CAAC,EAAEkuI,GAAG;EAEb,KAAK/+H,CAAC,IAAI6+H,OAAO,EAAE;IACjB,KAAKhuI,CAAC,IAAIguI,OAAO,CAAC7+H,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACvB++H,GAAG,GAAGF,OAAO,CAAC7+H,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnP,CAAC,CAAC;MACtB,IAAIkuI,GAAG,KAAKzvI,EAAE,IAAK3Q,KAAK,CAACC,OAAO,CAACmgJ,GAAG,CAAC,IAAIA,GAAG,CAACA,GAAG,CAACthJ,MAAM,GAAG,CAAC,CAAC,KAAK6R,EAAG,EAAE;QACpEwvI,OAAO,CAACh5I,IAAI,CAACka,CAAC,CAAC;MACjB;IACF;EACF;EAEA,IAAI87H,MAAM,CAAC9vG,MAAM,EAAE;IACjB8yG,OAAO,GAAGA,OAAO,CAAC3zI,MAAM,CAACyzI,UAAU,CAAC9C,MAAM,CAAC9vG,MAAM,EAAE18B,EAAE,CAAC,CAAC;EACzD;EAEA,OAAOwvI,OAAO;AAChB;AAEA,SAASV,QAAQA,CAACtC,MAAM,EAAE+B,KAAK,EAAE;EAC/B,IAAIgB,OAAO,GAAG/C,MAAM,CAAC+C,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAIA,OAAO,CAAChB,KAAK,CAACvuI,EAAE,CAAC,IAAI,CAACwsI,MAAM,CAAC9vG,MAAM,EAAE;IACvC,IAAI1rC,EAAE,GAAG,IAAI0+I,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAEnB,KAAK,CAACK,SAAS,CAACC,EAAE,CAAC;IACzEN,KAAK,CAACC,KAAK,GAAG,CAACe,OAAO,CAAChB,KAAK,CAACvuI,EAAE,CAAC;IAChCuvI,OAAO,CAAChB,KAAK,CAACvuI,EAAE,CAAC,GAAG,CAAChP,EAAE,EAAEu9I,KAAK,CAACoB,IAAI,CAAC;EACtC,CAAC,MAAM,IAAInD,MAAM,CAAC9vG,MAAM,EAAE;IACxBoyG,QAAQ,CAACtC,MAAM,CAAC9vG,MAAM,EAAE6xG,KAAK,CAAC;EAChC;AACF;AAEA,SAASG,cAAcA,CAAClC,MAAM,EAAExsI,EAAE,EAAE;EAClC,IAAIuvI,OAAO,GAAG/C,MAAM,CAAC+C,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAI,CAACA,OAAO,CAACvvI,EAAE,CAAC,IAAIwsI,MAAM,CAAC9vG,MAAM,EAAE;IACjC,OAAOgyG,cAAc,CAAClC,MAAM,CAAC9vG,MAAM,EAAE18B,EAAE,CAAC;EAC1C;EAEA,IAAI6tI,aAAa,CAAC7tI,EAAE,CAAC,EAAE;IACrB;EACF;EACA6tI,aAAa,CAAC7tI,EAAE,CAAC,GAAG,IAAI;EAExB,IAAI4vI,MAAM,GAAGpD,MAAM,CAAC98H,KAAK,CAAC1P,EAAE,CAAC;EAE7B8tI,cAAc,CAACt3I,IAAI,CAAC,CAACg2I,MAAM,EAAExsI,EAAE,CAAC,CAAC;EAEjC,IAAI4vI,MAAM,IAAIA,MAAM,CAACpC,GAAG,IAAIoC,MAAM,CAACpC,GAAG,CAACE,gBAAgB,CAACv/I,MAAM,EAAE;IAC9D,OAAO,IAAI;EACb;EAEA,OAAOmhJ,UAAU,CAACtiI,MAAM,CAAC2hI,aAAa,EAAE3uI,EAAE,CAAC,CAACkrD,IAAI,CAAC,UAAUlrD,EAAE,EAAE;IAC7D,OAAO0uI,cAAc,CAAC1hI,MAAM,CAAC2hI,aAAa,EAAE3uI,EAAE,CAAC;EACjD,CAAC,CAAC;AACJ;AAEA,SAAS+uI,YAAYA,CAACvC,MAAM,EAAExsI,EAAE,EAAE;EAChC,IAAI4vI,MAAM,GAAGpD,MAAM,CAAC98H,KAAK,CAAC1P,EAAE,CAAC;EAC7BwsI,MAAM,CAACiB,OAAO,GAAG,CAAC,CAAC;EACnB,IAAImC,MAAM,EAAE;IACVA,MAAM,CAACpC,GAAG,CAACr+I,IAAI,GAAGq9I,MAAM,CAACiB,OAAO;EAClC;EAEA,IAAImC,MAAM,IAAIA,MAAM,CAACpC,GAAG,IAAIoC,MAAM,CAACpC,GAAG,CAACG,iBAAiB,CAACx/I,MAAM,EAAE;IAC/DyhJ,MAAM,CAACpC,GAAG,CAACG,iBAAiB,CAAClwI,OAAO,CAAC,UAAUoyI,EAAE,EAAE;MACjDA,EAAE,CAACrD,MAAM,CAACiB,OAAO,CAAC;IACpB,CAAC,CAAC;EACJ;EAEA,OAAOjB,MAAM,CAAC98H,KAAK,CAAC1P,EAAE,CAAC;EACvBwsI,MAAM,CAACxsI,EAAE,CAAC;EAEV4vI,MAAM,GAAGpD,MAAM,CAAC98H,KAAK,CAAC1P,EAAE,CAAC;EACzB,IAAI4vI,MAAM,IAAIA,MAAM,CAACpC,GAAG,IAAIoC,MAAM,CAACpC,GAAG,CAACE,gBAAgB,CAACv/I,MAAM,EAAE;IAC9DyhJ,MAAM,CAACpC,GAAG,CAACE,gBAAgB,CAACjwI,OAAO,CAAC,UAAUoyI,EAAE,EAAE;MAChDA,EAAE,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO,IAAI;EACb;AACF","file":"mapa_openlayers.3cb02ec0.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.1.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection,\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions(),\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude,\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy,\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading),\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: ['coalesce',['get','propertynanme'],'default value']]\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n  [Ops.ToString]: createParser(\n    StringType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(CanvasRenderingContext2D.prototype, {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; i += 2) {\n        const property = instructionsAtIndex[i];\n        const instructionAtIndex = instructionsAtIndex[i + 1];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          replay.execute(\n            context,\n            scaledCanvasSize,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree,\n          );\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const z = zs[i];\n            if (!this.deferredZIndexContexts_[z]) {\n              this.deferredZIndexContexts_[z] = [];\n            }\n            this.deferredZIndexContexts_[z].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style\n */\n\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  compose as composeTransform,\n  makeInverse,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom\n */\n\nexport {default as Circle} from './geom/Circle.js';\nexport {default as Geometry} from './geom/Geometry.js';\nexport {default as GeometryCollection} from './geom/GeometryCollection.js';\nexport {default as LinearRing} from './geom/LinearRing.js';\nexport {default as LineString} from './geom/LineString.js';\nexport {default as MultiLineString} from './geom/MultiLineString.js';\nexport {default as MultiPoint} from './geom/MultiPoint.js';\nexport {default as MultiPolygon} from './geom/MultiPolygon.js';\nexport {default as Point} from './geom/Point.js';\nexport {default as Polygon} from './geom/Polygon.js';\nexport {default as SimpleGeometry} from './geom/SimpleGeometry.js';\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml',\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source),\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_),\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type Array<FeatureType> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   */\n  removeFeatures(features) {\n    const removedFeatures = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      const removedFeature = this.removeFeatureInternal(feature);\n      if (removedFeature) {\n        removedFeatures.push(removedFeature);\n      }\n    }\n    if (removedFeatures.length > 0) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {FeatureType|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform,\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio,\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection,\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform,\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance,\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat),\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options,\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      }),\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop,\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight,\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension,\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent()),\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState)),\n      ),\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false,\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default>|null} declutter Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").FeatureLike>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").FeatureLike>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol\n */\n\nexport {default as Collection} from './Collection.js';\nexport {default as Disposable} from './Disposable.js';\nexport {default as Feature} from './Feature.js';\nexport {default as Geolocation} from './Geolocation.js';\nexport {default as Graticule} from './layer/Graticule.js';\nexport {default as Image} from './Image.js';\nexport {default as ImageWrapper} from './Image.js';\nexport {default as ImageCanvas} from './ImageCanvas.js';\nexport {default as ImageTile} from './ImageTile.js';\nexport {default as Kinetic} from './Kinetic.js';\nexport {default as Map} from './Map.js';\nexport {default as MapBrowserEvent} from './MapBrowserEvent.js';\nexport {default as MapBrowserEventHandler} from './MapBrowserEventHandler.js';\nexport {default as MapEvent} from './MapEvent.js';\nexport {default as Object} from './Object.js';\nexport {default as Observable} from './Observable.js';\nexport {default as Overlay} from './Overlay.js';\nexport {default as Tile} from './Tile.js';\nexport {default as TileCache} from './TileCache.js';\nexport {default as TileQueue} from './TileQueue.js';\nexport {default as TileRange} from './TileRange.js';\nexport {default as VectorRenderTile} from './VectorRenderTile.js';\nexport {default as VectorTile} from './VectorTile.js';\nexport {default as View} from './View.js';\n\nexport {getUid, VERSION} from './util.js';\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n      const srcWidth = getWidth(src.extent) * stitchScale;\n      const srcHeight = getHeight(src.extent) * stitchScale;\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_,\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this,\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.getRenderContext(frameState);\n    const canvas = this.context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits,\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight],\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this),\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this),\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this),\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection,\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection,\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position),\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this,\n        ),\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_,\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_,\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent),\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent),\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this,\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n * For cartesian measurements of the scaleline, you need to set the\n * `getPointResolution` method of your projection to simply return the input\n * value, e.g. `projection.setGetPointResolution(r => r);`\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n          ? 'ol-scale-bar'\n          : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits,\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 1e-6) {\n        suffix = 'nm';\n        pointResolution *= 1e9;\n      } else if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>',\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm',\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      target: options.target,\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false,\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false,\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2,\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this),\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromUserExtent} from '../proj.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label,\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : fromUserExtent(this.extent, view.getProjection());\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/control\n */\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\nexport {defaults} from './control/defaults.js';\n","//Importamos los módulos requeridos\r\nimport 'ol/ol.css'\r\nimport {Map, View} from 'ol'\r\nimport TileLayer from 'ol/layer/Tile'\r\nimport OSM from 'ol/source/OSM'\r\nimport {defaults as defaultControls, OverviewMap} from 'ol/control.js'\r\n\r\n//Parámetro options\r\nvar overviewoptions = {\r\n   //Definimos la clase para asignar un estilo concreto al objeto\r\n   className: 'ol-overviewmap ol-custom-overviewmap',\r\n\r\n   //Capas que se mostrarán en el OverviewMap\r\n   //Mantenemos la misma capa del mapa aunque podría ser distinta\r\n   layers: [\r\n    new TileLayer({\r\n      source: new OSM({\r\n      'url': 'http://{a-c}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png'\r\n      })\r\n    })\r\n    ],\r\n\r\n  //Oculto por defecto\r\n  collapsed: false,\r\n\r\n  //ToolTip\r\n  tipLabel: 'Mapa de referencia'\r\n}\r\n      \r\n//Definimos la variable map que alojará nuestro mapa\r\nvar map = new Map({\r\n  target: 'map',\r\n  layers: [\r\n    new TileLayer({\r\n      source: new OSM()\r\n    })\r\n  ],\r\n  view: new View({\r\n    center: [312807, 5156486],\r\n    zoom: 14\r\n  }),\r\n  //Agregamos nuestro control OverviewMap extendiendo los controles por defecto\r\n   controls: defaultControls().extend([\r\n      new OverviewMap(overviewoptions)\r\n   ])\r\n});","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}